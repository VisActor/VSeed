"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["86630"],{21527:function(e,n,t){t.r(n),t.d(n,{default:()=>o});var r=t(69787),s=t(15825),a=t(53671);function i(e){let n={a:"a",h1:"h1",h2:"h2",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"透视与组合",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#透视与组合",children:"#"}),"透视与组合"]}),"\n",(0,r.jsxs)(n.h2,{id:"指标分组",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#指标分组",children:"#"}),"指标分组"]}),"\n",(0,r.jsx)(a.Z,{code:"import { useRef, useEffect, memo } from 'react'\nimport VChart from '@visactor/vchart'\nimport { register, PivotChart, PivotChartConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroupId } from '@visactor/vseed'\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n      dimensions: [{ id: 'date', alias: '日期' }],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"}),"\n",(0,r.jsxs)(n.h2,{id:"行列透视",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#行列透视",children:"#"}),"行列透视"]}),"\n",(0,r.jsx)(a.Z,{code:"import { useRef, useEffect, memo } from 'react'\nimport VChart from '@visactor/vchart'\nimport { register, PivotChart, PivotChartConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroupId } from '@visactor/vseed'\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'column',\n      dataset: [\n        { date: '2019', category: 'food', profit: 10, sales: 88 },\n        { date: '2019', category: 'book', profit: 33, sales: 210 },\n        { date: '2019', category: 'tools', profit: 27, sales: 150 },\n\n        { date: '2020', category: 'food', profit: 10, sales: 100 },\n        { date: '2020', category: 'book', profit: 11, sales: 122 },\n        { date: '2020', category: 'tools', profit: 23, sales: 150 },\n\n        { date: '2021', category: 'food', profit: 10, sales: 100 },\n        { date: '2021', category: 'book', profit: 30, sales: 190 },\n        { date: '2021', category: 'tools', profit: 15, sales: 50 },\n      ],\n      dimensions: [\n        { id: 'date', alias: '日期' },\n        { id: 'category', alias: '类型', location: 'columnDimension' },\n      ],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2FpivotAndCombine.mdx"]={toc:[{id:"指标分组",text:"指标分组",depth:2},{id:"行列透视",text:"行列透视",depth:2}],title:"透视与组合",headingTitle:"透视与组合",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=86630.6526140a.js.map