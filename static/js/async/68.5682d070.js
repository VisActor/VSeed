"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["68"],{9987:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var t=r(31549),s=r(6603),o=r(89956);function l(e){return(0,t.jsx)(o.Z,{code:'const Demo = () => {\n  const vseed: VSeed = {\n  "chartType": "bar",\n  "dataset": [\n      { "date": "2019", "goalProfit": 10, "profit": 10, "sales": 100, "leftCount": 1, "salesCount": 100 },\n      { "date": "2020", "goalProfit": 30, "profit": 30, "sales": 320, "leftCount": 2, "salesCount": 200 },\n      { "date": "2021", "goalProfit": 30, "profit": 30, "sales": 300, "leftCount": 3, "salesCount": 300 },\n      { "date": "2022", "goalProfit": 50, "profit": 50, "sales": 240, "leftCount": 4, "salesCount": 400 },\n      { "date": "2023", "goalProfit": 40, "profit": 40, "sales": 500, "leftCount": 5, "salesCount": 500 }\n  ],\n  "dimensions": [{ "id": "date" }],\n  "measures":   [{ "id": "profit" }],\n}\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log(\'zVSeed parse success!!!\')\n  } else {\n    console.error(\'zVSeed parse error!!!\')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect } from \'react\'\nimport { useDark } from \'rspress/runtime\'\nimport VChart from \'@visactor/vchart\'\nimport { ListTable, PivotTable, PivotChart, register } from \'@visactor/vtable\'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isPivotTable, isTable, zVSeed } from \'@visactor/vseed\'\n\nregisterAll()\nregister.chartModule(\'vchart\', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? \'dark\' : \'light\'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n    console.log(\'builder\', builder)\n    console.log(\'builder performance\', builder.performance)\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: \'100%\' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log(\'builder\', builderRef.current)\n        console.log(\'spec\', builderRef.current.spec)\n        console.log(\'vseed\', builderRef.current.vseed)\n        console.log(\'advancedVSeed\', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    ></div>\n  )\n}\n\nexport default Demo',language:"tsx",direction:"",editorPosition:"left"})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}let i=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh-CN%2Fplayground%2Findex.mdx"]={toc:[],title:"标题",headingTitle:"",frontmatter:{title:"标题",playgroundDirection:"horizontal",pageType:"custom"}}}}]);
//# sourceMappingURL=68.5682d070.js.map