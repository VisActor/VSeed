{"version":3,"file":"static/js/async/5653.b169955c.js","sources":["webpack://website/./docs/zh-CN/development/designPhilosophy/dataReshape/dataReshapePrinciple.md"],"sourcesContent":["const frontmatter = {};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@1.45.3_@rspress+core@2.0.0-beta.28_@types+react@18.0.0_acorn_f6d4f2a217c455639d7206d79af6fedc/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    img: \"img\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"数据重塑-原理\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#数据重塑-原理\",\n        children: \"#\"\n      }), \"数据重塑-原理\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive info\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"数据重塑\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsx(_components.p, {\n          children: \"\\nVSeed 提出一种通用的维度重塑方法， 旨在进一步降低数据可视化门槛\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"数据重塑是指将数据从一种结构化形式转换为另一种结构化形式的过程，核心在于改变数据的组织方式（如行、列、索引、层级），以适应不同的分析或处理需求，同时保持数据的完整性。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"维度重塑\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#维度重塑\",\n        children: \"#\"\n      }), \"维度重塑\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Python 和 R 语言有工具已经支持了维度重塑\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Python Pandas 提供了 \", _jsx(_components.code, {\n          children: \"pivot\"\n        }), \" 与 \", _jsx(_components.code, {\n          children: \"melt\"\n        }), \" 进行数据重塑\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"R tidyverse 提供了 \", _jsx(_components.code, {\n          children: \"pivot_longer\"\n        }), \" 与 \", _jsx(_components.code, {\n          children: \"pivot_wider\"\n        }), \" 进行数据重塑\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"升维与降维\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#升维与降维\",\n        children: \"#\"\n      }), \"升维与降维\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"升维、降维在精神上符合范畴论的思想（对象与态射，以及同构），但在实现上并不严格遵循范畴论。\\n特殊强调：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"升维时， 会“凭空”创建不存在的“指标名称”与“指标值”信息\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"降维时， 会“移除”数据中存在的“指标名称”与“指标值”信息\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"升维可以完整的转换数据， 但维度列名称会出现空值， 因此支持填补额外的信息。\\n降维会丢失信息内容， 因此需要额外的保存转换信息， 才能达到真正意义上的同构转换， 否则信息一定会丢失。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/commonDataReshape.png\",\n        alt: \"commonDataReshape\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"分组升维与降维\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#分组升维与降维\",\n        children: \"#\"\n      }), \"分组升维与降维\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"同普通的升维和降维， 有类似的信息增加 或 信息丢失场景。 此外由于分组的引入， 会产生更多的空数据\\n作用意义：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"指标分组： 以轻松通过分组升维， 快速处理明细数据\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"多组查询： 通过多条 SQL 可以轻松获取到多份明细数据， 它们可以按照分组降维的方式， 合并为一份数据。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/groupedDataReshape.png\",\n        alt: \"groupedDataReshape\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"规律推导\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#规律推导\",\n        children: \"#\"\n      }), \"规律推导\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"升维\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#升维\",\n        children: \"#\"\n      }), \"升维\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/ruleDataReshape.png\",\n        alt: \"rule\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/commonDataReshape2.png\",\n        alt: \"commonDataReshape2\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"多指标升维， 指标数量变为一， 1 个指标升维后， 指标也还是 1。\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"多维度升维， 维度多一个， 0 个维度也会加 1\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"0 个维度 1 个指标， 可以反复升维， 得到任意个维度和 1 个指标（从而一个指标， 也能画个柱状图）\"\n          }), \"\\n\"]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"降维\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#降维\",\n        children: \"#\"\n      }), \"降维\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/ruleDataReshape2.png\",\n        alt: \"rule\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/groupedDataReshape2.png\",\n        alt: \"groupedDataReshape2\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"多指标降维， 维值与指标会笛卡尔积， 成为新的指标\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"多维度降维， 多个维度值会笛卡尔积， 成为新的维度\"\n          }), \"\\n\"]\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"示例\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#示例\",\n        children: \"#\"\n      }), \"示例\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"0个维度-1个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#0个维度-1个指标\",\n        children: \"#\"\n      }), \"0个维度 1个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/0d1m.png\",\n        alt: \"0d1m\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"0个维度-3个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#0个维度-3个指标\",\n        children: \"#\"\n      }), \"0个维度 3个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/0d3m.png\",\n        alt: \"0d3m\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1个维度-1个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#1个维度-1个指标\",\n        children: \"#\"\n      }), \"1个维度 1个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/1d1m.png\",\n        alt: \"1d1m\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"1个维度-2个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#1个维度-2个指标\",\n        children: \"#\"\n      }), \"1个维度 2个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/1d2m.png\",\n        alt: \"1d2m\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2个维度-1个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#2个维度-1个指标\",\n        children: \"#\"\n      }), \"2个维度 1个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/2d1m.png\",\n        alt: \"2d1m\"\n      })\n    }), \"\\n\", _jsxs(_components.h4, {\n      id: \"2个维度-2个指标\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#2个维度-2个指标\",\n        children: \"#\"\n      }), \"2个维度 2个指标\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/images/2d2m.png\",\n        alt: \"2d2m\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\nMDXContent.__RSPRESS_PAGE_META = {};\n\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fdevelopment%2FdesignPhilosophy%2FdataReshape%2FdataReshapePrinciple.md\"] = {\"toc\":[{\"id\":\"维度重塑\",\"text\":\"维度重塑\",\"depth\":2},{\"id\":\"升维与降维\",\"text\":\"升维与降维\",\"depth\":2},{\"id\":\"分组升维与降维\",\"text\":\"分组升维与降维\",\"depth\":2},{\"id\":\"规律推导\",\"text\":\"规律推导\",\"depth\":2},{\"id\":\"升维\",\"text\":\"升维\",\"depth\":3},{\"id\":\"降维\",\"text\":\"降维\",\"depth\":3},{\"id\":\"示例\",\"text\":\"示例\",\"depth\":2},{\"id\":\"0个维度-1个指标\",\"text\":\"0个维度 1个指标\",\"depth\":4},{\"id\":\"0个维度-3个指标\",\"text\":\"0个维度 3个指标\",\"depth\":4},{\"id\":\"1个维度-1个指标\",\"text\":\"1个维度 1个指标\",\"depth\":4},{\"id\":\"1个维度-2个指标\",\"text\":\"1个维度 2个指标\",\"depth\":4},{\"id\":\"2个维度-1个指标\",\"text\":\"2个维度 1个指标\",\"depth\":4},{\"id\":\"2个维度-2个指标\",\"text\":\"2个维度 2个指标\",\"depth\":4}],\"title\":\"数据重塑-原理\",\"headingTitle\":\"数据重塑-原理\",\"frontmatter\":{}};\n"],"names":["_createMdxContent","props","_components","Object","_provideComponents","_jsxs","_Fragment","_jsx","MDXContent","MDXLayout"],"mappings":"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"}