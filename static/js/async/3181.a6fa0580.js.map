{"version":3,"file":"static/js/async/3181.a6fa0580.js","sources":["webpack://website/./docs/en-US/galley/markStyle/barStyle.mdx"],"sourcesContent":["const frontmatter = {\"pageType\":\"doc\"};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@1.45.0_@rspress+core@1.45.0_webpack@5.101.0__monaco-editor@0_77af6e307fc0823c3fa3d293b9873930/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nimport {SelectorBarValue, SelectorBarPartialDatum, SelectorBarMeasureCondition, SelectorBarDimensionCondition, MultiBarStyle} from '@components';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"barstyle\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#barstyle\",\n        children: \"#\"\n      }), \"barStyle\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive info\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"柱图样式\"\n      }), _jsxs(_components.div, {\n        className: \"rspress-directive-content\",\n        children: [_jsx(_components.p, {\n          children: \"全局样式或条件样式配置\"\n        }), \"支持图表类型: \", _jsx(_components.code, {\n          children: \"bar\"\n        }), \", \", _jsx(_components.code, {\n          children: \"barParallel\"\n        }), \", \", _jsx(_components.code, {\n          children: \"barPercent\"\n        }), \", \", _jsx(_components.code, {\n          children: \"column\"\n        }), \", \", _jsx(_components.code, {\n          children: \"columnParallel\"\n        }), \", \", _jsx(_components.code, {\n          children: \"columnPercent\"\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"selector\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#selector\",\n        children: \"#\"\n      }), \"selector\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"数据筛选器\"\n      }), _jsxs(_components.div, {\n        className: \"rspress-directive-content\",\n        children: [_jsxs(_components.p, {\n          children: [\"若配置\", _jsx(_components.code, {\n            children: \"selector\"\n          }), \", 提供\", _jsx(_components.code, {\n            children: \"数值 selector\"\n          }), \", \", _jsx(_components.code, {\n            children: \"局部数据 selector\"\n          }), \", \", _jsx(_components.code, {\n            children: \"条件维度 selector\"\n          }), \", \", _jsx(_components.code, {\n            children: \"条件指标 selector\"\n          }), \" 共四类数据匹配能力\"]\n        }), _jsxs(_components.p, {\n          children: [\"若未配置\", _jsx(_components.code, {\n            children: \"selector\"\n          }), \", 则样式全局生效.\"]\n        })]\n      })]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"value\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#value\",\n        children: \"#\"\n      }), \"value\"]\n    }), \"\\n\", _jsx(SelectorBarValue, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {5-6,12}\",\n        children: \"export const SelectorBarValue = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'column',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    barStyle: {\\n      selector: ['2019', '2020'],\\n      barColor: 'lightpink',\\n      barColorOpacity: 0.8,\\n      barBorderColor: 'lightpink',\\n      barBorderWidth: 4,\\n      barBorderStyle: 'dashed',\\n      barRadius: [8, 8, 0, 0],\\n    },\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"partial-datum\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#partial-datum\",\n        children: \"#\"\n      }), \"partial datum\"]\n    }), \"\\n\", _jsx(SelectorBarPartialDatum, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {5,6,7,9,12}\",\n        children: \"export const SelectorBarPartialDatum = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'bar',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    barStyle: {\\n      selector: [{ date: '2019' }, { sales: 60 }],\\n      barColor: 'lightblue',\\n      barColorOpacity: 0.8,\\n      barBorderColor: 'lightblue',\\n      barBorderWidth: 4,\\n      barBorderStyle: 'dashed',\\n      barRadius: [8, 8, 0, 0],\\n    },\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"dimension-condition\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#dimension-condition\",\n        children: \"#\"\n      }), \"dimension condition\"]\n    }), \"\\n\", _jsx(SelectorBarDimensionCondition, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {5,9,12-17}\",\n        children: \"export const SelectorBarDimensionCondition = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'columnParallel',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    barStyle: {\\n      selector: [\\n        {\\n          field: 'date',\\n          operator: 'in',\\n          value: ['2019', '2023'],\\n        },\\n      ],\\n      barColor: 'gray',\\n      barColorOpacity: 0.8,\\n      barBorderColor: 'gray',\\n      barBorderWidth: 4,\\n      barBorderStyle: 'dashed',\\n      barRadius: [8, 8, 0, 0],\\n    },\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"measure-condition\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#measure-condition\",\n        children: \"#\"\n      }), \"measure condition\"]\n    }), \"\\n\", _jsx(SelectorBarMeasureCondition, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tex\",\n        meta: \"pure {6,7,9,12-16}\",\n        children: \"export const SelectorBarMeasureCondition = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'barParallel',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    barStyle: {\\n      selector: {\\n        field: 'profit',\\n        operator: 'between',\\n        value: [20, 40],\\n      },\\n      barColor: 'lightgreen',\\n      barColorOpacity: 0.8,\\n      barBorderColor: 'lightgreen',\\n      barBorderWidth: 4,\\n      barBorderStyle: 'dashed',\\n      barRadius: [8, 8, 0, 0],\\n    },\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n            { id: 'count', alias: '数量' },\\n\\n    ],\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"barstyle-array\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#barstyle-array\",\n        children: \"#\"\n      }), \"barStyle array\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"优先级顺序: 后者覆盖前者\"\n    }), \"\\n\", _jsx(MultiBarStyle, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {11-26}\",\n        children: \"export const MultiBarStyle = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'barParallel',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    barStyle: [\\n      {\\n        barColorOpacity: 0.8,\\n        barRadius: 10,\\n      },\\n      {\\n        selector: [100, 40],\\n        barColor: 'lightgreen',\\n        barColorOpacity: 0.8,\\n      },\\n      {\\n        selector: [100, 80],\\n        barColor: 'red',\\n        barColorOpacity: 0.8,\\n      },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\nMDXContent.__RSPRESS_PAGE_META = {};\n\nMDXContent.__RSPRESS_PAGE_META[\"en-US%2Fgalley%2FmarkStyle%2FbarStyle.mdx\"] = {\"toc\":[{\"id\":\"selector\",\"text\":\"selector\",\"depth\":2},{\"id\":\"value\",\"text\":\"value\",\"depth\":3},{\"id\":\"partial-datum\",\"text\":\"partial datum\",\"depth\":3},{\"id\":\"dimension-condition\",\"text\":\"dimension condition\",\"depth\":3},{\"id\":\"measure-condition\",\"text\":\"measure condition\",\"depth\":3},{\"id\":\"barstyle-array\",\"text\":\"barStyle array\",\"depth\":2}],\"title\":\"barStyle\",\"headingTitle\":\"barStyle\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","Object","_provideComponents","_jsxs","_Fragment","_jsx","SelectorBarValue","SelectorBarPartialDatum","SelectorBarDimensionCondition","SelectorBarMeasureCondition","MultiBarStyle","MDXContent","MDXLayout"],"mappings":"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"}