{"version":3,"file":"static/js/async/85899.5e8aae48.js","sources":["webpack://website/@visactor/vseed/../../node_modules/.pnpm/@visactor+vtable@1.19.7/node_modules/@visactor/vtable/es/ts-types/new-data-set.js","webpack://website/@visactor/vseed/./src/pipeline/utils/pipeline.ts","webpack://website/@visactor/vseed/./src/i18n/i18n.ts","webpack://website/@visactor/vseed/./src/builder/builder/builder.ts","webpack://website/@visactor/vseed/./src/builder/builder/build.ts","webpack://website/@visactor/vseed/./src/builder/builder/buildSpec.ts","webpack://website/@visactor/vseed/./src/builder/builder/buildAdvanced.ts","webpack://website/@visactor/vseed/./src/builder/builder/advanced/colorItems.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/init/initAdvancedVSeed.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/tree/traverse.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/measures/find.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/records/records.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/theme/theme.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipeline/table.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/init/autoMeasures.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/init/autoDimensions.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/config/tableConfig.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/measures/typeGuard.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/columns/dimensionsToColumns.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/format/createNumFormatter.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/format/createFormatter.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/columns/measuresToColumns.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/bodyStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/headerStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/frameStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/selectionStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipeline/table.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/init/table.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/table.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/dimensions/find.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipeline/pivotTable.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/init/autoPivotMeasures.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/init/autoPivotDimensions.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/table/pipes/config/pivotTableConfig.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipeline/pivotTable.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/init/pivotTable.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/columns/pivotColumns.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/rows/pivotRows.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/indicators/pivotIndicators.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/rowHeaderStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/theme/cornerHeaderStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/table/pipes/indicators/pivotDataConfig.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/pivotTable.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/init/initAdvancedVSeed.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/measures/depth.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/chatType.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/init/autoMeasures.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/init/autoDimensions.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/pivot/pivotAdapter.ts","webpack://website/@visactor/vseed/./src/dataReshape/constant.ts","webpack://website/@visactor/vseed/./src/dataReshape/foldMeasures.ts","webpack://website/@visactor/vseed/./src/dataReshape/unfoldDimensions.ts","webpack://website/@visactor/vseed/./src/dataReshape/unfoldZeroDimensions.ts","webpack://website/@visactor/vseed/./src/dataReshape/dataReshapeFor2D1M0Name.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo2D1M0Name.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo2D1M0Name.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingXY.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/analysis/sort.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/config/config.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/markStyle/markStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/annotation/annotation.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/line.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/line.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/color/color.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/backgroundColor/background.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dataset/datasetXY.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dataset/progressive.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/xBand.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/yLinear.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/constant.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/label/label.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/tooltip/tooltip.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/crosshair/verticalCrosshairLine.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/legend/discreteLegend.ts","webpack://website/@visactor/vseed/./src/dataSelector/selector.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/markStyle/pointStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/markStyle/pointState.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/markStyle/lineStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/utils.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/annotationPoint.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/annotationVerticalLine.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/annotationHorizontalLine.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/annotationArea.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/pivot.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/pivotChart/pivotGridStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/pivotChart/pivotIndicators.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dataset/datasetPivot.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/pivotChart/pivotRowDimensions.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/pivotChart/pivotColumnDimensions.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/legend/pivotDiscreteLegend.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/pivotChart/pivotAdapter.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/line.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/line.ts","webpack://website/@visactor/vseed/./src/dataReshape/dataReshapeFor2D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo2D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo2D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/column.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/column.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/stack/stackCornerRadius.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/stack/stack.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/crosshair/verticalCrosshairRect.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/markStyle/barStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/annotation/annotationAreaBand.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/column.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/column.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/columnParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/columnParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/columnParallel.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/columnParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/columnPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/percent/percent.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/columnPercent.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/columnPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingYX.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/bar.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/bar.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dataset/datasetYX.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/xLinear.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/yBand.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/crosshair/horizontalCrosshairRect.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/bar.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/bar.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/barParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/barParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/barParallel.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/barParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/barPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/barPercent.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/barPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/area.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/area.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/markStyle/areaStyle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/area.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/area.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/areaPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/areaPercent.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/areaPercent.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/init/autoMeasuresBy2M1Group.ts","webpack://website/@visactor/vseed/./src/dataReshape/dataReshapeFor1D.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/areaRange.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo1D.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo1D.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingAreaRange.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/series/series.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/areaRange.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/tooltip/tooltipDisable.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/tooltip/tooltipAreaRange.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/areaRange.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/areaRange.ts","webpack://website/@visactor/vseed/./src/dataReshape/dataReshapeFor1D2M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/scatter.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo1D2M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo1D2M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingYY.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/scatter.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/crosshair/horizontalCrosshairLine.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/scatter.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/scatter.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/dualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/init/autoDualMeasures.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo2D2M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo2D2M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingXYY.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/config/dualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/initDualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dual/dualChartType.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/dataset/datasetDualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/label/labelDualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/tooltip/tooltipDualAxis.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/yLinearPrimary.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/yLinearSecondary.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/dualAxis.ts","webpack://website/@visactor/vseed/./src/dataReshape/dataReshapeFor1D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/reshapeTo1D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/reshape/pivotReshapeTo1D1M.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingPie.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/pie.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/pie.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/pie.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/pie.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/donut.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/donut.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/donut.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/donut.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingRose.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/rose.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/rose.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/radius.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/angle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/rose.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/rose.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/roseParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/roseParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/roseParallel.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/roseParallel.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/radar.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingAR.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/radar.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/radarAngle.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/axes/radarRadius.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/radar.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/radar.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/funnel.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingFunnel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/funnel.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/color/linearColor.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/legend/colorLegend.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/funnel.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/funnel.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipeline/heatmap.ts","webpack://website/@visactor/vseed/./src/pipeline/advanced/chart/pipes/encoding/encodingMatrix.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/label/labelColorInversion.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipes/init/heatmap.ts","webpack://website/@visactor/vseed/./src/pipeline/spec/chart/pipeline/heatmap.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/heatmap.ts","webpack://website/@visactor/vseed/./src/theme/light.ts","webpack://website/@visactor/vseed/./src/theme/dark.ts","webpack://website/@visactor/vseed/./src/builder/register/theme/custom.ts","webpack://website/@visactor/vseed/./src/builder/register/theme/light.ts","webpack://website/@visactor/vseed/./src/builder/register/theme/dark.ts","webpack://website/@visactor/vseed/./src/builder/register/all.ts","webpack://website/@visactor/vseed/./src/builder/register/chartType/dualAxis.ts","webpack://website/@visactor/vseed/./src/builder/register/custom.ts","webpack://website/@visactor/vseed/./src/pipeline/utils/dimensions/typeGuard.ts","webpack://website/@visactor/vseed/./src/types/properties/chartType/chartType.ts","webpack://website/@visactor/vseed/./src/types/properties/chartType/dualChartType.ts","webpack://website/@visactor/vseed/./src/types/properties/dataset/dataset.ts","webpack://website/@visactor/vseed/./src/types/properties/dimensions/zDimensions.ts","webpack://website/@visactor/vseed/./src/types/properties/measures/format/numFormat.ts","webpack://website/@visactor/vseed/./src/types/properties/measures/zMeasures.ts","webpack://website/@visactor/vseed/./src/types/properties/measures/zDualMeasures.ts","webpack://website/@visactor/vseed/./src/types/properties/datasetReshapeInfo/datasetReshapeInfo.ts","webpack://website/@visactor/vseed/./src/types/properties/encoding/encoding.ts","webpack://website/@visactor/vseed/./src/types/properties/config/axes/bandAxis.ts","webpack://website/@visactor/vseed/./src/types/properties/config/axes/linearAxis.ts","webpack://website/@visactor/vseed/./src/types/properties/config/crosshair/zCrosshair.ts","webpack://website/@visactor/vseed/./src/types/properties/config/stackCornerRadius/stackCornerRadius.ts","webpack://website/@visactor/vseed/./src/types/properties/config/backgroundColor/backgroundColor.ts","webpack://website/@visactor/vseed/./src/types/properties/config/color/color.ts","webpack://website/@visactor/vseed/./src/types/properties/config/label/label.ts","webpack://website/@visactor/vseed/./src/types/properties/config/legend/legend.ts","webpack://website/@visactor/vseed/./src/types/properties/config/tooltip/tooltip.ts","webpack://website/@visactor/vseed/./src/types/properties/config/config.ts","webpack://website/@visactor/vseed/./src/types/properties/config/axes/axis.ts","webpack://website/@visactor/vseed/./src/types/properties/theme/customTheme.ts","webpack://website/@visactor/vseed/./src/types/properties/theme/theme.ts","webpack://website/@visactor/vseed/./src/types/dataSelector/selector.ts","webpack://website/@visactor/vseed/./src/types/properties/markStyle/barStyle.ts","webpack://website/@visactor/vseed/./src/types/properties/markStyle/pointStyle.ts","webpack://website/@visactor/vseed/./src/types/properties/markStyle/lineStyle.ts","webpack://website/@visactor/vseed/./src/types/properties/markStyle/areaStyle.ts","webpack://website/@visactor/vseed/./src/types/properties/markStyle/markStyle.ts","webpack://website/@visactor/vseed/./src/types/properties/annotation/zAnnotationPoint.ts","webpack://website/@visactor/vseed/./src/types/properties/annotation/zAnnotationVerticalLine.ts","webpack://website/@visactor/vseed/./src/types/properties/annotation/zAnnotationHorizontalLine.ts","webpack://website/@visactor/vseed/./src/types/properties/annotation/zAnnotationArea.ts","webpack://website/@visactor/vseed/./src/types/properties/annotation/annotation.ts","webpack://website/@visactor/vseed/./src/types/properties/analysis/sort.ts","webpack://website/@visactor/vseed/./src/types/properties/analysis/sortLegend.ts","webpack://website/@visactor/vseed/./src/types/properties/analysis/analysis.ts","webpack://website/@visactor/vseed/./src/types/i18n/i18n.ts","webpack://website/@visactor/vseed/./src/types/chartType/table/zTable.ts","webpack://website/@visactor/vseed/./src/types/chartType/pivotTable/zPivotTable.ts","webpack://website/@visactor/vseed/./src/types/chartType/line/zLine.ts","webpack://website/@visactor/vseed/./src/types/chartType/column/zColumn.ts","webpack://website/@visactor/vseed/./src/types/chartType/columnParallel/zColumnParallel.ts","webpack://website/@visactor/vseed/./src/types/chartType/columnPercent/zColumnPercent.ts","webpack://website/@visactor/vseed/./src/types/chartType/bar/zBar.ts","webpack://website/@visactor/vseed/./src/types/chartType/barParallel/zBarParallel.ts","webpack://website/@visactor/vseed/./src/types/chartType/barPercent/zBarPercent.ts","webpack://website/@visactor/vseed/./src/types/chartType/area/zArea.ts","webpack://website/@visactor/vseed/./src/types/chartType/areaPercent/zAreaPercent.ts","webpack://website/@visactor/vseed/./src/types/chartType/areaRange/zAreaRange.ts","webpack://website/@visactor/vseed/./src/types/chartType/scatter/zScatter.ts","webpack://website/@visactor/vseed/./src/types/chartType/dualAxis/zDualAxis.ts","webpack://website/@visactor/vseed/./src/types/chartType/rose/zRose.ts","webpack://website/@visactor/vseed/./src/types/chartType/roseParallel/zRoseParallel.ts","webpack://website/@visactor/vseed/./src/types/chartType/pie/zPie.ts","webpack://website/@visactor/vseed/./src/types/chartType/donut/zDonut.ts","webpack://website/@visactor/vseed/./src/types/chartType/radar/zRadar.ts","webpack://website/@visactor/vseed/./src/types/chartType/funnel/zFunnel.ts","webpack://website/@visactor/vseed/./src/types/chartType/heatmap/zHeatmap.ts","webpack://website/@visactor/vseed/./src/types/vseed.ts","webpack://website/@visactor/vseed/./src/types/advancedVSeed.ts"],"sourcesContent":["export var AggregationType;\n\n!function(AggregationType) {\n    AggregationType.RECORD = \"RECORD\", AggregationType.NONE = \"NONE\", AggregationType.SUM = \"SUM\", \n    AggregationType.MIN = \"MIN\", AggregationType.MAX = \"MAX\", AggregationType.AVG = \"AVG\", \n    AggregationType.COUNT = \"COUNT\", AggregationType.CUSTOM = \"CUSTOM\", AggregationType.RECALCULATE = \"RECALCULATE\";\n}(AggregationType || (AggregationType = {}));\n\nexport var SortType;\n\n!function(SortType) {\n    SortType.ASC = \"ASC\", SortType.DESC = \"DESC\", SortType.NORMAL = \"NORMAL\", SortType.desc = \"desc\", \n    SortType.asc = \"asc\", SortType.normal = \"normal\";\n}(SortType || (SortType = {}));\n//# sourceMappingURL=new-data-set.js.map\n","import type { ExecPipelineType, Pipe } from 'src/types'\n\n/**\n * 执行pipeline, 每个pipe负责构建结果的一部分, 构建完成后得到完整的目标结果\n * @param pipeline pipeline数组, 每个pipe负责构建结果的一部分\n * @param initialValue 初始值\n * @param context 上下文\n * @returns 执行后的结果\n */\nexport const execPipeline: ExecPipelineType = <T, U>(\n  pipeline: Array<Pipe<T, U>>,\n  context: U,\n  initialValue: Partial<T> = {},\n): T => {\n  const result = pipeline.reduce((prev, cur) => {\n    return cur(prev, context)\n  }, initialValue)\n  return result as T\n}\n","import { isNullish } from 'remeda'\nimport translateMap from './i18n.json'\nimport type { Locale, TranslateRecordType } from '../types'\n\nclass Intl {\n  private static instance: Intl\n\n  private translateMap: TranslateRecordType = translateMap as unknown as TranslateRecordType\n  private locale: Locale = 'zh-CN'\n\n  canTranslate = (value: string) => !!this.translateMap[value]\n\n  /**\n   * @example i18n`指标名称`\n   */\n  i18n = (segments: TemplateStringsArray, ...values: Array<number | string>) => {\n    const text = segments.map((segment, index) => segment + (values[index] || '')).join('')\n\n    const translatedText = this.translateMap?.[text]?.[this.locale]\n    if (isNullish(translatedText)) {\n      console.warn(`i18n ${this.locale} no translate: ${text}`)\n      return text\n    }\n    return translatedText\n  }\n\n  setLocale = (locale: Locale): void => {\n    this.locale = locale\n  }\n\n  getLocale: () => Locale = () => this.locale\n\n  public static getInstance() {\n    if (!Intl.instance) {\n      Intl.instance = new Intl()\n    }\n\n    return Intl.instance\n  }\n}\n\nconst intl = Intl.getInstance()\n\nconst i18n = intl.i18n\n\nexport { intl, i18n }\n","import type {\n  AdvancedPipe,\n  AdvancedPipeline,\n  AdvancedVSeed,\n  ChartType,\n  CustomThemeConfig,\n  Spec,\n  SpecPipe,\n  SpecPipeline,\n  VSeed,\n  VSeedBuilder,\n} from 'src/types'\nimport { buildAdvanced } from './buildAdvanced'\nimport { buildSpec } from './buildSpec'\nimport { build } from './build'\nimport { intl } from 'src/i18n'\nimport { getColorIdMap, getColorItems } from './advanced'\n\nexport class Builder implements VSeedBuilder {\n  private _vseed: VSeed\n  private _advancedVSeed: AdvancedVSeed | null = null\n  private _spec: Spec | null = null\n  private _performance: Record<string, string | number> = {}\n\n  constructor(vseed: VSeed) {\n    this._vseed = vseed\n    this._vseed.locale = vseed.locale || intl.getLocale()\n  }\n\n  /**\n   * @description 构建spec\n   * @returns spec\n   */\n  build = <T extends Spec>(): T => build(this) as T\n\n  /**\n   * @description 构建spec\n   * @param advanced 高级配置\n   * @returns spec\n   */\n  buildSpec = (advanced: AdvancedVSeed): Spec => buildSpec(this, advanced)\n\n  /**\n   * @description 构建spec\n   * @returns AdvancedVSeed | null\n   */\n  buildAdvanced = (): AdvancedVSeed | null => buildAdvanced(this)\n\n  /**\n   * @description 获取颜色项, 颜色项可以重复,\n   * @returns 颜色项\n   */\n  getColorItems = () => getColorItems(this)\n\n  /**\n   * @description 获取颜色id映射\n   * @returns 颜色id映射\n   */\n  getColorIdMap = () => getColorIdMap(this)\n\n  /**\n   * @description 获取vseed\n   * @returns vseed\n   */\n  get vseed() {\n    return this._vseed\n  }\n\n  /**\n   * @description 设置vseed\n   * @param value vseed\n   */\n  set vseed(value) {\n    this._vseed = value\n  }\n\n  /**\n   * @description 获取advancedVSeed\n   * @returns advancedVSeed\n   */\n  get advancedVSeed() {\n    return this._advancedVSeed\n  }\n\n  /**\n   *\n   * @description 设置advancedVSeed\n   * @param value advancedVSeed\n   */\n  set advancedVSeed(value) {\n    this._advancedVSeed = value\n  }\n\n  /**\n   * @description 获取spec\n   * @returns spec\n   */\n  get spec() {\n    return this._spec\n  }\n\n  /**\n   * @description 设置spec\n   * @param value spec\n   */\n  set spec(value) {\n    this._spec = value\n  }\n\n  /**\n   * @description 获取performance, 统计了构建spec和advancedVSeed的时间\n   * @returns performance\n   */\n  get performance() {\n    return this._performance\n  }\n\n  /**\n   * @description 设置performance\n   * @param value performance\n   */\n  set performance(value) {\n    this._performance = value\n  }\n\n  /**\n   * @description 获取advancedPipeline\n   * @param chartType 图表类型\n   * @returns advancedPipeline\n   */\n  static getAdvancedPipeline = (chartType: ChartType) => {\n    const customPipe = Builder._customAdvancedPipe[chartType] as AdvancedPipe\n    const pipeline = Builder._advancedPipelineMap[chartType] as AdvancedPipeline\n    if (customPipe) {\n      pipeline.push(customPipe)\n    }\n    return pipeline\n  }\n\n  /**\n   * @description 获取specPipeline\n   * @param chartType 图表类型\n   * @returns specPipeline\n   */\n\n  static getSpecPipeline = (chartType: ChartType) => {\n    const customPipe = Builder._customSpecPipe[chartType] as SpecPipe\n    const pipeline = Builder._specPipelineMap[chartType] as SpecPipeline\n    if (customPipe) {\n      pipeline.push(customPipe)\n    }\n    return pipeline\n  }\n\n  /**\n   * @description 根据主题key获取主题配置\n   * @param themeKey 主题key\n   * @example Builder.getTheme('light'), 获取浅色主题\n   * @returns 主题配置\n   */\n  static getTheme = (themeKey: string) => Builder._themeMap[themeKey]\n\n  /**\n   * @description 获取主题配置映射表\n   * @example Builder.getThemeMap()\n   * @returns 主题配置映射表\n   */\n  static getThemeMap = () => Builder._themeMap\n\n  /**\n   * @description 从vseed创建builder\n   * @param vseed 完整的vseed DSL\n   * @returns builder\n   */\n  static from = (vseed: VSeed) => new Builder(vseed)\n\n  static _advancedPipelineMap: Partial<Record<ChartType, AdvancedPipeline>> = {}\n  static _specPipelineMap: Partial<Record<ChartType, SpecPipeline>> = {}\n  static _customAdvancedPipe: Partial<Record<ChartType, AdvancedPipe>> = {}\n  static _customSpecPipe: Partial<Record<ChartType, SpecPipe>> = {}\n  static _themeMap: Record<string, CustomThemeConfig> = {}\n}\n","import type { Spec } from 'src/types'\nimport type { Builder } from './builder'\n\nexport const build = (builder: Builder): Spec => {\n  // console.log('debug vseed', builder.vseed)\n  const advancedVSeed = builder.buildAdvanced()\n  builder.advancedVSeed = advancedVSeed\n  // console.log('debug advancedVSeed', advancedVSeed)\n  if (!advancedVSeed) {\n    throw new Error('advancedVSeed is null')\n  }\n  const spec = builder.buildSpec(advancedVSeed)\n  builder.spec = spec\n  // console.log('debug spec', spec)\n  return spec\n}\n","import type { Spec } from 'src/types'\nimport { Builder } from './builder'\nimport type { AdvancedVSeed, SpecPipelineContext } from 'src/types'\nimport { execPipeline } from '../../pipeline'\n\nexport const buildSpec = (builder: Builder, advancedVSeed: AdvancedVSeed): Spec => {\n  const start = typeof performance !== 'undefined' ? performance.now() : Date.now()\n\n  const { chartType } = builder.vseed\n  if (!chartType) {\n    throw new Error('chartType is nil in buildSpec')\n  }\n\n  const pipeline = Builder.getSpecPipeline(chartType)\n  if (!pipeline) {\n    throw new Error(`no spec pipeline for chartType ${chartType}`)\n  }\n\n  const context: SpecPipelineContext = {\n    vseed: builder.vseed,\n    advancedVSeed,\n  }\n  try {\n    return execPipeline<Spec, SpecPipelineContext>(pipeline, context)\n  } catch (e) {\n    console.error(e)\n    throw new Error(`buildSpec error, see error info in console`)\n  } finally {\n    const end = typeof performance !== 'undefined' ? performance.now() : Date.now()\n    builder.performance['buildSpec'] = `${(end - start).toFixed(4)}ms`\n  }\n}\n","import type { AdvancedPipelineContext, AdvancedVSeed } from 'src/types'\nimport { execPipeline } from '../../pipeline'\nimport { Builder } from './builder'\n\nexport const buildAdvanced = (builder: Builder): AdvancedVSeed | null => {\n  const start = typeof performance !== 'undefined' ? performance.now() : Date.now()\n  const { chartType } = builder.vseed\n  if (!chartType) {\n    throw new Error('chartType is nil in buildAdvanced')\n  }\n\n  const pipeline = Builder.getAdvancedPipeline(chartType)\n  if (!pipeline) {\n    throw new Error(`no advanced pipeline for chartType ${chartType}`)\n  }\n\n  const context: AdvancedPipelineContext = {\n    vseed: builder.vseed,\n    customTheme: Builder.getThemeMap(),\n  }\n\n  try {\n    return execPipeline<AdvancedVSeed, AdvancedPipelineContext>(pipeline, context)\n  } catch (e) {\n    console.error(e)\n    throw new Error(`buildAdvanced error, see error info in console`)\n  } finally {\n    const end = typeof performance !== 'undefined' ? performance.now() : Date.now()\n    builder.performance['buildAdvanced'] = `${(end - start).toFixed(4)}ms`\n  }\n}\n","import { unique } from 'remeda'\nimport type { Builder } from '../builder'\n\nexport const getColorItems = (builder: Builder): string[] => {\n  const advancedVSeed = builder.advancedVSeed\n  if (!advancedVSeed) {\n    return []\n  }\n\n  const { datasetReshapeInfo } = advancedVSeed\n  const colorItems = unique(datasetReshapeInfo.flatMap((d) => d.unfoldInfo.colorItems))\n  const colorIdMap = datasetReshapeInfo.reduce<Record<string, string>>((prev, cur) => {\n    return { ...prev, ...cur.unfoldInfo.colorIdMap }\n  }, {})\n\n  return colorItems.map((d) => colorIdMap[d])\n}\n\nexport const getColorIdMap = (builder: Builder): Record<string, string> => {\n  const advancedVSeed = builder.advancedVSeed\n  if (!advancedVSeed) {\n    return {}\n  }\n\n  const { datasetReshapeInfo } = advancedVSeed\n  const colorIdMap = datasetReshapeInfo.reduce<Record<string, string>>((prev, cur) => {\n    return { ...prev, ...cur.unfoldInfo.colorIdMap }\n  }, {})\n\n  return colorIdMap\n}\n","import type { AdvancedPipe, AdvancedVSeed } from 'src/types'\n\nexport const initAdvancedVSeed: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType, locale } = vseed\n  return {\n    ...advancedVSeed,\n    chartType,\n    locale: locale || 'zh-CN',\n  } as AdvancedVSeed\n}\n","/**\n * 支持泛型的非递归前序遍历\n * @param tree 根节点数组\n * @param callback 遍历时对每个节点执行的回调，返回 true 时停止遍历\n */\nexport const preorderTraverse = <T extends { id: string }, U extends { id: string; children?: (T | U)[] }>(\n  tree: (T | U)[],\n  callback: (node: T | U) => boolean,\n) => {\n  if (!tree || tree.length === 0) return\n\n  const stack: (T | U)[] = [...tree].reverse()\n\n  while (stack.length > 0) {\n    const node = stack.pop()!\n    const stop = callback(node)\n    if (stop === true) {\n      return\n    }\n    if (!('children' in node)) {\n      continue\n    }\n    const children = node.children\n    if (children && children.length > 0) {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i]\n        stack.push(child)\n      }\n    }\n  }\n}\n","import type { Measure, MeasureGroup, MeasureTree } from 'src/types'\nimport { preorderTraverse } from '../tree'\n\nexport const findMeasureById = (measures: MeasureTree = [], id: string): Measure | undefined => {\n  if (!measures) return undefined\n  let result: Measure | undefined\n  preorderTraverse<Measure, MeasureGroup>(measures, (node) => {\n    if (!('children' in node)) {\n      if (node.id === id) {\n        result = node as Measure\n        return true\n      }\n    }\n    return false\n  })\n  return result\n}\n\nexport const findFirstMeasure = (measures: MeasureTree = []): Measure | undefined => {\n  if (!measures) return undefined\n  let result: Measure | undefined\n  preorderTraverse<Measure, MeasureGroup>(measures, (node) => {\n    if (!('children' in node)) {\n      result = node as Measure\n      return true\n    }\n    return false\n  })\n  return result\n}\n\nexport const findAllMeasures = (measures: MeasureTree = []): Measure[] => {\n  if (!measures) return []\n  const result: Measure[] = []\n  preorderTraverse<Measure, MeasureGroup>(measures, (node) => {\n    if (!('children' in node)) {\n      result.push(node as Measure)\n    }\n    return false\n  })\n  return result\n}\n","import type { AdvancedPipe } from 'src/types'\n\nexport const records: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { dataset } = vseed\n  return {\n    ...advancedVSeed,\n    dataset,\n  }\n}\n","import { clone, isNullish, isNumber, isObjectType, isString, merge, mergeDeep } from 'remeda'\nimport type { AdvancedPipe, AdvancedVSeed } from 'src/types'\n\nexport const theme: AdvancedPipe = (advancedVSeed, context) => {\n  const { customTheme, vseed } = context\n  const { theme = 'light', chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  } as AdvancedVSeed\n\n  if (!customTheme || !customTheme[theme]) {\n    return result\n  }\n\n  const chartConfigTheme = customTheme?.[theme].config?.[chartType]\n  if (chartConfigTheme) {\n    const chartConfig = result.config?.[chartType] || {}\n    const mergedConfig = mergeDeep(chartConfigTheme, clone(chartConfig))\n\n    // 数组项不会被Merge, 需要将1个主题配置, 合并到数组的每一项\n    for (const _k in mergedConfig) {\n      const key = _k as keyof typeof mergedConfig\n      // 配置的第一层, 如果是数组, 则数组的每一项目和主题配置合并\n      if (Array.isArray(mergedConfig[key])) {\n        mergedConfig[key] = mergeArray(mergedConfig[key], chartConfigTheme[key])\n      }\n    }\n\n    result.config = {\n      [chartType]: mergedConfig,\n    }\n  }\n\n  const chartCustomTheme = customTheme?.[theme]?.config?.[chartType]\n\n  result.customTheme = {\n    config: {\n      [chartType]: chartCustomTheme,\n    },\n  }\n\n  return result\n}\n\nconst mergeArray = <Destination extends Array<object>, Source extends object | number | string | undefined | null>(\n  arr: Destination,\n  themeItem: Source,\n): Destination => {\n  if (isNullish(themeItem) || isString(themeItem) || isNumber(themeItem)) {\n    return arr\n  }\n\n  if (!Array.isArray(arr)) {\n    return arr\n  }\n\n  if (arr.some((d) => !isObjectType(d))) {\n    return arr\n  }\n\n  return arr.map((item) => {\n    return merge(themeItem, item)\n  }) as Destination\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport { initAdvancedVSeed, autoDimensions, autoMeasures, records, tableConfig } from '../pipes'\nimport { theme } from '../../chart/pipes'\n\nexport const tableAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  records,\n  tableConfig,\n  theme,\n]\n","import type { AdvancedPipe, Datum, MeasureTree } from 'src/types'\n\nexport const autoMeasures: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { measures, dataset } = vseed\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (measures) {\n    result.measures = measures as MeasureTree\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  result.measures = Object.keys(sample)\n    .filter((key) => {\n      return top100dataset.some((item) => typeof item[key] === 'number') && !['', null, undefined].includes(key)\n    })\n    .map((measure) => ({\n      id: measure,\n      alias: measure,\n    }))\n\n  return result\n}\n","import { findAllMeasures } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum } from 'src/types'\n\nexport const autoDimensions: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dimensions, dataset } = vseed\n\n  const measures = findAllMeasures(advancedVSeed.measures)\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (dimensions) {\n    result.dimensions = dimensions.map((dim) => ({\n      location: 'dimension',\n      ...dim,\n    }))\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  result.dimensions = Object.keys(sample)\n    .filter(\n      (key) =>\n        top100dataset.some((item) => typeof item[key] === 'string') &&\n        !['', null, undefined].includes(key) &&\n        !measures.some((measure) => measure.id === key),\n    )\n    .map((dim) => ({\n      id: dim,\n      alias: dim,\n      location: 'dimension',\n    }))\n\n  return result\n}\n","import { pick } from 'remeda'\nimport type { AdvancedPipe, Config } from 'src/types'\n\nexport const tableConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, [\n    'backgroundColor',\n    'bodyFontSize',\n    'bodyFontColor',\n    'bodyBackgroundColor',\n    'headerFontSize',\n    'headerFontColor',\n    'headerBackgroundColor',\n    'hoverHeaderBackgroundColor',\n    'hoverHeaderInlineBackgroundColor',\n    'selectedBorderColor',\n    'selectedBackgroundColor',\n  ]) as Config['pivotTable']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result\n}\n","import type { Measure, MeasureGroup } from 'src/types'\n\nexport const isMeasure = (measure: Measure | MeasureGroup): measure is Measure => {\n  return !('children' in measure)\n}\n\nexport const isMeasureGroup = (measure: Measure | MeasureGroup): measure is MeasureGroup => {\n  return 'children' in measure\n}\n\nexport const isMeasures = (measures: Measure[] | MeasureGroup[]): measures is Measure[] => {\n  return measures.every(isMeasure)\n}\n","import type { ColumnsDefine, ListTableConstructorOptions } from '@visactor/vtable'\nimport { isMeasure } from 'src/pipeline/utils'\nimport type { Dimension, DimensionGroup, DimensionTree, SpecPipe } from 'src/types'\n\nexport const dimensionTreeToColumns: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const dimensions = (advancedVSeed as unknown as { dimensions: DimensionTree }).dimensions\n  const result = { ...spec } as ListTableConstructorOptions\n  const eachNode = (node: Dimension | DimensionGroup) => {\n    if (isMeasure(node)) {\n      return {\n        width: 'auto',\n      }\n    }\n\n    return {}\n  }\n  const columns = treeTreeToColumns<Dimension, DimensionGroup>(dimensions, eachNode)\n\n  return {\n    ...result,\n    columns: [...(result.columns || []), ...columns] as ListTableConstructorOptions['columns'],\n  }\n}\n\nconst treeTreeToColumns = <\n  T extends { id: string; alias?: string },\n  U extends { id: string; alias?: string; children?: (T | U)[] },\n>(\n  tree: (T | U)[],\n  callback?: (node: T | U) => object,\n): ColumnsDefine[] => {\n  const result = tree.map((item) => {\n    if ('children' in item && Array.isArray(item.children)) {\n      const groupNode = item as unknown as U\n      const field = groupNode.id\n      const title = groupNode.alias ?? groupNode.id\n      const props = callback?.(groupNode) || {}\n      // group\n      return {\n        field,\n        title,\n        columns: treeTreeToColumns(item.children, callback),\n        ...props,\n      }\n    } else {\n      const field = item.id\n      const title = item.alias ?? item.id\n      const props = callback?.(item) || {}\n      // leaf\n      return {\n        field,\n        title,\n        ...props,\n      }\n    }\n  }) as unknown as ColumnsDefine[]\n\n  return result || []\n}\n","import { isNumber } from 'remeda'\nimport { intl } from '../../../i18n'\nimport type { Formatter, Locale, NumFormat } from 'src/types'\n\nexport const createNumFormatter = (format: NumFormat, locale: Locale = intl.getLocale()): Formatter => {\n  const {\n    type = 'number',\n    ratio = 1,\n    symbol = '',\n    thousandSeparator = true,\n    prefix = '',\n    suffix = '',\n\n    fractionDigits = 2,\n    significantDigits,\n    roundingMode = 'halfExpand',\n    roundingPriority = 'auto',\n  } = format || {}\n\n  const numFormatterOptions: Intl.NumberFormatOptions = {\n    style: 'decimal',\n    notation: type === 'scientific' ? 'scientific' : 'standard',\n    // @ts-expect-error roundingMode is not in NumberFormatOptions\n    roundingMode,\n    roundingPriority,\n  }\n\n  if (isNumber(fractionDigits)) {\n    if (fractionDigits >= 0) {\n      numFormatterOptions.minimumFractionDigits = fractionDigits\n      numFormatterOptions.maximumFractionDigits = fractionDigits\n    }\n  }\n  if (isNumber(significantDigits) && significantDigits > 0) {\n    if (significantDigits > 0) {\n      numFormatterOptions.minimumSignificantDigits = significantDigits\n      numFormatterOptions.maximumSignificantDigits = significantDigits\n    }\n  }\n\n  const numFormatter = new Intl.NumberFormat(locale, numFormatterOptions)\n\n  return (value?: number | string) => {\n    let num = Number(value)\n    let typeSymbol = ''\n    if (Number.isNaN(num)) {\n      return String(value)\n    }\n\n    // apply ratio for percent/permille\n    if (type === 'percent') {\n      num *= 100\n      typeSymbol = '%'\n    } else if (type === 'permille') {\n      num *= 1000\n      typeSymbol = '‰'\n    } else if (type === 'number') {\n      num = num / (ratio || 1)\n    }\n\n    // format value\n    let numStr = numFormatter.format(num)\n\n    // add thousand separator\n    if (thousandSeparator) {\n      const parts = numStr.split('.')\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      numStr = parts.join('.')\n    }\n\n    // add symbol, typeSymbol, prefix and suffix\n    return `${prefix}${numStr}${typeSymbol}${symbol}${suffix}`\n  }\n}\n\nexport const autoNumFormatter = (value?: number | string, locale: Locale = intl.getLocale()): string => {\n  if (value === undefined || value === null) return String(value)\n  const num = Number(value)\n  if (Number.isNaN(num)) return String(value)\n\n  const numFormatterOptions: Intl.NumberFormatOptions = {\n    style: 'decimal',\n    notation: 'compact',\n  }\n  numFormatterOptions.minimumFractionDigits = 0\n  numFormatterOptions.maximumFractionDigits = 2\n\n  const numFormatter = new Intl.NumberFormat(locale, { ...numFormatterOptions })\n\n  return numFormatter.format(Number(value))\n}\n","import type { Formatter, Locale, NumFormat } from 'src/types'\nimport { autoNumFormatter, createNumFormatter } from './createNumFormatter'\n\nexport const createFormatter = (format: Partial<NumFormat>): Formatter => {\n  return createNumFormatter(format)\n}\n\nexport const autoFormatter = (value?: number | string, locale?: Locale): string => {\n  return autoNumFormatter(value, locale)\n}\n","import type { ColumnsDefine, ListTableConstructorOptions } from '@visactor/vtable'\nimport type { FieldFormat } from '@visactor/vtable/es/ts-types'\nimport { isEmpty } from 'remeda'\nimport { autoFormatter, createFormatter, isMeasure } from 'src/pipeline/utils'\nimport type { MeasureGroup, Measure, MeasureTree, SpecPipe, Datum, Locale } from 'src/types'\n\nexport const measureTreeToColumns: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { locale } = advancedVSeed\n  const measures = (advancedVSeed as unknown as { measures: MeasureTree }).measures\n  const result = { ...spec } as ListTableConstructorOptions\n\n  const eachNode = (node: Measure | MeasureGroup) => {\n    if (isMeasure(node)) {\n      return {\n        width: 'auto',\n        fieldFormat: fieldFormat(node, locale),\n      }\n    }\n\n    return {}\n  }\n  const columns = treeTreeToColumns<Measure, MeasureGroup>(measures, eachNode)\n  return {\n    ...result,\n    columns: [...(result.columns || []), ...columns] as ListTableConstructorOptions['columns'],\n  }\n}\n\nconst fieldFormat =\n  (node: Measure, locale: Locale): FieldFormat =>\n  (datum: Datum) => {\n    const { format = {}, autoFormat = true, id } = node\n    const value = datum[id] as number | string | undefined\n    if (!isEmpty(format)) {\n      const formatter = createFormatter(format)\n      return formatter(value)\n    }\n\n    if (autoFormat) {\n      return autoFormatter(value, locale)\n    }\n\n    return\n  }\n\nconst treeTreeToColumns = <\n  T extends { id: string; alias?: string },\n  U extends { id: string; alias?: string; children?: (T | U)[] },\n>(\n  tree: (T | U)[],\n  callback?: (node: T | U) => object,\n): ColumnsDefine[] => {\n  const result = tree.map((item) => {\n    if ('children' in item && Array.isArray(item.children)) {\n      const groupNode = item as unknown as U\n      const field = groupNode.id\n      const title = groupNode.alias ?? groupNode.id\n      const props = callback?.(groupNode) || {}\n      // group\n      return {\n        field,\n        title,\n        columns: treeTreeToColumns(item.children, callback),\n        ...props,\n      }\n    } else {\n      const field = item.id\n      const title = item.alias ?? item.id\n      const props = callback?.(item) || {}\n      // leaf\n      return {\n        field,\n        title,\n        ...props,\n      }\n    }\n  }) as unknown as ColumnsDefine[]\n\n  return result || []\n}\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const bodyStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { chartType, config } = advancedVSeed\n  const themeConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themeConfig) return result\n\n  // basic\n  const borderColor = themeConfig.borderColor || 'rgb(224, 224, 224)'\n  const backgroundColor = themeConfig.bodyBackgroundColor || '#fff'\n  const fontColor = themeConfig.bodyFontColor || '#1B1F23'\n  const fontSize = themeConfig.bodyFontSize || 12\n  // Interaction\n  const hoverCellBgColor = themeConfig.hoverBodyBackgroundColor || '#bedaff'\n  const hoverInlineColor = themeConfig.hoverBodyInlineBackgroundColor || '#bedaff'\n\n  result.theme.bodyStyle = {\n    borderColor: borderColor,\n    borderLineWidth: 1,\n    padding: [8.6, 12, 8.6, 12],\n    textAlign: 'right',\n    hover: {\n      cellBgColor: hoverCellBgColor,\n      inlineRowBgColor: hoverInlineColor,\n      inlineColumnBgColor: hoverInlineColor,\n    },\n    color: fontColor,\n    fontSize: fontSize,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontVariant: 'normal',\n    bgColor: backgroundColor,\n    lineHeight: fontSize * 1.5,\n  }\n\n  return result\n}\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const headerStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { config, chartType } = advancedVSeed\n  const themConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themConfig) return result\n\n  // basic\n  const borderColor = themConfig.borderColor || 'rgb(224, 224, 224)'\n  const backgroundColor = themConfig.headerBackgroundColor || '#EEF1F5'\n  const fontColor = themConfig.headerFontColor || '#1B1F23'\n  const fontSize = themConfig.headerFontSize || 12\n  // Interaction\n  const hoverCellBgColor = themConfig.hoverHeaderBackgroundColor || '#bedaff'\n  const hoverInlineColor = themConfig.hoverHeaderInlineBackgroundColor || '#bedaff'\n\n  result.theme.headerStyle = {\n    borderColor: borderColor,\n    borderLineWidth: 1,\n    padding: [8, 12, 8, 12],\n    textAlign: 'center',\n    hover: {\n      cellBgColor: hoverCellBgColor,\n      inlineRowBgColor: hoverInlineColor,\n      inlineColumnBgColor: hoverInlineColor,\n    },\n    frameStyle: {\n      borderColor: [null, null, borderColor, null],\n      borderLineWidth: 1,\n    },\n    fontSize: fontSize,\n    fontVariant: 'normal',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    color: fontColor,\n    bgColor: backgroundColor,\n    lineHeight: fontSize * 1.5,\n  }\n\n  return result\n}\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const frameStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { config, chartType } = advancedVSeed\n  const themConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themConfig) return result\n\n  const borderColor = themConfig.borderColor || 'rgb(224, 224, 224)'\n\n  result.theme.frameStyle = {\n    borderColor,\n    borderLineWidth: 0,\n    cornerRadius: 4,\n  }\n\n  return result\n}\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const selectionStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { config, chartType } = advancedVSeed\n  const themConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themConfig) return result\n\n  const borderColor = themConfig.selectedBorderColor || 'rgb(224, 224, 224)'\n  const backgroundColor = themConfig.selectedBackgroundColor || 'rgb(224, 224, 224, 0.5)'\n\n  result.theme.selectionStyle = {\n    cellBorderColor: borderColor,\n    cellBorderLineWidth: 2,\n    cellBgColor: backgroundColor,\n  }\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport { initTable, dimensionTreeToColumns, measureTreeToColumns, bodyStyle, headerStyle, frameStyle, selectionStyle } from '../pipes'\n\nexport const tableSpecPipeline: SpecPipeline = [\n  initTable,\n  dimensionTreeToColumns,\n  measureTreeToColumns,\n  bodyStyle,\n  headerStyle,\n  frameStyle,\n  selectionStyle,\n]\n","import type { ListTableConstructorOptions } from '@visactor/vtable'\nimport type { SpecPipe } from 'src/types'\n\nexport const initTable: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { dataset } = advancedVSeed\n  const { config } = advancedVSeed\n  const { backgroundColor = 'transparent' } = config.table || {}\n\n  return {\n    ...spec,\n    records: dataset,\n    widthMode: 'standard',\n    heightMode: 'autoHeight',\n    autoWrapText: true,\n    columnResizeMode: 'all',\n    showHeader: true,\n    tooltip: {\n      isShowOverflowTextTooltip: true,\n    },\n    animationAppear: {\n      duration: 300,\n      delay: 250,\n      type: 'one-by-one',\n      direction: 'row',\n    },\n    hover: {\n      highlightMode: 'row',\n    },\n    theme: {\n      underlayBackgroundColor: backgroundColor,\n    },\n  } as ListTableConstructorOptions\n}\n","import { tableAdvancedPipeline, tableSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerTable = () => {\n  Builder._advancedPipelineMap['table'] = tableAdvancedPipeline\n  Builder._specPipelineMap['table'] = tableSpecPipeline\n}","import type { Dimension, DimensionGroup, DimensionTree } from 'src/types'\nimport { preorderTraverse } from '../tree'\n\nexport const findDimensionById = (dimensions: DimensionTree = [], id: string): Dimension | undefined => {\n  if (!dimensions) return undefined\n  let result: Dimension | undefined\n  preorderTraverse<Dimension, DimensionGroup>(dimensions, (node) => {\n    if (!('children' in node)) {\n      if (node.id === id) {\n        result = node as Dimension\n        return true\n      }\n    }\n    return false\n  })\n  return result\n}\n\nexport const findFirstDimension = (dimensions: DimensionTree = []): Dimension | undefined => {\n  if (!dimensions) return undefined\n  let result: Dimension | undefined\n  preorderTraverse<Dimension, DimensionGroup>(dimensions, (node) => {\n    if (!('children' in node)) {\n      result = node as Dimension\n      return true\n    }\n    return false\n  })\n  return result\n}\n\nexport const findAllDimensions = (dimensions: DimensionTree = []): Dimension[] => {\n  if (!dimensions) return []\n  const result: Dimension[] = []\n  preorderTraverse<Dimension, DimensionGroup>(dimensions, (node) => {\n    if (!('children' in node)) {\n      result.push(node as Dimension)\n    }\n    return false\n  })\n  return result\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport { theme } from '../../chart/pipes'\nimport { autoPivotDimensions, autoPivotMeasures, initAdvancedVSeed, pivotTableConfig, records } from '../pipes'\n\nexport const pivotTableAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoPivotMeasures,\n  autoPivotDimensions,\n  records,\n  pivotTableConfig,\n  theme,\n]\n","import { findAllMeasures } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, Measures } from 'src/types'\n\nexport const autoPivotMeasures: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const measures = findAllMeasures(vseed.measures as Measures)\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (vseed.measures) {\n    result.measures = findAllMeasures(measures)\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  result.measures = Object.keys(sample)\n    .filter((key) => {\n      return top100dataset.some((item) => typeof item[key] === 'number') && !['', null, undefined].includes(key)\n    })\n    .map((measure) => ({\n      id: measure,\n      alias: measure,\n    }))\n\n  return result\n}\n","import { findAllDimensions, findAllMeasures } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, Dimensions, Measures } from 'src/types'\n\nexport const autoPivotDimensions: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dimensions, dataset } = vseed\n\n  const measures = findAllMeasures(advancedVSeed.measures as Measures)\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (dimensions) {\n    const newDimensions = findAllDimensions(dimensions) as Dimensions\n    result.dimensions = newDimensions.map((item, index) => {\n      if (item.location === 'rowDimension' || item.location === 'columnDimension') {\n        return item\n      }\n      return {\n        ...item,\n        location: index % 2 === 0 ? 'columnDimension' : 'rowDimension',\n      }\n    }) as Dimensions\n\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  let i = 0\n  result.dimensions = Object.keys(sample)\n    .filter(\n      (key) =>\n        top100dataset.some((item) => typeof item[key] === 'string') &&\n        !['', null, undefined].includes(key) &&\n        !measures.some((measure) => measure.id === key),\n    )\n    .map((dim) => ({\n      id: dim,\n      alias: dim,\n      location: i++ % 2 === 0 ? 'columnDimension' : 'rowDimension',\n    })) as Dimensions\n\n  return result\n}\n","import { pick } from 'remeda'\nimport type { AdvancedPipe, Config } from 'src/types'\n\nexport const pivotTableConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, [\n    'backgroundColor',\n    'bodyFontSize',\n    'bodyFontColor',\n    'bodyBackgroundColor',\n    'headerFontSize',\n    'headerFontColor',\n    'headerBackgroundColor',\n    'hoverHeaderBackgroundColor',\n    'hoverHeaderInlineBackgroundColor',\n    'selectedBorderColor',\n    'selectedBackgroundColor',\n  ]) as Config['table']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  initPivotTable,\n  pivotColumns,\n  pivotRows,\n  pivotIndicators,\n  bodyStyle,\n  headerStyle,\n  rowHeaderStyle,\n  cornerHeaderStyle,\n  frameStyle,\n  selectionStyle,\n} from '../pipes'\nimport { dataConfig } from '../pipes/indicators/pivotDataConfig'\n\nexport const pivotTableSpecPipeline: SpecPipeline = [\n  initPivotTable,\n  pivotColumns,\n  pivotRows,\n  pivotIndicators,\n  bodyStyle,\n  headerStyle,\n  rowHeaderStyle,\n  cornerHeaderStyle,\n  frameStyle,\n  selectionStyle,\n  dataConfig,\n]\n","import type { PivotTableConstructorOptions } from '@visactor/vtable'\nimport type { SpecPipe } from 'src/types'\n\nexport const initPivotTable: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { dataset } = advancedVSeed\n  const { config } = advancedVSeed\n  const { backgroundColor = 'transparent' } = config.pivotTable || {}\n  return {\n    ...spec,\n    records: dataset,\n    widthMode: 'standard',\n    heightMode: 'autoHeight',\n    autoWrapText: true,\n    columnResizeMode: 'all',\n    columnResizeType: 'column',\n    showColumnHeader: true,\n    showRowHeader: true,\n    select: {\n      highlightMode: 'cell',\n      headerSelectMode: 'inline',\n    },\n    hover: {\n      highlightMode: 'cross',\n    },\n    tooltip: {\n      isShowOverflowTextTooltip: true,\n    },\n    widthAdaptiveMode: 'all',\n    animationAppear: {\n      duration: 300,\n      delay: 250,\n      type: 'one-by-one',\n      direction: 'row',\n    },\n    theme: {\n      underlayBackgroundColor: backgroundColor,\n    },\n  } as PivotTableConstructorOptions\n}\n","import type { PivotTableConstructorOptions } from '@visactor/vtable'\nimport type { Dimensions, SpecPipe } from 'src/types'\n\nexport const pivotColumns: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const dimensions = advancedVSeed.dimensions as Dimensions\n  const columns = dimensions.filter((item) => item['location'] === 'columnDimension')\n\n  return {\n    ...spec,\n    columns: columns.map((item) => {\n      return {\n        dimensionKey: item.id,\n        title: item.alias || item.id,\n        width: 'auto',\n      }\n    }),\n  } as PivotTableConstructorOptions\n}\n","import type { Dimensions, SpecPipe } from 'src/types'\n\nexport const pivotRows: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const dimensions = advancedVSeed.dimensions as Dimensions\n  const rows = dimensions.filter((item) => item['location'] === 'rowDimension')\n\n  return {\n    ...spec,\n    rows: rows.map((item) => {\n      return {\n        dimensionKey: item.id,\n        title: item.alias || item.id,\n        width: 'auto',\n      }\n    }),\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { FieldFormat } from '@visactor/vtable/es/ts-types'\nimport { isEmpty } from 'remeda'\nimport { intl } from 'src/i18n'\nimport { autoFormatter, createFormatter, isMeasure } from 'src/pipeline/utils'\nimport type { Locale, Measure, Measures, SpecPipe } from 'src/types'\n\nexport const pivotIndicators: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { locale } = advancedVSeed\n  const measures = (advancedVSeed as unknown as { measures: Measures }).measures\n\n  return {\n    ...spec,\n    indicatorsAsCol: true,\n    indicatorTitle: intl.i18n`指标名称`,\n    indicators: measures.map((item) => {\n      if (isMeasure(item)) {\n        return {\n          cellType: 'text',\n          indicatorKey: item.id,\n          title: item.alias || item.id,\n          width: 'auto',\n          format: fieldFormat(item, locale),\n        }\n      }\n      return {}\n    }) as unknown as PivotChartConstructorOptions['indicators'],\n  }\n}\n\nconst fieldFormat =\n  (node: Measure, locale: Locale): FieldFormat =>\n  (value: number | string) => {\n    const { format = {}, autoFormat = true } = node\n    if (!isEmpty(format)) {\n      const formatter = createFormatter(format)\n      return formatter(value)\n    }\n\n    if (autoFormat) {\n      return autoFormatter(value, locale)\n    }\n\n    return\n  }\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const rowHeaderStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { config, chartType } = advancedVSeed\n  const themConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themConfig) return result\n\n  // basic\n  const borderColor = themConfig.borderColor || 'rgb(224, 224, 224)'\n  const backgroundColor = themConfig.headerBackgroundColor || '#EEF1F5'\n  const fontColor = themConfig.headerFontColor || '#1B1F23'\n  const fontSize = themConfig.headerFontSize || 12\n  // Interaction\n  const hoverCellBgColor = themConfig.hoverHeaderBackgroundColor || '#bedaff'\n  const hoverInlineColor = themConfig.hoverHeaderInlineBackgroundColor || '#bedaff'\n\n  result.theme.rowHeaderStyle = {\n    borderColor: borderColor,\n    borderLineWidth: 1,\n    padding: [8.6, 12, 8.6, 12],\n    textAlign: 'left',\n    hover: {\n      cellBgColor: hoverCellBgColor,\n      inlineRowBgColor: hoverInlineColor,\n      inlineColumnBgColor: hoverInlineColor,\n    },\n    frameStyle: {\n      borderColor: [null, borderColor, null, null],\n      borderLineWidth: 1,\n    },\n    fontSize: fontSize,\n    fontVariant: 'normal',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    color: fontColor,\n    bgColor: backgroundColor,\n    lineHeight: fontSize * 1.5,\n  }\n\n  return result\n}\n","import type { BaseTableConstructorOptions } from '@visactor/vtable/es/ts-types'\nimport type { SpecPipe, TableConfig } from 'src/types'\n\nexport const cornerHeaderStyle: SpecPipe = (spec, context) => {\n  const result = { ...spec } as BaseTableConstructorOptions\n  const { advancedVSeed } = context\n  const { config, chartType } = advancedVSeed\n  const themConfig = config?.[chartType] as TableConfig\n\n  if (!result.theme || !themConfig) return result\n\n  // basic\n  const borderColor = themConfig.borderColor || 'rgb(224, 224, 224)'\n  const backgroundColor = themConfig.headerBackgroundColor || '#EEF1F5'\n  const fontColor = themConfig.headerFontColor || '#1B1F23'\n  const fontSize = themConfig.headerFontSize || 12\n  // Interaction\n  const hoverInlineColor = themConfig.hoverHeaderInlineBackgroundColor\n  const hoverCellColor = themConfig.hoverHeaderBackgroundColor\n\n  result.theme.cornerHeaderStyle = {\n    borderColor: [borderColor, borderColor],\n    borderLineWidth: 1,\n    padding: [8, 12, 8, 12],\n    textAlign: 'left',\n    hover: {\n      cellBgColor: hoverCellColor || undefined,\n      inlineRowBgColor: hoverInlineColor || undefined,\n      inlineColumnBgColor: hoverInlineColor || undefined,\n    },\n    frameStyle: {\n      borderColor: [null, borderColor, borderColor, null],\n      borderLineWidth: 1,\n    },\n    fontSize: fontSize,\n    fontVariant: 'normal',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    color: fontColor,\n    bgColor: backgroundColor,\n    lineHeight: fontSize * 1.5,\n  }\n\n  return result\n}\n","import { AggregationType } from '@visactor/vtable/es/ts-types'\nimport { findAllMeasures } from 'src/pipeline/utils'\nimport type { SpecPipe } from 'src/types'\n\nexport const dataConfig: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const measures = findAllMeasures(advancedVSeed.measures)\n\n  const aggregationRules = measures.map((measure) => ({\n    field: measure.id,\n    aggregationType: AggregationType.NONE,\n    indicatorKey: measure.id,\n  }))\n\n  return {\n    ...spec,\n    dataConfig: {\n      aggregationRules,\n    },\n  }\n}\n","import { pivotTableAdvancedPipeline, pivotTableSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerPivotTable = () => {\n  Builder._advancedPipelineMap['pivotTable'] = pivotTableAdvancedPipeline\n  Builder._specPipelineMap['pivotTable'] = pivotTableSpecPipeline\n}","import type { AdvancedPipe, AdvancedVSeed } from 'src/types'\n\nexport const initAdvancedVSeed: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType, locale } = vseed\n  return {\n    ...advancedVSeed,\n    chartType,\n    locale: locale || 'zh-CN',\n  } as AdvancedVSeed\n}\n","import type { Measure, MeasureGroup, MeasureTree } from \"src/types\"\nimport { preorderTraverse } from \"../tree/traverse\"\n\n/**\n * 获取measures的深度\n * @param measures\n * @param id\n * @returns\n */\nexport const measureDepth = (measures: MeasureTree = []): number => {\n  if (!measures) return 0\n  let depth = 1\n  preorderTraverse<Measure, MeasureGroup>(measures, (node) => {\n    if ('children' in node) {\n      depth = Math.max(depth, 1 + measureDepth(node.children))\n    }\n    return false\n  })\n  return depth\n}\n","import type { Dimensions, DimensionGroup, DimensionTree, VSeed } from 'src/types'\nimport { measureDepth } from './measures'\n\nexport const isTable = (vseed: VSeed) => {\n  return vseed.chartType === 'table'\n}\nexport const isPivotTable = (vseed: VSeed) => {\n  return vseed.chartType === 'pivotTable'\n}\nexport const isVTable = (vseed: VSeed) => {\n  return ['table', 'pivotTable'].includes(vseed.chartType)\n}\nexport const isVChart = (vseed: VSeed): boolean => {\n  return !isVTable(vseed)\n}\nexport const isPivotChart = (vseed: VSeed) => {\n  if (isVTable(vseed)) {\n    return false\n  }\n\n  if (vseed.chartType === 'dualAxis') {\n    if (vseed.measures) {\n      const depth = measureDepth(vseed.measures)\n      if (depth === 3) {\n        return true\n      }\n      return false\n    }\n\n    if (vseed.dualMeasures && vseed.dualMeasures.length > 1) {\n      return true\n    }\n\n    return false\n  }\n\n  const { measures = [], dimensions = [] } = vseed as {\n    measures: DimensionTree\n    dimensions: Dimensions\n  }\n\n  const hasRowOrColumnDimension =\n    dimensions &&\n    dimensions.some((dimension) => dimension.location === 'rowDimension' || dimension.location === 'columnDimension')\n\n  const hasMeasureGroup = measures && measures.some((measure: DimensionGroup) => measure && measure.children)\n\n  return hasRowOrColumnDimension || hasMeasureGroup\n}\n","import { isPivotChart } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, DimensionGroup, MeasureGroup, MeasureTree } from 'src/types'\n\nexport const autoMeasures: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { measures, dataset } = vseed\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (isPivotChart(vseed)) {\n    return autoMeasureGroup(advancedVSeed, context)\n  }\n\n  if (measures) {\n    result.measures = measures as MeasureTree\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  result.measures = Object.keys(sample)\n    .filter((key) => {\n      return top100dataset.some((item) => typeof item[key] === 'number') && !['', null, undefined].includes(key)\n    })\n    .map((measure) => ({\n      id: measure,\n      alias: measure,\n    }))\n\n  return result\n}\n\nconst autoMeasureGroup: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { measures } = vseed as {\n    measures?: MeasureGroup[]\n  }\n  const hasMeasureGroup = measures?.some((measure) => measure.children)\n\n  if (!measures) {\n    return advancedVSeed\n  }\n\n  // 没有指标组, 则自动添加一个指标组\n  if (!hasMeasureGroup) {\n    const newMeasures = [\n      {\n        id: 'measureGroup',\n        alias: 'measureGroup',\n        children: measures,\n      },\n    ]\n    return {\n      ...advancedVSeed,\n      measures: newMeasures,\n    }\n  }\n\n  // 存在指标组, 则任意连续的独立指标成组\n  let currentGroup: DimensionGroup = createEmptyMeasureGroup()\n  const measureGroups: DimensionGroup[] = []\n  for (const measure of measures) {\n    if ('children' in measure) {\n      // 当前指标组之前的所有独立指标成组\n      if (currentGroup.children?.length) {\n        currentGroup.alias = currentGroup.children.map((item) => item.alias).join('-')\n        currentGroup.id = currentGroup.alias + currentGroup.children.map((item) => item.id).join('-')\n        measureGroups.push(currentGroup)\n        currentGroup = createEmptyMeasureGroup()\n      }\n      // 当前是指标组\n      measureGroups.push(measure)\n    } else {\n      currentGroup.children?.push(measure)\n    }\n  }\n\n  // 最后一组\n  if (currentGroup.children?.length) {\n    currentGroup.alias = currentGroup.children.map((item) => item.alias).join('-')\n    currentGroup.id = currentGroup.alias + currentGroup.children.map((item) => item.id).join('-')\n    measureGroups.push(currentGroup)\n    currentGroup = createEmptyMeasureGroup()\n  }\n\n  advancedVSeed.measures = measureGroups\n  return advancedVSeed\n}\n\nconst createEmptyMeasureGroup = () => {\n  return {\n    id: '',\n    alias: '',\n    children: [],\n  }\n}\n","import { findAllMeasures } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, DimensionTree } from 'src/types'\n\nexport const autoDimensions: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dimensions, dataset } = vseed\n\n  const measures = findAllMeasures(advancedVSeed.measures as DimensionTree)\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (dimensions) {\n    result.dimensions = dimensions.map((dim) => ({\n      location: 'dimension',\n      ...dim,\n    }))\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  result.dimensions = Object.keys(sample)\n    .filter(\n      (key) =>\n        top100dataset.some((item) => typeof item[key] === 'string') &&\n        !['', null, undefined].includes(key) &&\n        !measures.some((measure) => measure.id === key),\n    )\n    .map((dim) => ({\n      id: dim,\n      alias: dim,\n      location: 'dimension',\n    }))\n\n  return result\n}\n","import type { AdvancedPipe, AdvancedPipeline, AdvancedPipelineContext, AdvancedVSeed } from 'src/types'\nimport { execPipeline, isPivotChart } from 'src/pipeline/utils'\n\nexport const pivotAdapter = (pipeline: AdvancedPipeline, pivotPipeline: AdvancedPipeline): AdvancedPipe => {\n  return (advancedVSeed, context) => {\n    const { vseed } = context\n    const usePivotChart = isPivotChart(vseed)\n\n    if (usePivotChart) {\n      return execPipeline<AdvancedVSeed, AdvancedPipelineContext>(pivotPipeline, context, advancedVSeed)\n    }\n\n    return execPipeline<AdvancedVSeed, AdvancedPipelineContext>(pipeline, context, advancedVSeed)\n  }\n}\n","// Reshape Measures\nexport const FoldMeasureName = '__MeaName__'\nexport const FoldMeasureId = '__MeaId__'\nexport const FoldMeasureValue = '__MeaValue__'\n\nexport const FoldPrimaryMeasureValue = '__MeaPrimaryValue__'\nexport const FoldSecondaryMeasureValue = '__MeaSecondaryValue__'\n\n// Reshape Dimensions\nexport const UnfoldDimensionGroup = '__DimGroup__'\nexport const UnfoldDimensionGroupId = '__DimGroupID__'\n\nexport const Separator = '-'\n\nexport const ORIGINAL_DATA = '__OriginalData__'\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Dataset, FoldInfo, Dimension, Measures, DimensionTree } from 'src/types'\nimport { FoldMeasureId, FoldMeasureName, FoldMeasureValue, ORIGINAL_DATA } from './constant'\nimport { omit } from 'remeda'\n\n/**\n * 折叠指定的指标\n * @description 合并指定的指标为1个, 无论多少个, 都能转换为1个, 取名为fold, 意为折叠后混合在一起.\n */\nexport const foldMeasures = (\n  dataset: Dataset,\n  measures: Dimension[],\n  measureId = FoldMeasureId,\n  measureName = FoldMeasureName,\n  measureValue = FoldMeasureValue,\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n} => {\n  const foldInfo: FoldInfo = {\n    measureId,\n    measureName,\n    measureValue,\n    foldMap: {},\n  }\n  const result: Dataset = new Array(dataset.length * measures.length) as Dataset\n  let index = 0\n  const ids = measures.map((d) => d.id)\n  for (let i = 0; i < dataset.length; i++) {\n    for (let j = 0; j < measures.length; j++) {\n      const datum: Record<string, any> = omit({ ...dataset[i] }, ids)\n\n      datum[ORIGINAL_DATA] = dataset[i]\n\n      const measure = measures[j]\n      const { id, alias } = measure\n\n      datum[id] = dataset[i][id] as unknown\n      datum[measureId] = id\n      datum[measureName] = alias || id\n      datum[measureValue] = dataset[i][id] as unknown\n\n      foldInfo.foldMap[id] = alias\n      result[index++] = datum\n    }\n  }\n\n  return {\n    dataset: result,\n    foldInfo,\n  }\n}\n\n/**\n * 折叠指定的指标组, 至多支持2层\n * @param dataset\n * @param measures\n * @param measureId\n * @param measureName\n * @param measureValue\n * @returns\n */\nexport const foldMeasureGroups = (\n  dataset: Dataset,\n  measures: Required<DimensionTree>,\n  measureId = '__MeaId__',\n  measureName = '__MeaName__',\n  measureValue = '__MeaValue__',\n) => {\n  const groups: Array<Measures> = []\n  if (!measures) {\n    return {\n      dataset,\n    }\n  }\n\n  // 没有分组, 直接折叠所有指标\n  if (!measures.some((measure) => 'children' in measure)) {\n    return foldMeasures(dataset, measures, measureId, measureName, measureValue)\n  }\n\n  measures.forEach((measure) => {\n    if ('children' in measure && measure.children) {\n      groups.push(measure.children)\n    } else {\n      groups.push([measure])\n    }\n  })\n\n  // 一组返回一个dataset\n  const datasetGroup = groups.map((measures) => {\n    if (!measures) {\n      return []\n    }\n    return foldMeasures(dataset, measures, measureId, measureName, measureValue)\n  })\n\n  return {\n    datasetGroup,\n  }\n}\n","import type { Dataset, Datum, Dimension, Measure } from 'src/types'\nimport type { UnfoldInfo } from 'src/types'\nimport { UnfoldDimensionGroup, Separator, UnfoldDimensionGroupId, FoldMeasureId } from './constant'\nimport { unique } from 'remeda'\n\n/**\n * TODO: 优化展开维度的性能\n * 展开指定的维度\n * @description 第一步: 根据指定的维度, 将多个维度展开为N个指标(取决于维值去重后的数量), 随后合并成一个维度.\n */\nexport const unfoldDimensions = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  unfoldStartIndex: number = 0,\n  unfoldGroupName: string = UnfoldDimensionGroup,\n  unfoldGroupId: string = UnfoldDimensionGroupId,\n  foldMeasureId: string = FoldMeasureId,\n  dimensionsSeparator: string = Separator,\n): {\n  dataset: Dataset\n  unfoldInfo: UnfoldInfo\n} => {\n  if (unfoldStartIndex < 0 || unfoldStartIndex >= dimensions.length) {\n    throw new Error('unfoldStartIndex is out of range')\n  }\n\n  const dimensionsToBeUnfolded = dimensions.slice(unfoldStartIndex)\n  const unfoldInfo: UnfoldInfo = {\n    groupName: unfoldGroupName,\n    groupId: unfoldGroupId,\n    colorItems: [],\n    colorIdMap: {},\n  }\n\n  // 指标为空或维度为空, 则不检测\n  if (dimensions.length === 0 || measures.length === 0) {\n    return {\n      dataset,\n      unfoldInfo: {\n        groupName: unfoldGroupName,\n        groupId: unfoldGroupId,\n        colorItems: [],\n        colorIdMap: {},\n      },\n    }\n  }\n\n  const colorItems = []\n  const colorMap: Record<string, string> = {}\n  for (let i = 0; i < dataset.length; i++) {\n    const datum = dataset[i]\n    const colorName = generateDimGroupName(dimensionsToBeUnfolded, datum, dimensionsSeparator)\n    const colorId = datum[foldMeasureId]\n      ? [colorName, datum[foldMeasureId] as string].join(dimensionsSeparator)\n      : colorName\n    datum[unfoldGroupName] = colorName\n    datum[unfoldGroupId] = colorId\n    colorItems.push(colorId)\n    colorMap[colorId] = colorName\n  }\n\n  unfoldInfo.colorItems = unique(colorItems)\n  unfoldInfo.colorIdMap = colorMap\n  return {\n    dataset,\n    unfoldInfo,\n  }\n}\n\n/**\n * 生成维度组合名称\n * @param dimensionsToBeGrouped 待分组的维度\n * @param datum 数据项\n * @param dimensionsSeparator 维度分隔符\n * @returns 维度组合名称\n */\nexport const generateDimGroupName = (dimensionsToBeGrouped: Dimension[], datum: Datum, dimensionsSeparator: string) => {\n  return dimensionsToBeGrouped.map((dim) => String(datum[dim.id])).join(dimensionsSeparator)\n}\n","import type { Dataset, Measure } from 'src/types'\nimport type { UnfoldInfo } from 'src/types'\nimport { UnfoldDimensionGroup, UnfoldDimensionGroupId } from './constant'\nimport { unique } from 'remeda'\n\n/**\n * 展开0个维度的特殊情况, 折线图、面积图、雷达图只有指标没有维度的情况, 应该所有的指标应该作为一个维度\n * @description\n */\nexport const unfoldZeroDimensions = (\n  dataset: Dataset,\n  measures: Measure[],\n  measureName: string,\n  unfoldGroupName: string = UnfoldDimensionGroup,\n  unfoldGroupId: string = UnfoldDimensionGroupId,\n): {\n  dataset: Dataset\n  unfoldInfo: UnfoldInfo\n} => {\n  const unfoldInfo: UnfoldInfo = {\n    groupName: unfoldGroupName,\n    groupId: unfoldGroupId,\n    colorItems: [],\n    colorIdMap: {},\n  }\n\n  // 指标为空或维度为空, 则不检测\n  if (measures.length === 0) {\n    return {\n      dataset,\n      unfoldInfo: {\n        groupName: unfoldGroupName,\n        groupId: unfoldGroupId,\n        colorItems: [],\n        colorIdMap: {},\n      },\n    }\n  }\n\n  const colorItems = []\n  const colorMap: Record<string, string> = {}\n  for (let i = 0; i < dataset.length; i++) {\n    const datum = dataset[i]\n    const colorName = measureName\n    const colorId = measureName\n    datum[unfoldGroupName] = colorName\n    datum[unfoldGroupId] = colorId\n    colorItems.push(colorId)\n    colorMap[colorId] = colorName\n  }\n\n  unfoldInfo.colorItems = unique(colorItems)\n  unfoldInfo.colorIdMap = colorMap\n  return {\n    dataset,\n    unfoldInfo,\n  }\n}\n","import type { Dataset, Dimension, FoldInfo, Measure, UnfoldInfo } from 'src/types'\nimport { foldMeasures } from './foldMeasures'\nimport {\n  UnfoldDimensionGroup,\n  FoldMeasureId,\n  FoldMeasureName,\n  FoldMeasureValue,\n  UnfoldDimensionGroupId,\n} from './constant'\nimport { unfoldDimensions } from './unfoldDimensions'\nimport { unfoldZeroDimensions } from './unfoldZeroDimensions'\nimport { i18n } from '../i18n'\n\nconst emptyReshapeResult: {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} = {\n  dataset: [],\n  foldInfo: {\n    foldMap: {},\n    measureId: '',\n    measureName: '',\n    measureValue: '',\n  },\n  unfoldInfo: {\n    groupName: '',\n    groupId: '',\n    colorItems: [],\n    colorIdMap: {},\n  },\n}\n/**\n * 数据重塑为2个维度1个指标, 并且不根据指标名称展开出一个新维度\n * @param dataset\n * @param dimensions\n * @param measures\n * @returns\n */\nexport const dataReshapeFor2D1M0Name = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  options?: {\n    foldMeasureId?: string\n    foldMeasureName?: string\n    foldMeasureValue?: string\n    unfoldDimensionGroup?: string\n    unfoldDimensionGroupId?: string\n  },\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} => {\n  const {\n    foldMeasureId = FoldMeasureId,\n    foldMeasureName = FoldMeasureName,\n    foldMeasureValue = FoldMeasureValue,\n    unfoldDimensionGroup = UnfoldDimensionGroup,\n    unfoldDimensionGroupId = UnfoldDimensionGroupId,\n  } = options || {}\n  if (dimensions.length === 0 && measures.length === 0) {\n    return emptyReshapeResult\n  }\n\n  // 合并所有指标为1个指标\n  const { dataset: foldedDataset, foldInfo } = foldMeasures(\n    dataset,\n    measures,\n    foldMeasureId,\n    foldMeasureName,\n    foldMeasureValue,\n  )\n\n  if (dimensions.length === 0) {\n    const { dataset: finalDataset, unfoldInfo } = unfoldZeroDimensions(\n      foldedDataset,\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      i18n`指标名称`,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  } else {\n    const onlyOneMeasure = measures.length === 1\n    const onlyOneDimension = dimensions.length === 1\n\n    const dims = [...dimensions]\n    if (!onlyOneMeasure || onlyOneDimension) {\n      dims.push({ id: foldMeasureName, alias: i18n`指标名称`, location: 'dimension' })\n    }\n\n    // 展开指定的维度为指标\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      dims,\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      1,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  }\n}\n","import { dataReshapeFor2D1M0Name } from 'src/dataReshape'\nimport type { AdvancedPipe } from 'src/types'\n\n/**\n * @description 数据重塑, 将任意维度、任意指标, 重塑为2个维度1个指标, 并且在0维度时, 合并所有指标为一个维度. 兼容折线图、面积图、雷达图只有指标, 没有维度的场景\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo2D1M0Name: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n\n  const { dataset: newDatasets, foldInfo, unfoldInfo } = dataReshapeFor2D1M0Name(dataset, dimensions, measures)\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: [\n      {\n        id: '2D1M',\n        index: 0,\n        foldInfo,\n        unfoldInfo,\n      },\n    ],\n    dimensions,\n    measures,\n  }\n}\n","import { FoldMeasureId, FoldMeasureName, FoldMeasureValue, UnfoldDimensionGroup } from 'src/dataReshape/constant'\nimport { dataReshapeFor2D1M0Name } from 'src/dataReshape'\nimport type { AdvancedPipe, Dataset, DatasetReshapeInfo, Dimensions, MeasureGroup } from 'src/types'\n\n/**\n * @description 数据重塑为透视结构, 如果存在指标分组, 则将数据按组划分. 如果存在行列维度, 则生成行列树结构. 并且在0维度时, 合并所有指标为一个维度. 兼容折线图、面积图、雷达图只有指标, 没有维度的场景\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo2D1M0Name: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { measures } = advancedVSeed\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!measures || !dimensions) {\n    return result\n  }\n\n  const measureGroups: MeasureGroup[] = []\n  if (measures) {\n    measures.forEach((measure: MeasureGroup) => {\n      if (measure.children && measure.children.length > 0) {\n        measureGroups.push(measure)\n      }\n    })\n  }\n  const commonDimensions = dimensions.filter((dim) => dim.location === 'dimension')\n\n  const newDatasets: Dataset = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n  measureGroups.forEach((measureGroup, index) => {\n    const measures = measureGroup.children\n    if (!measures) {\n      return\n    }\n    const groupId = measureGroup.id\n    const {\n      dataset: newSubDataset,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor2D1M0Name(dataset, commonDimensions, measures, {\n      foldMeasureId: FoldMeasureId,\n      foldMeasureName: FoldMeasureName,\n      foldMeasureValue: FoldMeasureValue + groupId,\n      unfoldDimensionGroup: UnfoldDimensionGroup,\n    })\n    const reshapeInfo = {\n      id: groupId,\n      index,\n      foldInfo,\n      unfoldInfo,\n    }\n    newDatasets.push(newSubDataset)\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: datasetReshapeInfo,\n  }\n}\n","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingXY: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions) {\n    return result\n  }\n\n  const xDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const x = [isZeroDimension ? foldInfo.measureName : xDimension?.id]\n    const y = [foldInfo.measureValue]\n    const group = [unfoldInfo.groupId]\n    const color = [foldInfo.measureName]\n\n    return [\n      ...prev,\n      {\n        x,\n        y,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import { sort, unique } from 'remeda'\nimport type { AdvancedPipe, Dataset, Datum, Line, Sort, SortLegend } from 'src/types'\n\nexport const sortXBandAxis: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { sort: sortAxis, dataset } = vseed as Line\n  const { encoding } = advancedVSeed\n  const xField = encoding?.[0]?.x?.[0]\n  if (!sortAxis || !xField) {\n    return advancedVSeed\n  }\n  if (!result.analysis) result.analysis = {}\n  if (!result.analysis.orderMapping) result.analysis.orderMapping = {}\n\n  const axisOrderResult = calcOrder(sortAxis, xField, dataset)\n\n  result.analysis.orderMapping[xField] = axisOrderResult\n\n  return result\n}\n\nexport const sortYBandAxis: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { sort: sortAxis, dataset } = vseed as Line\n  const { encoding } = advancedVSeed\n  const yField = encoding?.[0]?.y?.[0]\n  if (!sortAxis || !yField) {\n    return advancedVSeed\n  }\n  if (!result.analysis) result.analysis = {}\n  if (!result.analysis.orderMapping) result.analysis.orderMapping = {}\n\n  const axisOrderResult = calcOrder(sortAxis, yField, dataset)\n\n  result.analysis.orderMapping[yField] = axisOrderResult\n\n  return result\n}\n\nexport const sortLegend: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { sortLegend } = vseed as Line\n  const { datasetReshapeInfo } = advancedVSeed\n  const groupField = datasetReshapeInfo?.[0]?.unfoldInfo?.groupId\n  const colorIdMap = datasetReshapeInfo?.[0]?.unfoldInfo?.colorIdMap\n  const colorItems = datasetReshapeInfo?.[0]?.unfoldInfo?.colorItems\n  if (!sortLegend || !groupField || !colorIdMap || !colorItems) {\n    return advancedVSeed\n  }\n\n  if (!result.analysis) result.analysis = {}\n  if (!result.analysis.orderMapping) result.analysis.orderMapping = {}\n\n  if (sortLegend.customOrder) {\n    const nameMap = Object.keys(colorIdMap).reduce<Record<string, string>>((pre, cur) => {\n      pre[colorIdMap[cur]] = cur\n      return pre\n    }, {})\n\n    // 先根据名称匹配, 若名称不存在, 则根据id匹配, 从而兼容名称和id的两种情况\n    const orderRes = sortLegend.customOrder.map((itemNameOrId) =>\n      nameMap[itemNameOrId] ? nameMap[itemNameOrId] : itemNameOrId,\n    )\n    result.analysis.orderMapping[groupField] = orderRes\n    return result\n  }\n\n  const dataset = advancedVSeed.dataset?.flat(2)\n\n  const orderRes = calcOrder(sortLegend, groupField, dataset || [])\n  result.analysis.orderMapping[groupField] = orderRes\n\n  return result\n}\n\nconst calcOrder = (sortConfig: Sort | SortLegend, id: string, dataset: Dataset): string[] => {\n  if (sortConfig.customOrder) {\n    return sortConfig.customOrder\n  }\n\n  const order = sortConfig.order || 'asc'\n  const orderBy = sortConfig.orderBy\n\n  const res = sort(dataset, (a, b) => {\n    const aValue = a[orderBy || id] as string | number\n    const bValue = b[orderBy || id] as string | number\n\n    if (order === 'asc') {\n      if (aValue < bValue) {\n        return -1\n      }\n      if (aValue > bValue) {\n        return 1\n      }\n      return 0\n    }\n    if (aValue > bValue) {\n      return -1\n    }\n    if (aValue < bValue) {\n      return 1\n    }\n    return 0\n  })\n\n  return unique(res.map((item: Datum) => item[id] as string))\n}\n","import { pick } from 'remeda'\nimport type { AdvancedPipe, AdvancedVSeed, Config } from 'src/types'\n\nexport const lineConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, [\n    'backgroundColor',\n    'color',\n    'label',\n    'legend',\n    'tooltip',\n    'xAxis',\n    'yAxis',\n    'crosshairLine',\n  ]) as Config['line']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result as AdvancedVSeed\n}\n\nexport const columnConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, [\n    'backgroundColor',\n    'color',\n    'label',\n    'legend',\n    'tooltip',\n    'xAxis',\n    'yAxis',\n    'crosshairRect',\n    'stackCornerRadius',\n  ]) as Config['column']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result as AdvancedVSeed\n}\n\nexport const pieConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, ['backgroundColor', 'color', 'label', 'legend', 'tooltip']) as Config['pie']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result as AdvancedVSeed\n}\n\nexport const areaConfig: AdvancedPipe = lineConfig\nexport const areaPercentConfig: AdvancedPipe = lineConfig\nexport const scatterConfig: AdvancedPipe = lineConfig\n\nexport const barConfig: AdvancedPipe = columnConfig\nexport const barParallelConfig: AdvancedPipe = columnConfig\nexport const barPercentConfig: AdvancedPipe = columnConfig\nexport const columnParallelConfig: AdvancedPipe = columnConfig\nexport const columnPercentConfig: AdvancedPipe = columnConfig\n\nexport const donutConfig: AdvancedPipe = pieConfig\nexport const roseConfig: AdvancedPipe = pieConfig\nexport const roseParallelConfig: AdvancedPipe = pieConfig\nexport const funnelConfig: AdvancedPipe = pieConfig\nexport const heatmapConfig: AdvancedPipe = pieConfig\nexport const radarConfig: AdvancedPipe = pieConfig","import { pick } from 'remeda'\nimport type { AdvancedPipe, AdvancedVSeed } from 'src/types'\n\nexport const markStyle: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n\n  const markStyle = pick(vseed, ['barStyle', 'pointStyle', 'lineStyle', 'areaStyle']) as AdvancedVSeed['markStyle']\n\n  return { ...advancedVSeed, markStyle }\n}\n","import { pick } from 'remeda'\nimport type { AdvancedPipe, AdvancedVSeed } from 'src/types'\n\nexport const annotation: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const annotation = pick(vseed, [\n    'annotationPoint',\n    'annotationHorizontalLine',\n    'annotationVerticalLine',\n    'annotationArea',\n  ]) as AdvancedVSeed['annotation']\n\n  return { ...advancedVSeed, annotation }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  lineConfig,\n  annotation,\n  markStyle,\n  sortXBandAxis,\n  sortLegend,\n  reshapeTo2D1M0Name,\n  pivotReshapeTo2D1M0Name,\n} from '../pipes'\n\nexport const lineAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M0Name], [pivotReshapeTo2D1M0Name]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  lineConfig,\n  theme,\n  markStyle,\n  annotation\n]\n","import type { ILineChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initLine: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'line'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n\n  return result\n}\n","import type { ILineChartSpec } from '@visactor/vchart'\nimport { Separator } from 'src/dataReshape'\nimport type { Color, SpecPipe } from 'src/types'\n\nexport const color: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { datasetReshapeInfo, chartType } = advancedVSeed\n  const { unfoldInfo } = datasetReshapeInfo[0]\n  const baseConfig = advancedVSeed.config[chartType] as { color: Color }\n\n  if (!baseConfig || !baseConfig.color) {\n    return result\n  }\n\n  const colorItems = unfoldInfo.colorItems\n  const colorIdMap = unfoldInfo.colorIdMap\n\n  const { color } = baseConfig\n  const { colorScheme, colorMapping } = color\n  const mappingList: Array<[string, string]> = []\n  if (colorMapping) {\n    Object.entries(colorMapping)\n      .sort((a, b) => a[0].split(Separator).length - b[0].split(Separator).length)\n      .forEach(([key, value]) => {\n        const idMap = Object.entries(colorIdMap).filter(([_, v]) => v.includes(key))\n\n        for (const [colorId] of idMap) {\n          mappingList.push([colorId, value])\n        }\n      })\n  }\n\n  result.color = {\n    type: 'ordinal',\n    domain: colorItems,\n    range: colorScheme,\n    specified: Object.fromEntries(mappingList),\n  } as ILineChartSpec['color']\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport type { BackgroundColor, SpecPipe } from 'src/types'\n\nexport const backgroundColor: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed } = context\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { backgroundColor: BackgroundColor }\n\n  const { backgroundColor } = baseConfig\n\n  return {\n    ...result,\n    background: backgroundColor,\n  }\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { isPivotChart } from 'src/pipeline/utils'\nimport type { SpecPipe } from 'src/types'\n\nexport const datasetXY: SpecPipe = (spec, context) => {\n  const { advancedVSeed, vseed } = context\n  const { encoding, analysis, datasetReshapeInfo } = advancedVSeed\n  const orderMapping = analysis?.orderMapping || {}\n  const angle = encoding[0]?.angle?.[0]\n  const x = encoding[0]?.x?.[0]\n  const group = encoding[0]?.group?.[0]\n  const id = datasetReshapeInfo[0].id\n\n  const fields: Record<string, object> = {}\n  if (angle) {\n    fields[angle] = {\n      sortIndex: 0,\n    }\n  }\n  if (x) {\n    const order = orderMapping[x]\n    if (order) {\n      fields[x] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[x] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  if (group) {\n    const order = orderMapping[group]\n    if (order) {\n      fields[group] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[group] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  return {\n    ...spec,\n    data: {\n      id,\n      // 透视表不使用 dataValues\n      values: isPivotChart(vseed) ? undefined : advancedVSeed.dataset,\n      fields: fields,\n    },\n  } as ISpec\n}\n","import type { ILineSeriesSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const progressive: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineSeriesSpec\n  const { advancedVSeed } = context\n  const { dataset = [] } = advancedVSeed\n  const size = dataset.length\n\n  if (size < 5000) {\n    return result\n  }\n\n  result.large = true\n  result.largeThreshold = 5000\n  result.progressiveStep = 400\n  result.progressiveThreshold = 8000\n\n  return result\n}\n","import type { ICartesianBandAxisSpec, ISpec } from '@visactor/vchart'\nimport type { SpecPipe, XBandAxis } from 'src/types'\n\nexport const xBand: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const config = advancedVSeed.config?.[chartType as 'column']?.xAxis as XBandAxis\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        type: 'band',\n        orient: 'bottom',\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n    labelAutoHide,\n    labelAutoHideGap,\n    labelAutoLimit,\n    labelAutoLimitLength = 80,\n    labelAutoRotate,\n    labelAutoRotateAngleRange,\n  } = config\n\n  const sampling = !(labelAutoHide || labelAutoRotate || labelAutoLimit)\n\n  const bandAxis = {\n    visible,\n    type: 'band',\n    orient: 'bottom',\n    maxHeight: labelAutoLimitLength + 60,\n    sampling,\n    hover: true,\n    label: {\n      visible: label?.visible,\n      flush: true,\n      space: 8,\n      style: {\n        maxLineWidth: labelAutoLimitLength,\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n\n      // 防重叠相关\n      minGap: labelAutoHideGap,\n      autoHide: labelAutoHide,\n      autoHideMethod: 'greedy',\n      autoHideSeparation: labelAutoHideGap,\n      autoLimit: labelAutoLimit,\n      autoRotate: labelAutoRotate,\n      autoRotateAngle: labelAutoRotateAngleRange,\n      lastVisible: true,\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    paddingInner: [0.15, 0.1],\n    paddingOuter: [0.075, 0.1],\n  } as ICartesianBandAxisSpec\n\n  result.axes = [...result.axes, bandAxis] as ISpec['axes']\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { LINEAR_AXIS_INNER_OFFSET_TOP } from '../../../../utils/constant'\nimport { autoFormatter } from '../../../../utils'\nimport type { SpecPipe, YLinearAxis } from 'src/types'\n\nexport const yLinear: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { locale } = advancedVSeed\n  const config = advancedVSeed.config?.[chartType as 'column']?.yAxis as YLinearAxis\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        type: 'linear',\n        orient: 'left',\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n\n    zero,\n    nice,\n    inverse,\n    max,\n    min,\n    log,\n    logBase = 10,\n  } = config\n\n  const linearAxis = {\n    visible,\n    type: log ? 'log' : 'linear',\n    base: logBase,\n    orient: 'left',\n    nice,\n    zero: log ? false : zero,\n    inverse,\n    max,\n    min,\n    label: {\n      visible: label?.visible,\n      formatMethod: (value: string) => {\n        return autoFormatter(value, locale)\n      },\n      style: {\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    innerOffset: {\n      top: LINEAR_AXIS_INNER_OFFSET_TOP,\n      // bottom: LINEAR_AXIS_INNER_OFFSET_TOP,\n    },\n  }\n\n  result.axes = [...result.axes, linearAxis] as ISpec['axes']\n\n  return result\n}\n","// 标注层 z-index \nexport const ANNOTATION_Z_INDEX = 1000\n// 线性轴 顶部空隙 预留5px\nexport const LINEAR_AXIS_INNER_OFFSET_TOP = 7","import type { ILineChartSpec } from '@visactor/vchart'\nimport type { ILineLikeLabelSpec } from '@visactor/vchart/esm/series/mixin/interface'\nimport { autoFormatter, createFormatter, findMeasureById } from '../../../../utils'\nimport type { Datum, Label, SpecPipe } from 'src/types'\nimport { isEmpty } from 'remeda'\n\nexport const label: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, locale } = advancedVSeed\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { label: Label }\n\n  if (!baseConfig || !baseConfig.label) {\n    return result\n  }\n\n  const { measureId, measureValue } = datasetReshapeInfo[0].foldInfo\n  // const { groupId, groupName } = datasetReshapeInfo[0].unfoldInfo\n  const { label } = baseConfig\n  const { enable } = label\n\n  result.label = {\n    visible: enable,\n    formatMethod: (value: string, datum: Datum) => {\n      const result = []\n\n      const formatValue = (value: number) => {\n        const id = datum[measureId] as string\n        const measure = findMeasureById(measures, id)\n        if (!measure) {\n          return value\n        }\n\n        const { format = {}, autoFormat = true } = measure\n\n        if (!isEmpty(format)) {\n          const formatter = createFormatter(format)\n          return formatter(value)\n        }\n        if (autoFormat) {\n          return autoFormatter(value, locale)\n        }\n        return String(value)\n      }\n\n      result.push(formatValue(datum[measureValue] as number))\n\n      return result.join(' ')\n    },\n  } as ILineLikeLabelSpec\n  return result\n}\n","import { isEmpty } from 'remeda'\nimport { autoFormatter, createFormatter, findMeasureById } from '../../../../utils'\nimport type { Datum, SpecPipe, Tooltip } from 'src/types'\n\nexport const tooltip: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, chartType, locale, dimensions } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { tooltip: Tooltip }\n  const { tooltip = { enable: true } } = baseConfig\n  const { enable } = tooltip\n\n  const { measureId, measureValue, measureName } = datasetReshapeInfo[0].foldInfo\n  const { groupName } = datasetReshapeInfo[0].unfoldInfo\n\n  result.tooltip = {\n    visible: enable,\n\n    mark: {\n      title: {\n        visible: true,\n      },\n      content: [\n        ...dimensions.map((item) => ({\n          visible: true,\n          hasShape: true,\n          shapeType: 'rectRound',\n          key: (datum: unknown) => {\n            if (item.alias || item.id) {\n              return item.alias || item.id\n            }\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n          value: (datum: unknown) => {\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n        })),\n        {\n          visible: true,\n          hasShape: true,\n          key: (datum) => (datum && (datum[measureName || groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n        },\n      ],\n    },\n    dimension: {\n      content: [\n        {\n          visible: true,\n          key: (datum) => (datum && (datum[groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n          shapeType: 'rectRound',\n        },\n      ],\n    },\n  }\n  return result\n}\n","import type { ICartesianCrosshairSpec, ILineChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const verticalCrosshairLine: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n\n  const config = advancedVSeed.config?.[chartType as 'line']?.crosshairLine\n  if (!config) {\n    return result\n  }\n\n  if (!result.crosshair) {\n    result.crosshair = {}\n  }\n\n  const visible = config.visible || true\n  const lineColor = config.lineColor || undefined\n  const labelColor = config.labelColor || undefined\n  const labelVisible = config.labelVisible || undefined\n  const labelBackgroundColor = config.labelBackgroundColor || undefined\n\n  const crosshair = result.crosshair as ICartesianCrosshairSpec\n  crosshair.xField = {\n    visible,\n    line: {\n      type: 'line',\n      style: {\n        lineWidth: 1,\n        opacity: 1,\n        stroke: lineColor,\n        lineDash: [4, 2],\n      },\n    },\n    label: {\n      visible: labelVisible,\n      labelBackground: {\n        visible: labelVisible,\n        style: {\n          fill: labelBackgroundColor,\n        },\n      },\n      style: {\n        fill: labelColor,\n      },\n    },\n  }\n\n  return result\n}\n","import type { StringOrNumber } from '@visactor/vchart'\nimport type { Legend, SpecPipe } from 'src/types'\n\nexport const discreteLegend: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { datasetReshapeInfo, chartType } = advancedVSeed\n  const { unfoldInfo } = datasetReshapeInfo[0]\n  const baseConfig = advancedVSeed.config[chartType] as { legend: Legend }\n  if (!baseConfig || !baseConfig.legend) {\n    return result\n  }\n\n  const { legend } = baseConfig\n  const {\n    enable,\n    position = 'bottom',\n    labelFontColor,\n    labelFontSize = 12,\n    labelFontWeight,\n    maxSize = 1,\n    border,\n    shapeType = 'rectRound',\n  } = legend || {}\n\n  const orient = ['bottom', 'bottomLeft', 'bottomRight', 'bl', 'br'].includes(position)\n    ? 'bottom'\n    : ['top', 'topLeft', 'topRight', 'tl', 'tr'].includes(position)\n      ? 'top'\n      : ['left', 'leftTop', 'leftBottom', 'lt', 'lb'].includes(position)\n        ? 'left'\n        : 'right'\n\n  const legendPosition = ['topLeft', 'bottomLeft', 'leftTop', 'rightTop', 'lt', 'rt', 'tl', 'bl'].includes(position)\n    ? 'start'\n    : ['topRight', 'bottomRight', 'leftBottom', 'rightBottom', 'lb', 'rb', 'rt', 'br'].includes(position)\n      ? 'end'\n      : 'middle'\n\n  result.legends = {\n    type: 'discrete',\n    visible: enable,\n    maxCol: Math.max(1, maxSize),\n    maxRow: Math.max(1, maxSize),\n    autoPage: true,\n    orient,\n    position: legendPosition,\n    data: border\n      ? (items) => {\n          return items.map((item) => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            item.shape.outerBorder = {\n              stroke: item.shape.fill,\n              distance: 3,\n              lineWidth: 1,\n            }\n            return item\n          })\n        }\n      : undefined,\n    item: {\n      focus: true,\n      maxWidth: '30%',\n      focusIconStyle: {\n        size: labelFontSize + 2,\n        fill: labelFontColor,\n        fontWeight: labelFontWeight,\n      },\n      shape: {\n        space: border ? 6 : 4,\n        style: {\n          symbolType: shapeType,\n          size: border ? 8 : 10,\n        },\n      },\n      label: {\n        formatMethod: (value: StringOrNumber) => {\n          return unfoldInfo.colorIdMap[String(value)] ?? value\n        },\n        style: {\n          fontSize: labelFontSize,\n          fill: labelFontColor,\n          fontWeight: labelFontWeight,\n        },\n      },\n      background: {\n        state: {\n          selectedHover: {\n            fill: labelFontColor,\n            fillOpacity: 0.05,\n          },\n        },\n      },\n    },\n    padding: 0,\n  }\n  return result\n}\n","import type { Datum } from 'src/types'\nimport type {\n  DimensionSelector,\n  MeasureSelector,\n  PartialDatumSelector,\n  Selector,\n  Selectors,\n  ValueSelector,\n} from '../types/dataSelector'\nimport { omit } from 'remeda'\n\nexport const selector = (vchartDatum: Datum, selector: Selector | Selectors | undefined | null) => {\n  // 无有效选择器, 则认为全部匹配成功\n  if (!selector) {\n    return true\n  }\n\n  const selectorMode = 'And'\n\n  // 过滤掉 vchart 相关字段\n  const vchartKeys = Object.keys(vchartDatum).filter((k) => k.toLocaleLowerCase().startsWith('__vchart'))\n  const datum = omit(vchartDatum, vchartKeys) as Datum\n\n  // 统一处理选择器为数组\n  const selectors = (Array.isArray(selector) ? selector : [selector]) as Selectors\n\n  return selectors[selectorMode === 'And' ? 'every' : 'some']((selector) => {\n    // 1. 字符串或数字\n    if (isValueSelector(selector)) {\n      if (Object.values(datum).find((v) => v === selector)) {\n        return true\n      }\n    }\n\n    // 2. 指标选择器\n    else if (isMeasureSelector(selector)) {\n      const op = selector.operator || selector.op\n      const selectorValueArr = Array.isArray(selector.value) ? selector.value : [selector.value]\n\n      switch (op) {\n        case '=':\n        case '==':\n          if (datum[selector.field] === selectorValueArr[0]) {\n            return true\n          }\n          break\n        case '!=':\n          if (datum[selector.field] !== selectorValueArr[0]) {\n            return true\n          }\n          break\n        case '>':\n          if (datum[selector.field] > selectorValueArr[0]) {\n            return true\n          }\n          break\n        case '<':\n          if (datum[selector.field] < selectorValueArr[0]) {\n            return true\n          }\n          break\n        case '>=':\n          if (datum[selector.field] >= selectorValueArr[0]) {\n            return true\n          }\n          break\n        case '<=':\n          if (datum[selector.field] <= selectorValueArr[0]) {\n            return true\n          }\n          break\n        case 'between':\n          if (\n            Array.isArray(selector.value) &&\n            datum[selector.field] >= selectorValueArr[0] &&\n            datum[selector.field] <= selectorValueArr[1]\n          ) {\n            return true\n          }\n          break\n        default:\n          break\n      }\n    }\n    // 3. 维度选择器\n    else if (isDimensionSelector(selector)) {\n      const op = selector.operator || selector.op\n      const selectorValueArr = Array.isArray(selector.value) ? selector.value : [selector.value]\n      switch (op) {\n        case 'in':\n          if (selectorValueArr.includes(datum[selector.field] as string | number)) {\n            return true\n          }\n          break\n        case 'not in':\n          if (!selectorValueArr.includes(datum[selector.field] as string | number)) {\n            return true\n          }\n          break\n        default:\n          break\n      }\n    }\n    // 4. 部分数据对象选择器\n    else if (isPartialDatumSelector(selector)) {\n      if (Object.keys(selector).every((key) => datum[key] === selector[key])) {\n        return true\n      }\n    }\n\n    return false\n  })\n}\n\nexport const isValueSelector = (selector: Selector): selector is ValueSelector => {\n  return typeof selector === 'string' || typeof selector === 'number'\n}\n\nexport const isPartialDatumSelector = (selector: Selector): selector is PartialDatumSelector => {\n  return typeof selector === 'object' && selector !== null\n}\n\nexport const isMeasureSelector = (selector: Selector): selector is MeasureSelector => {\n  return (\n    typeof selector === 'object' &&\n    selector !== null &&\n    'field' in selector &&\n    ('operator' in selector || 'op' in selector) &&\n    'value' in selector &&\n    (['=', '==', '!=', '>', '<', '>=', '<=', 'between'].includes(selector.operator as string) ||\n      ['=', '==', '!=', '>', '<', '>=', '<=', 'between'].includes(selector.op as string))\n  )\n}\n\nexport const isDimensionSelector = (selector: Selector): selector is DimensionSelector => {\n  return (\n    typeof selector === 'object' &&\n    selector !== null &&\n    'field' in selector &&\n    ('operator' in selector || 'op' in selector) &&\n    'value' in selector &&\n    (['in', 'not in'].includes(selector.operator as string) || ['in', 'not in'].includes(selector.op as string))\n  )\n}\n","import type { IAreaChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { Datum, PointStyle, SpecPipe } from 'src/types'\n\nexport const pointStyle: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { markStyle } = advancedVSeed\n  const { pointStyle } = markStyle\n  const result = {\n    ...spec,\n  } as IAreaChartSpec\n\n  if (!pointStyle) {\n    return result\n  }\n  const pointStyles = (Array.isArray(pointStyle) ? pointStyle : [pointStyle]) as PointStyle[]\n\n  const customMap = pointStyles.reduce<object>((result, style, index) => {\n    const { pointBorderColor, pointBorderStyle, pointBorderWidth = 1, pointColor, pointColorOpacity, pointSize } = style\n\n    const lineDash = pointBorderStyle === 'dashed' ? [5, 2] : pointBorderStyle === 'dotted' ? [2, 5] : [0, 0]\n    return {\n      ...result,\n      [`custom${index + 1}`]: {\n        // 优先级: 后者覆盖前者\n        level: index + 1,\n        filter: (datum: Datum) => {\n          if (selector(datum, style.selector)) {\n            return true\n          }\n          return false\n        },\n        style: {\n          size: pointSize,\n          fill: pointColor,\n          fillOpacity: pointColorOpacity,\n          innerBorder: {\n            stroke: pointBorderColor,\n            lineWidth: pointBorderWidth,\n            distance: (pointBorderWidth || 0) / 2,\n            lineDash: lineDash,\n          },\n        },\n      },\n    }\n  }, {})\n\n  return {\n    ...result,\n    point: {\n      state: {\n        ...customMap,\n      },\n    },\n  }\n}\n","import type { IScatterChartSpec } from '@visactor/vchart'\nimport type { ISeriesMarkAttributeContext } from '@visactor/vchart/esm/compile/mark'\nimport type { SpecPipe } from 'src/types'\n\nexport const pointStateDimensionHover: SpecPipe = (spec) => {\n  const point = (spec as IScatterChartSpec).point || {}\n  const result = {\n    ...spec,\n    point: {\n      ...point,\n      state: {\n        ...(point.state || {}),\n        dimension_hover: {\n          scaleX: 1.4,\n          scaleY: 1.4,\n        },\n      },\n    },\n  } as IScatterChartSpec\n  return result\n}\n\nexport const pointStateHover: SpecPipe = (spec, context) => {\n  const point = (spec as IScatterChartSpec).point || {}\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n  const result = {\n    ...spec,\n    point: {\n      ...point,\n      state: {\n        ...(point.state || {}),\n        hover: {\n          scaleX: 1.4,\n          scaleY: 1.4,\n          stroke: (datum, context: ISeriesMarkAttributeContext) => {\n            const field = encoding[0]?.group?.[0] as string\n            const color = context.seriesColor(datum[field] as string)\n            return color\n          },\n          fillOpacity: 0.6,\n          lineWidth: 1,\n        },\n      },\n    },\n  } as IScatterChartSpec\n  return result\n}\n","import type { IAreaChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { Datum, LineStyle, SpecPipe } from 'src/types'\nimport { groupBy } from 'remeda'\n\nexport const lineStyle: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { markStyle, encoding, dataset } = advancedVSeed\n  const { lineStyle } = markStyle\n  if (!lineStyle) {\n    return spec\n  }\n  const result = { ...spec } as IAreaChartSpec\n\n  const lineStyles = (Array.isArray(lineStyle) ? lineStyle : [lineStyle]) as LineStyle[]\n\n  const group = encoding[0]?.group?.[0]\n  const lineGroups = groupBy(dataset, (d) => d[group ?? ''] as string)\n\n  const customMap = lineStyles.reduce<object>((result, style, index) => {\n    const { lineColor, lineColorOpacity, lineSmooth, lineStyle, lineWidth } = style\n\n    const dashSegment = (lineWidth ?? 2) * 2\n    const dashGap = lineWidth ?? 2\n\n    const lineDash =\n      lineStyle === 'dashed' ? [dashSegment, dashSegment] : lineStyle === 'dotted' ? [dashGap / 2, dashGap * 2] : [0, 0]\n\n    const curveType = lineSmooth ? 'monotone' : 'linear'\n\n    return {\n      ...result,\n      [`custom${index + 1}`]: {\n        // 优先级: 后者覆盖前者\n        level: index + 1,\n        filter: (datum: Datum) => {\n          const lineData = lineGroups[datum[group ?? ''] as string]\n          for (const d of lineData) {\n            if (selector(d, style.selector)) {\n              return true\n            }\n          }\n          return false\n        },\n        style: {\n          curveType: curveType,\n          strokeOpacity: lineColorOpacity,\n          stroke: lineColor,\n          lineWidth: lineWidth,\n          lineDash: lineDash,\n        },\n      },\n    }\n  }, {})\n\n  return {\n    ...result,\n    line: {\n      state: {\n        ...customMap,\n      },\n    },\n  }\n}\n","import type { Datum } from \"src/types\"\n\nexport const isSubset = (sub: Datum, obj: Datum) => {\n  return Object.entries(sub).every(([key, value]) => {\n    if (typeof value === 'string') {\n      return obj[key] === value\n    }\n    if (typeof value === 'number') {\n      return obj[key] === value\n    }\n    return true\n  })\n}\n","import type { ICartesianSeries, ILineChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { Datum, SpecPipe } from 'src/types'\nimport { isSubset } from './utils'\nimport { ANNOTATION_Z_INDEX } from '../../../../utils/constant'\n\nexport const annotationPoint: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { annotation } = advancedVSeed\n\n  if (!annotation || !annotation.annotationPoint) {\n    return spec\n  }\n\n  const { annotationPoint } = annotation\n  const annotationPointList = Array.isArray(annotationPoint) ? annotationPoint : [annotationPoint]\n\n  const markPoint = annotationPointList.flatMap((annotationPoint) => {\n    const {\n      selector: selectorPoint,\n      text = '',\n      textColor = '#ffffff',\n      textFontSize = 12,\n      textFontWeight = 400,\n      textAlign = 'center',\n      textBaseline = 'top',\n      textBackgroundBorderColor,\n      textBackgroundBorderRadius = 4,\n      textBackgroundBorderWidth = 1,\n      textBackgroundColor = '#212121',\n      textBackgroundPadding = 2,\n      textBackgroundVisible = true,\n      offsetX = 0,\n      offsetY = 0,\n    } = annotationPoint\n\n    const dataset = advancedVSeed.dataset.flat()\n    const selectedData = selectorPoint ? dataset.filter((datum) => selector(datum, selectorPoint)) : []\n\n    return selectedData.map((datum) => {\n      return {\n        zIndex: ANNOTATION_Z_INDEX,\n        regionRelative: true,\n        position: (data: Datum[], context: ICartesianSeries) => {\n          const targetDatum = data.find((item) => isSubset(datum, item))\n          if (targetDatum) {\n            const { x, y } = context.dataToPosition(targetDatum) as { x: number; y: number }\n            return {\n              x,\n              y,\n            }\n          }\n        },\n\n        itemLine: {\n          visible: false,\n        },\n        itemContent: {\n          offsetY,\n          offsetX,\n          text: {\n            text: text,\n            style: {\n              visible: true,\n              textAlign: textAlign,\n              textBaseline: textBaseline,\n              fill: textColor,\n              stroke: textBackgroundColor,\n              lineWidth: 1,\n              fontSize: textFontSize,\n              fontWeight: textFontWeight,\n              dy: textFontSize,\n            },\n            labelBackground: {\n              visible: textBackgroundVisible,\n              padding: textBackgroundPadding,\n              style: {\n                cornerRadius: textBackgroundBorderRadius ?? 4,\n                fill: textBackgroundColor,\n                stroke: textBackgroundBorderColor,\n                lineWidth: textBackgroundBorderWidth,\n                dy: textFontSize,\n              },\n            },\n          },\n        },\n      }\n    })\n  }) as ILineChartSpec['markPoint']\n\n  return {\n    ...spec,\n    markPoint,\n  }\n}\n","import type { ILineChartSpec, IMarkLineSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { SpecPipe } from 'src/types'\nimport { isArray, isNumber, isString } from 'remeda'\nimport { ANNOTATION_Z_INDEX } from '../../../../utils/constant'\n\nexport const annotationVerticalLine: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { annotation, encoding } = advancedVSeed\n\n  if (!annotation || !annotation.annotationVerticalLine) {\n    return spec\n  }\n\n  const { annotationVerticalLine } = annotation\n  const annotationVerticalLineList = Array.isArray(annotationVerticalLine)\n    ? annotationVerticalLine\n    : [annotationVerticalLine]\n\n  const positionMap = {\n    outsideStart: 'start',\n    outsideEnd: 'end',\n    outsideMiddle: 'middle',\n    insideStart: 'insideStartTop',\n    insideMiddle: 'insideMiddleTop',\n    insideEnd: 'insideEndTop',\n  }\n  const markLine = annotationVerticalLineList.flatMap((annotationVerticalLine) => {\n    const {\n      selector: selectorPoint,\n      xValue,\n      text = '',\n      textPosition = 'insideEnd',\n      textColor = '#ffffff',\n      textFontSize = 12,\n      textFontWeight = 400,\n      textAlign = 'right',\n      textBaseline = 'top',\n\n      textBackgroundVisible = true,\n      textBackgroundBorderColor = '#212121',\n      textBackgroundColor = '#212121',\n      textBackgroundBorderRadius = 4,\n      textBackgroundBorderWidth = 1,\n      textBackgroundPadding = 2,\n\n      lineVisible = true,\n      lineColor = '#212121',\n      lineWidth = 1,\n      lineStyle = 'dashed',\n    } = annotationVerticalLine\n\n    const dataset = advancedVSeed.dataset.flat()\n\n    const generateOneMarkLine = (x: number | string) => ({\n      x: x as string,\n      zIndex: ANNOTATION_Z_INDEX,\n      line: {\n        style: {\n          visible: lineVisible,\n          stroke: lineColor,\n          lineStyle: lineStyle,\n          lineWidth: lineWidth,\n          lineDash: lineStyle === 'dashed' ? [5, 2] : lineStyle === 'dotted' ? [2, 5] : [0],\n        },\n      },\n      label: {\n        text: text,\n        position: positionMap[textPosition || 'insideEnd'],\n        style: {\n          visible: true,\n          stroke: textBackgroundColor,\n          lineWidth: 1,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          fill: textColor,\n          fontSize: textFontSize,\n          fontWeight: textFontWeight,\n          dy: textFontSize,\n        },\n        labelBackground: {\n          visible: textBackgroundVisible,\n          padding: textBackgroundPadding,\n          style: {\n            dy: textFontSize,\n            cornerRadius: textBackgroundBorderRadius ?? 4,\n            fill: textBackgroundColor,\n            stroke: textBackgroundBorderColor,\n            lineWidth: textBackgroundBorderWidth,\n          },\n        },\n      },\n      endSymbol: {\n        visible: true,\n        size: 10 + (lineWidth || 1),\n        style: {\n          dy: 4,\n          fill: lineColor,\n        },\n      },\n    })\n\n    if ((!selectorPoint && isArray(xValue)) || isString(xValue) || isNumber(xValue)) {\n      const xValueArr = Array.isArray(xValue) ? xValue : [xValue]\n      return xValueArr.map(generateOneMarkLine)\n    }\n\n    const selectedData = selectorPoint ? dataset.filter((datum) => selector(datum, selectorPoint)) : []\n\n    return selectedData.map((datum) => {\n      const x = encoding[0]?.x?.[0]\n      if (!x) {\n        return {}\n      }\n      return generateOneMarkLine(datum[x] as string)\n    })\n  }) as IMarkLineSpec[]\n\n  const specMarkLine = ((spec as ILineChartSpec).markLine as IMarkLineSpec[]) || []\n  const newMarkLine = [...specMarkLine, ...(markLine || [])]\n\n  return {\n    ...spec,\n    markLine: newMarkLine,\n  }\n}\n","import type { ILineChartSpec, IMarkLineSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { SpecPipe } from 'src/types'\nimport { isArray, isNumber, isString } from 'remeda'\nimport { ANNOTATION_Z_INDEX } from '../../../../utils/constant'\n\nexport const annotationHorizontalLine: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { annotation, encoding } = advancedVSeed\n\n  if (!annotation || !annotation.annotationHorizontalLine) {\n    return spec\n  }\n\n  const { annotationHorizontalLine } = annotation\n  const annotationVerticalLineList = Array.isArray(annotationHorizontalLine)\n    ? annotationHorizontalLine\n    : [annotationHorizontalLine]\n\n  const positionMap = {\n    outsideStart: 'start',\n    outsideEnd: 'end',\n    outsideMiddle: 'middle',\n    insideStart: 'insideStartTop',\n    insideMiddle: 'insideMiddleTop',\n    insideEnd: 'insideEndTop',\n  }\n\n  const markLine = annotationVerticalLineList.flatMap((annotationVerticalLine) => {\n    const {\n      selector: selectorPoint,\n      yValue,\n      text = '',\n      textPosition = 'insideEnd',\n      textColor = '#ffffff',\n      textFontSize = 12,\n      textFontWeight = 400,\n      textAlign = 'right',\n      textBaseline = 'top',\n\n      lineColor = '#212121',\n      lineStyle = 'dashed',\n      lineVisible = true,\n      lineWidth = 1,\n\n      textBackgroundVisible = true,\n      textBackgroundColor = '#212121',\n      textBackgroundBorderColor = '#212121',\n      textBackgroundBorderRadius = 4,\n      textBackgroundBorderWidth = 1,\n      textBackgroundPadding = 2,\n    } = annotationVerticalLine\n\n    const dataset = advancedVSeed.dataset.flat()\n\n    const generateOneMarkLine = (y: string | number) => {\n      return {\n        y,\n        zIndex: ANNOTATION_Z_INDEX,\n        line: {\n          style: {\n            visible: lineVisible,\n            stroke: lineColor,\n            lineStyle: lineStyle,\n            lineWidth: lineWidth,\n            lineDash: lineStyle === 'dashed' ? [5, 2] : lineStyle === 'dotted' ? [2, 5] : [0],\n          },\n        },\n        label: {\n          text: text,\n          position: positionMap[textPosition || 'insideEnd'],\n          style: {\n            visible: true,\n            dy: textFontSize,\n            stroke: textBackgroundColor,\n            lineWidth: 1,\n            textAlign: textAlign,\n            textBaseline: textBaseline,\n            fill: textColor,\n            fontSize: textFontSize,\n            fontWeight: textFontWeight,\n          },\n          labelBackground: {\n            visible: textBackgroundVisible,\n            padding: textBackgroundPadding,\n            style: {\n              dy: textFontSize,\n              cornerRadius: textBackgroundBorderRadius ?? 4,\n              fill: textBackgroundColor,\n              stroke: textBackgroundBorderColor,\n              lineWidth: textBackgroundBorderWidth,\n            },\n          },\n        },\n        endSymbol: {\n          visible: true,\n          size: 10 + (lineWidth || 1),\n          style: {\n            dx: -4,\n            fill: lineColor,\n          },\n        },\n      }\n    }\n\n    if ((!selectorPoint && isArray(yValue)) || isString(yValue) || isNumber(yValue)) {\n      const yValueArr = Array.isArray(yValue) ? yValue : [yValue]\n      return yValueArr.map(generateOneMarkLine)\n    }\n\n    const selectedData = selectorPoint ? dataset.filter((datum) => selector(datum, selectorPoint)) : []\n\n    return selectedData.map((datum) => {\n      const y = encoding[0]?.y?.[0]\n      if (!y) {\n        return {}\n      }\n      return generateOneMarkLine(datum[y] as string)\n    })\n  }) as IMarkLineSpec[]\n  const specMarkLine = ((spec as ILineChartSpec).markLine as IMarkLineSpec[]) || []\n  const newMarkLine = [...specMarkLine, ...(markLine || [])]\n  return {\n    ...spec,\n    markLine: newMarkLine,\n  }\n}\n","import type { ICartesianSeries, ILineChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { Datum, SpecPipe } from 'src/types'\nimport { isSubset } from './utils'\nimport { ANNOTATION_Z_INDEX } from '../../../../utils/constant'\n\nexport const annotationArea: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { annotation } = advancedVSeed\n\n  if (!annotation || !annotation.annotationArea) {\n    return spec\n  }\n\n  const { annotationArea } = annotation\n  const annotationAreaList = Array.isArray(annotationArea) ? annotationArea : [annotationArea]\n\n  const positionMap = {\n    top: 'insideTop',\n    topRight: 'insideTopRight',\n    topLeft: 'insideTopLeft',\n    bottom: 'insideBottom',\n    bottomLeft: 'insideBottomLeft',\n    bottomRight: 'insideBottomRight',\n    left: 'insideLeft',\n    right: 'insideRight',\n  }\n\n  const markArea = annotationAreaList.flatMap((annotationArea) => {\n    const {\n      selector: selectorPoint,\n      text = '',\n      textPosition = 'top',\n      textColor = '#ffffff',\n      textFontSize = 12,\n      textFontWeight = 400,\n      textAlign = 'center',\n      textBaseline = 'top',\n\n      textBackgroundVisible = true,\n      textBackgroundColor = '#191d24',\n      textBackgroundBorderColor = '#191d24',\n      textBackgroundBorderWidth = 1,\n      textBackgroundBorderRadius = 4,\n      textBackgroundPadding = 4,\n\n      areaColor = '#888888',\n      areaColorOpacity = 0.15,\n      areaBorderColor = '#888888',\n      areaBorderRadius = 4,\n      areaBorderWidth = 1,\n\n      outerPadding = 4,\n    } = annotationArea\n\n    const dataset = advancedVSeed.dataset.flat()\n    const selectedData = selectorPoint ? dataset.filter((datum) => selector(datum, selectorPoint)) : []\n\n    const labelPosition = positionMap[textPosition || 'top']\n    const isBottom = labelPosition.toLocaleLowerCase().includes('bottom')\n\n    return {\n      zIndex: ANNOTATION_Z_INDEX,\n      regionRelative: true,\n      positions: (data: Datum[], context: ICartesianSeries) => {\n        const positionData = data.filter((item) => selectedData.some((datum) => isSubset(datum, item)))\n        const xyList = positionData.map((datum) => context.dataToPosition(datum) as { x: number; y: number })\n\n        const yAxisHelper = context.getYAxisHelper() as unknown as {\n          getBandwidth: (depth?: number) => number\n          getScale: () => {\n            range: () => number[]\n          }\n        }\n        const xAxisHelper = context.getXAxisHelper() as unknown as {\n          getBandwidth: (depth?: number) => number\n          getScale: () => {\n            range: () => number[]\n          }\n        }\n\n        if (typeof xAxisHelper?.getBandwidth === 'function') {\n          const yScale = yAxisHelper.getScale()\n\n          const minX = Math.min(...xyList.map((item) => item.x)) - (outerPadding || 4)\n          const maxX = Math.max(...xyList.map((item) => item.x)) + (outerPadding || 4)\n          const minY = Math.min(...yScale.range())\n          const maxY = Math.max(...yScale.range())\n          return [\n            // 左上\n            {\n              x: minX,\n              y: minY,\n            },\n            // 右上\n            {\n              x: maxX,\n              y: minY,\n            },\n            // 右下\n            {\n              x: maxX,\n              y: maxY,\n            },\n            // 左下\n            {\n              x: minX,\n              y: maxY,\n            },\n          ]\n        }\n\n        if (typeof yAxisHelper?.getBandwidth === 'function') {\n          const xScale = xAxisHelper.getScale()\n\n          const minY = Math.min(...xyList.map((item) => item.y)) - (outerPadding || 4)\n          const maxY = Math.max(...xyList.map((item) => item.y)) + (outerPadding || 4)\n          const minX = Math.min(...xScale.range())\n          const maxX = Math.max(...xScale.range())\n\n          return [\n            // 左上\n            {\n              x: minX,\n              y: minY,\n            },\n            // 右上\n            {\n              x: maxX,\n              y: minY,\n            },\n            // 右下\n            {\n              x: maxX,\n              y: maxY,\n            },\n            // 左下\n            {\n              x: minX,\n              y: maxY,\n            },\n          ]\n        }\n\n        return []\n      },\n      label: {\n        position: labelPosition,\n        visible: true,\n        text: text,\n        style: {\n          dy: isBottom ? -(textFontSize || 12) * 2 : textFontSize,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          fill: textColor,\n          stroke: textBackgroundColor,\n          lineWidth: 1,\n          fontSize: textFontSize,\n          fontWeight: textFontWeight,\n        },\n\n        labelBackground: {\n          visible: textBackgroundVisible,\n          padding: textBackgroundPadding,\n          style: {\n            dy: isBottom ? -(textFontSize || 12) * 2 : textFontSize,\n            cornerRadius: textBackgroundBorderRadius ?? 4,\n            fill: textBackgroundColor,\n            stroke: textBackgroundBorderColor,\n            lineWidth: textBackgroundBorderWidth,\n          },\n        },\n      },\n      area: {\n        style: {\n          visible: true,\n          fill: areaColor,\n          fillOpacity: areaColorOpacity,\n          stroke: areaBorderColor,\n          lineWidth: areaBorderWidth,\n          cornerRadius: areaBorderRadius,\n        },\n      },\n    }\n  }) as ILineChartSpec['markArea']\n\n  return {\n    ...spec,\n    markArea: markArea,\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { SpecPipe } from 'src/types'\n\nexport const initPivot: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n\n  return {\n    ...result,\n    animation: true,\n    rows: [],\n    columns: [],\n    indicators: [],\n    records: [],\n    widthMode: 'adaptive',\n    heightMode: 'adaptive',\n    indicatorsAsCol: false,\n  }\n}\n\nexport const pivotIndicatorsAsRow: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n\n  return {\n    ...result,\n    indicatorsAsCol: false,\n  }\n}\n\nexport const pivotIndicatorsAsCol: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n\n  return {\n    ...result,\n    indicatorsAsCol: true,\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { SpecPipe } from 'src/types'\n\nexport const pivotGridStyle: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n  const transparent = 'rgba(0,0,0,0)'\n\n  const hoverBackgroundColor = 'rgba(178,186,207, 0.2)'\n  return {\n    ...result,\n    theme: {\n      underlayBackgroundColor: transparent,\n      bodyStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: [0, 0, 2, 0],\n        bgColor: transparent,\n        padding: [0, 0, 1, 0],\n        hover: {\n          cellBgColor: 'transparent',\n        },\n      },\n      headerStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        fontSize: 12,\n        color: '#333333',\n        textAlign: 'center',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      rowHeaderStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        fontSize: 12,\n        color: '#333333',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      cornerHeaderStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        textAlign: 'center',\n        fontSize: 12,\n        color: '#333333',\n        fontWeight: 'bold',\n        borderLineWidth: [0, 0, 0, 0],\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      cornerRightTopCellStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      cornerLeftBottomCellStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      cornerRightBottomCellStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      rightFrozenStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      bottomFrozenStyle: {\n        borderColor: 'rgba(0,4,20,0.2)',\n        borderLineWidth: 0,\n        bgColor: transparent,\n        hover: {\n          cellBgColor: hoverBackgroundColor,\n        },\n      },\n      selectionStyle: {\n        cellBgColor: '',\n        cellBorderColor: '',\n      },\n      frameStyle: {\n        borderLineWidth: 0,\n        bgColor: transparent,\n      },\n    },\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport { execPipeline } from '../../../../utils'\nimport type { SpecPipe, SpecPipeline, SpecPipelineContext } from 'src/types'\nimport { unique } from 'remeda'\n\nexport const pivotIndicators =\n  (chartPipeline: SpecPipeline): SpecPipe =>\n  (spec, context) => {\n    const result = { ...spec } as PivotChartConstructorOptions\n    const { advancedVSeed } = context\n    const { measures, datasetReshapeInfo, encoding } = advancedVSeed\n\n    const colorItems = unique(datasetReshapeInfo.flatMap((d) => d.unfoldInfo.colorItems))\n\n    const indicators = datasetReshapeInfo.map((reshapeInfo, index) => {\n      const measure = measures?.find((d) => d.id === reshapeInfo.id)\n\n      const newEncoding = [encoding[index]]\n      const newDatasetReshapeInfo = [\n        {\n          ...reshapeInfo,\n          unfoldInfo: { ...reshapeInfo.unfoldInfo, colorItems },\n        },\n      ]\n      const newContext: SpecPipelineContext = {\n        ...context,\n        advancedVSeed: {\n          ...advancedVSeed,\n          datasetReshapeInfo: newDatasetReshapeInfo,\n          encoding: newEncoding,\n        },\n      }\n\n      const chartSpec = execPipeline(chartPipeline, newContext, {})\n      return {\n        indicatorKey: reshapeInfo.id,\n        title: measure?.alias,\n        cellType: 'chart',\n        chartModule: 'vchart',\n        chartSpec: chartSpec,\n        style: {\n          padding: [1, 1, 0, 1],\n        },\n      }\n    })\n\n    return {\n      ...result,\n      indicators: indicators,\n    } as PivotChartConstructorOptions\n  }\n\nexport const pivotIndicatorsAsRow: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n\n  return {\n    ...result,\n    indicatorsAsCol: false,\n  }\n}\n\nexport const pivotIndicatorsAsCol: SpecPipe = (spec) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n\n  return {\n    ...result,\n    indicatorsAsCol: true,\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { SpecPipe } from 'src/types'\n\nexport const datasetPivot: SpecPipe = (spec, context) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n  const { advancedVSeed } = context\n  const { dataset, datasetReshapeInfo } = advancedVSeed\n  const records = dataset.reduce((pre, cur, index) => {\n    const id = datasetReshapeInfo[index].id\n    pre[id] = cur\n    return pre\n  }, {})\n  return {\n    ...result,\n    records: records,\n  } as PivotChartConstructorOptions\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { IBasicDimension } from '@visactor/vtable/es/ts-types/pivot-table/dimension/basic-dimension'\nimport type { Dimensions, SpecPipe } from 'src/types'\n\nexport const pivotRowDimensions: SpecPipe = (spec, context) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n  const { advancedVSeed } = context\n  const dimensions = advancedVSeed.dimensions as Dimensions\n  if (!dimensions) {\n    return result\n  }\n  const rowDimensions = dimensions.filter((dim) => dim.location === 'rowDimension')\n  const rows: IBasicDimension[] = rowDimensions.map((dim) => ({\n    dimensionKey: dim.id,\n    title: dim.alias || dim.id,\n  }))\n  return {\n    ...result,\n    rows: rows,\n  }\n}\n","import type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { IBasicDimension } from '@visactor/vtable/es/ts-types/pivot-table/dimension/basic-dimension'\nimport type { Dimensions, SpecPipe } from 'src/types'\n\nexport const pivotColumnDimensions: SpecPipe = (spec, context) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n  const { advancedVSeed } = context\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!dimensions) {\n    return result\n  }\n  const columnDimensions = dimensions.filter((dim) => dim.location === 'columnDimension')\n  const columns: IBasicDimension[] = columnDimensions.map((dim) => ({\n    dimensionKey: dim.id,\n    title: dim.alias || dim.id,\n  }))\n  return {\n    ...result,\n    columns: columns,\n  }\n}\n","import type { StringOrNumber } from '@visactor/vchart'\nimport type { PivotChartConstructorOptions } from '@visactor/vtable'\nimport type { IDiscreteTableLegendOption } from '@visactor/vtable/es/ts-types/component/legend'\nimport { unique } from 'remeda'\nimport type { Color, Legend, SpecPipe } from 'src/types'\n\nexport const pivotDiscreteLegend: SpecPipe = (spec, context) => {\n  const result = { ...spec } as PivotChartConstructorOptions\n  const { advancedVSeed } = context\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { legend: Legend; color: Color }\n\n  if (!baseConfig || !baseConfig.legend) {\n    return result\n  }\n\n  const { datasetReshapeInfo } = advancedVSeed\n\n  const colorItems = unique(\n    datasetReshapeInfo.flatMap((d) => {\n      return d.unfoldInfo.colorItems\n    }),\n  )\n\n  const colorIdMap = datasetReshapeInfo.reduce<Record<string, string>>((prev, cur) => {\n    return { ...prev, ...cur.unfoldInfo.colorIdMap }\n  }, {})\n\n  const { legend, color } = baseConfig\n  const { colorScheme } = color\n\n  const {\n    enable,\n    position = 'bottom',\n    labelFontColor,\n    labelFontSize = 12,\n    labelFontWeight = 400,\n    maxSize = 1,\n    border,\n    shapeType = 'rectRound',\n  } = legend || {}\n\n  const orient = ['bottom', 'bottomLeft', 'bottomRight', 'bl', 'br'].includes(position)\n    ? 'bottom'\n    : ['top', 'topLeft', 'topRight', 'tl', 'tr'].includes(position)\n      ? 'top'\n      : ['left', 'leftTop', 'leftBottom', 'lt', 'lb'].includes(position)\n        ? 'left'\n        : 'right'\n\n  const legendPosition = ['topLeft', 'bottomLeft', 'leftTop', 'rightTop', 'lt', 'rt', 'tl', 'bl'].includes(position)\n    ? 'start'\n    : ['topRight', 'bottomRight', 'leftBottom', 'rightBottom', 'lb', 'rb', 'rt', 'br'].includes(position)\n      ? 'end'\n      : 'middle'\n\n  const legends: IDiscreteTableLegendOption = {\n    visible: enable,\n    type: 'discrete',\n    orient,\n    position: legendPosition,\n    maxCol: Math.max(1, maxSize),\n    maxRow: Math.max(1, maxSize),\n    data: colorItems.map((d, index) => ({\n      label: d,\n      shape: {\n        outerBorder: border\n          ? {\n              stroke: colorScheme?.[index],\n              distance: 3,\n              lineWidth: 1,\n            }\n          : undefined,\n        fill: colorScheme?.[index],\n      },\n    })),\n\n    item: {\n      focus: true,\n      maxWidth: '30%',\n      focusIconStyle: {\n        size: labelFontSize + 2,\n        fill: labelFontColor,\n        fontWeight: labelFontWeight,\n      },\n      shape: {\n        space: border ? 6 : 4,\n        style: {\n          symbolType: shapeType,\n          size: border ? 8 : 10,\n        },\n      },\n      label: {\n        formatMethod: (value: StringOrNumber) => {\n          return colorIdMap[String(value)] ?? value\n        },\n        style: {\n          fontSize: labelFontSize,\n          fill: labelFontColor,\n          fontWeight: labelFontWeight,\n        },\n      },\n      background: {\n        state: {\n          selectedHover: {\n            fill: labelFontColor,\n            fillOpacity: 0.05,\n          },\n        },\n      },\n    },\n  } as unknown as IDiscreteTableLegendOption\n  return { ...result, legends }\n}\n","import type { Spec, SpecPipe, SpecPipeline, SpecPipelineContext } from 'src/types'\nimport { execPipeline, isPivotChart } from '../../../../utils'\n\nexport const pivotAdapter = (pipeline: SpecPipeline, pivotPipeline: SpecPipeline): SpecPipe => {\n  return (spec, context) => {\n    const { vseed } = context\n    const usePivotChart = isPivotChart(vseed)\n\n    if (usePivotChart) {\n      return execPipeline<Spec, SpecPipelineContext>(pivotPipeline, context, spec)\n    }\n\n    return execPipeline<Spec, SpecPipelineContext>(pipeline, context, spec)\n  }\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  xBand,\n  yLinear,\n  initLine,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  initPivot,\n  datasetPivot,\n  pivotDiscreteLegend,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  lineStyle,\n  verticalCrosshairLine,\n  pointStateDimensionHover,\n  progressive,\n} from '../pipes'\n\nconst line: SpecPipeline = [\n  initLine,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairLine,\n  discreteLegend,\n  pointStyle,\n  pointStateDimensionHover,\n  lineStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotLine: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initLine,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairLine,\n    pointStyle,\n    pointStateDimensionHover,\n    lineStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const lineSpecPipeline: SpecPipeline = [pivotAdapter(line, pivotLine)]\n","import { lineAdvancedPipeline, lineSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerLine = () => {\n  Builder._advancedPipelineMap['line'] = lineAdvancedPipeline\n  Builder._specPipelineMap['line'] = lineSpecPipeline\n}","import type { Dataset, Dimension, FoldInfo, Measure, UnfoldInfo } from 'src/types'\nimport { foldMeasures } from './foldMeasures'\nimport {\n  UnfoldDimensionGroup,\n  FoldMeasureId,\n  FoldMeasureName,\n  FoldMeasureValue,\n  UnfoldDimensionGroupId,\n} from './constant'\nimport { unfoldDimensions } from './unfoldDimensions'\nimport { i18n } from '../i18n'\n\nconst emptyReshapeResult: {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} = {\n  dataset: [],\n  foldInfo: {\n    foldMap: {},\n    measureId: '',\n    measureName: '',\n    measureValue: '',\n  },\n  unfoldInfo: {\n    groupName: '',\n    groupId: '',\n    colorItems: [],\n    colorIdMap: {},\n  },\n}\n/**\n * 数据重塑为2个维度1个指标\n * @param dataset\n * @param dimensions\n * @param measures\n * @returns\n */\nexport const dataReshapeFor2D1M = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  options?: {\n    foldMeasureId?: string\n    foldMeasureName?: string\n    foldMeasureValue?: string\n    unfoldDimensionGroup?: string\n    unfoldDimensionGroupId?: string\n  },\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} => {\n  const {\n    foldMeasureId = FoldMeasureId,\n    foldMeasureName = FoldMeasureName,\n    foldMeasureValue = FoldMeasureValue,\n    unfoldDimensionGroup = UnfoldDimensionGroup,\n    unfoldDimensionGroupId = UnfoldDimensionGroupId,\n  } = options || {}\n  if (dimensions.length === 0 && measures.length === 0) {\n    return emptyReshapeResult\n  }\n\n  // 合并所有指标为1个指标\n  const { dataset: foldedDataset, foldInfo } = foldMeasures(\n    dataset,\n    measures,\n    foldMeasureId,\n    foldMeasureName,\n    foldMeasureValue,\n  )\n\n  if (dimensions.length === 0) {\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      [\n        { id: foldMeasureId, alias: i18n`指标Id`, location: 'dimension' },\n        { id: foldMeasureName, alias: i18n`指标名称`, location: 'dimension' },\n      ],\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      1,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  } else {\n    const onlyOneMeasure = measures.length === 1\n    const onlyOneDimension = dimensions.length === 1\n\n    const dims = [...dimensions]\n    if (!onlyOneMeasure || onlyOneDimension) {\n      dims.push({ id: foldMeasureName, alias: i18n`指标名称`, location: 'dimension' })\n    }\n\n    // 展开指定的维度为指标\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      dims,\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      1,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  }\n}\n","import { dataReshapeFor2D1M } from 'src/dataReshape'\nimport type { AdvancedPipe } from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为2个维度1个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo2D1M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n\n  const { dataset: newDatasets, foldInfo, unfoldInfo } = dataReshapeFor2D1M(dataset, dimensions, measures)\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: [\n      {\n        id: '2D1M',\n        index: 0,\n        foldInfo,\n        unfoldInfo,\n      },\n    ],\n    dimensions,\n    measures,\n  }\n}\n","import { FoldMeasureId, FoldMeasureName, FoldMeasureValue, UnfoldDimensionGroup } from 'src/dataReshape/constant'\nimport { dataReshapeFor2D1M } from 'src/dataReshape'\nimport type { AdvancedPipe, Dataset, DatasetReshapeInfo, Dimensions, MeasureGroup } from 'src/types'\n\n/**\n * 数据重塑为透视结构, 如果存在指标分组, 则将数据按组划分. 如果存在行列维度, 则生成行列树结构.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo2D1M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { measures } = advancedVSeed\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!measures || !dimensions) {\n    return result\n  }\n\n  const measureGroups: MeasureGroup[] = []\n  if (measures) {\n    measures.forEach((measure: MeasureGroup) => {\n      if (measure.children && measure.children.length > 0) {\n        measureGroups.push(measure)\n      }\n    })\n  }\n  const commonDimensions = dimensions.filter((dim) => dim.location === 'dimension')\n\n  const newDatasets: Dataset = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n  measureGroups.forEach((measureGroup, index) => {\n    const measures = measureGroup.children\n    if (!measures) {\n      return\n    }\n    const groupId = measureGroup.id\n    const {\n      dataset: newSubDataset,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor2D1M(dataset, commonDimensions, measures, {\n      foldMeasureId: FoldMeasureId,\n      foldMeasureName: FoldMeasureName,\n      foldMeasureValue: FoldMeasureValue + groupId,\n      unfoldDimensionGroup: UnfoldDimensionGroup,\n    })\n    const reshapeInfo = {\n      id: groupId,\n      index,\n      foldInfo,\n      unfoldInfo,\n    }\n    newDatasets.push(newSubDataset)\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: datasetReshapeInfo,\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  columnConfig,\n  markStyle,\n  annotation,\n  pivotReshapeTo2D1M,\n  sortXBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const columnAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  columnConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IBarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initColumn: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IBarChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'bar'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { SpecPipe, StackCornerRadius } from 'src/types'\n\nexport const stackCornerRadius: SpecPipe = (spec, context) => {\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const stackCornerRadius = advancedVSeed.config?.[chartType as 'column']?.stackCornerRadius as StackCornerRadius\n\n  return {\n    ...spec,\n    stackCornerRadius,\n  }\n}\n","import type { IAreaChartSpec, IBarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const stackInverse: SpecPipe = (spec) => {\n  const result = { ...spec } as IAreaChartSpec | IBarChartSpec\n  result.stackInverse = true\n  return result\n}\n","import type { ICartesianCrosshairSpec, ILineChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const verticalCrosshairRect: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n\n  const config = advancedVSeed.config?.[chartType as 'column']?.crosshairRect\n  if (!config) {\n    return result\n  }\n\n  if (!result.crosshair) {\n    result.crosshair = {}\n  }\n\n  const visible = config.visible || true\n  const rectColor = config.rectColor || undefined\n  const labelColor = config.labelColor || undefined\n  const labelVisible = config.labelVisible || false\n  const labelBackgroundColor = config.labelBackgroundColor || undefined\n\n  const crosshair = result.crosshair as ICartesianCrosshairSpec\n  crosshair.xField = {\n    visible,\n    line: {\n      type: 'rect',\n      style: {\n        lineWidth: 0,\n        opacity: 0.2,\n        fill: rectColor,\n      },\n    },\n    label: {\n      visible: labelVisible,\n      labelBackground: {\n        visible: labelVisible,\n        style: {\n          fill: labelBackgroundColor,\n        },\n      },\n      style: {\n        fill: labelColor,\n      },\n    },\n  }\n\n  return result\n}\n","import type { IBarChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { BarStyle, Datum, SpecPipe } from 'src/types'\n\nexport const barStyle: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { markStyle, dataset = [] } = advancedVSeed\n  const { barStyle } = markStyle\n\n  const showStroke = dataset.length <= 100\n\n  const result = {\n    ...spec,\n    bar: {\n      style: {\n        lineWidth: showStroke ? 1 : 0,\n      },\n      state: {\n        hover: {\n          fillOpacity: 0.6,\n        },\n      },\n    },\n  } as IBarChartSpec\n\n  if (!barStyle) {\n    return result\n  }\n\n  const barStyles = (Array.isArray(barStyle) ? barStyle : [barStyle]) as BarStyle[]\n\n  const customMap = barStyles.reduce<object>((result, style, index) => {\n    const { barBorderColor, barBorderStyle, barBorderWidth = 1, barColor, barColorOpacity, barRadius } = style\n\n    const lineDash = barBorderStyle === 'dashed' ? [5, 2] : barBorderStyle === 'dotted' ? [2, 5] : [0, 0]\n    return {\n      ...result,\n      [`custom${index + 1}`]: {\n        // 优先级: 后者覆盖前者\n        level: index + 1,\n        filter: (datum: Datum) => {\n          if (selector(datum, style.selector)) {\n            return true\n          }\n          return false\n        },\n        style: {\n          fill: barColor,\n          fillOpacity: barColorOpacity,\n          cornerRadius: barRadius,\n          innerBorder: {\n            stroke: barBorderColor,\n            lineWidth: barBorderWidth,\n            distance: (barBorderWidth || 0) / 2,\n            lineDash: lineDash,\n          },\n        },\n      },\n    }\n  }, {})\n\n  return {\n    ...result,\n    bar: {\n      state: {\n        ...customMap,\n      },\n    },\n  }\n}\n","import type { ICartesianSeries, ILineChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { Datum, SpecPipe } from 'src/types'\nimport { isSubset } from './utils'\nimport { ANNOTATION_Z_INDEX } from '../../../../utils/constant'\n\nexport const annotationAreaBand: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { annotation } = advancedVSeed\n\n  if (!annotation || !annotation.annotationArea) {\n    return spec\n  }\n\n  const { annotationArea } = annotation\n  const annotationAreaList = Array.isArray(annotationArea) ? annotationArea : [annotationArea]\n\n  const positionMap = {\n    top: 'insideTop',\n    topRight: 'insideTopRight',\n    topLeft: 'insideTopLeft',\n    bottom: 'insideBottom',\n    bottomLeft: 'insideBottomLeft',\n    bottomRight: 'insideBottomRight',\n    left: 'insideLeft',\n    right: 'insideRight',\n  }\n\n  const markArea = annotationAreaList.flatMap((annotationArea) => {\n    const {\n      selector: selectorPoint,\n      text = '',\n      textPosition = 'top',\n      textColor = '#ffffff',\n      textFontSize = 12,\n      textFontWeight = 400,\n      textAlign = 'center',\n      textBaseline = 'top',\n\n      textBackgroundVisible = true,\n      textBackgroundColor = '#191d24',\n      textBackgroundBorderColor = '#191d24',\n      textBackgroundBorderWidth = 1,\n      textBackgroundBorderRadius = 4,\n      textBackgroundPadding = 4,\n\n      areaColor = '#888888',\n      areaColorOpacity = 0.15,\n      areaBorderColor = '#888888',\n      areaBorderRadius = 4,\n      areaBorderWidth = 1,\n\n      outerPadding = 4,\n    } = annotationArea\n\n    const dataset = advancedVSeed.dataset.flat()\n    const selectedData = selectorPoint ? dataset.filter((datum) => selector(datum, selectorPoint)) : []\n\n    return {\n      zIndex: ANNOTATION_Z_INDEX,\n      regionRelative: true,\n      positions: (data: Datum[], context: ICartesianSeries) => {\n        const positionData = data.filter((item) => selectedData.some((datum) => isSubset(datum, item)))\n        const xyList = positionData.map((datum) => context.dataToPosition(datum) as { x: number; y: number })\n\n        const yAxisHelper = context.getYAxisHelper() as unknown as {\n          getBandwidth: (depth?: number) => number\n          getScale: () => {\n            range: () => number[]\n          }\n        }\n        const xAxisHelper = context.getXAxisHelper() as unknown as {\n          getBandwidth: (depth?: number) => number\n          getScale: () => {\n            range: () => number[]\n          }\n        }\n\n        if (typeof xAxisHelper?.getBandwidth === 'function') {\n          const depth = context.fieldX.length ?? 0\n          const xBandWidth = xAxisHelper?.getBandwidth?.(depth - 1)\n          const yScale = yAxisHelper.getScale()\n\n          const minX = Math.min(...xyList.map((item) => item.x)) - (outerPadding || 4)\n          const maxX = Math.max(...xyList.map((item) => item.x)) + xBandWidth + (outerPadding || 4)\n          const minY = Math.min(...yScale.range())\n          const maxY = Math.max(...yScale.range())\n\n          return [\n            // 左上\n            {\n              x: minX,\n              y: minY,\n            },\n            // 右上\n            {\n              x: maxX,\n              y: minY,\n            },\n            // 右下\n            {\n              x: maxX,\n              y: maxY,\n            },\n            // 左下\n            {\n              x: minX,\n              y: maxY,\n            },\n          ]\n        }\n\n        if (typeof yAxisHelper?.getBandwidth === 'function') {\n          const depth = context.fieldY.length ?? 0\n          const yBandWidth = yAxisHelper?.getBandwidth?.(depth - 1)\n          const xScale = xAxisHelper.getScale()\n\n          const minY = Math.min(...xyList.map((item) => item.y)) - (outerPadding || 4)\n          const maxY = Math.max(...xyList.map((item) => item.y)) + yBandWidth + (outerPadding || 4)\n          const minX = Math.min(...xScale.range())\n          const maxX = Math.max(...xScale.range())\n\n          return [\n            // 左上\n            {\n              x: minX,\n              y: minY,\n            },\n            // 右上\n            {\n              x: maxX,\n              y: minY,\n            },\n            // 右下\n            {\n              x: maxX,\n              y: maxY,\n            },\n            // 左下\n            {\n              x: minX,\n              y: maxY,\n            },\n          ]\n        }\n\n        return []\n      },\n      label: {\n        position: positionMap[textPosition || 'top'],\n        visible: true,\n        text: text,\n        style: {\n          dy: textFontSize,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          stroke: textBackgroundColor,\n          lineWidth: 1,\n          fill: textColor,\n          fontSize: textFontSize,\n          fontWeight: textFontWeight,\n        },\n\n        labelBackground: {\n          visible: textBackgroundVisible,\n          padding: textBackgroundPadding,\n          style: {\n            dy: textFontSize,\n            cornerRadius: textBackgroundBorderRadius ?? 4,\n            fill: textBackgroundColor,\n            stroke: textBackgroundBorderColor,\n            lineWidth: textBackgroundBorderWidth,\n          },\n        },\n      },\n      area: {\n        style: {\n          visible: true,\n          fill: areaColor,\n          fillOpacity: areaColorOpacity,\n          stroke: areaBorderColor,\n          lineWidth: areaBorderWidth,\n          cornerRadius: areaBorderRadius,\n        },\n      },\n    }\n  }) as ILineChartSpec['markArea']\n\n  return {\n    ...spec,\n    markArea: markArea,\n  }\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  initColumn,\n  datasetXY,\n  xBand,\n  yLinear,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotAdapter,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  stackInverse,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  verticalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst column: SpecPipeline = [\n  initColumn,\n  stackCornerRadius,\n  stackInverse,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairRect,\n  discreteLegend,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotColumn: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initColumn,\n    stackCornerRadius,\n    stackInverse,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const columnSpecPipeline = [pivotAdapter(column, pivotColumn)]\n","import { columnAdvancedPipeline, columnSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerColumn = () => {\n  Builder._advancedPipelineMap['column'] = columnAdvancedPipeline\n  Builder._specPipelineMap['column'] = columnSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  pivotReshapeTo2D1M,\n  columnParallelConfig,\n  markStyle,\n  annotation,\n  sortXBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const columnParallelAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  columnParallelConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IBarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initColumnParallel: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IBarChartSpec\n  const { advancedVSeed } = context\n  const { encoding, datasetReshapeInfo } = advancedVSeed\n  const { unfoldInfo } = datasetReshapeInfo[0]\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'bar'\n  result.direction = 'vertical'\n  result.xField = [encoding[0].x[0], unfoldInfo.groupId]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  xBand,\n  yLinear,\n  initColumnParallel,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotIndicators,\n  initPivot,\n  datasetPivot,\n  pivotAdapter,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  verticalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst columnParallel: SpecPipeline = [\n  initColumnParallel,\n  stackCornerRadius,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  discreteLegend,\n  verticalCrosshairRect,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotColumnParallel: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initColumnParallel,\n    stackCornerRadius,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const columnParallelSpecPipeline: SpecPipeline = [pivotAdapter(columnParallel, pivotColumnParallel)]\n","import { columnParallelAdvancedPipeline, columnParallelSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerColumnParallel = () => {\n  Builder._advancedPipelineMap['columnParallel'] = columnParallelAdvancedPipeline\n  Builder._specPipelineMap['columnParallel'] = columnParallelSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  theme,\n  reshapeTo2D1M,\n  pivotReshapeTo2D1M,\n  pivotAdapter,\n  columnPercentConfig,\n  markStyle,\n  annotation,\n  sortXBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const columnPercentAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  columnPercentConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import { IAreaChartSpec, IBarChartSpec } from '@visactor/vchart'\nimport { SpecPipe } from 'src/types'\n\nexport const percent: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IAreaChartSpec | IBarChartSpec\n  result.percent = true\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  initColumn,\n  datasetXY,\n  xBand,\n  yLinear,\n  percent,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotAdapter,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  stackInverse,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  verticalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst columnPercent: SpecPipeline = [\n  initColumn,\n  stackCornerRadius,\n  stackInverse,\n  color,\n  backgroundColor,\n  percent,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairRect,\n  discreteLegend,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotColumnPercent: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initColumn,\n    stackCornerRadius,\n    stackInverse,\n    color,\n    percent,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const columnPercentSpecPipeline: SpecPipeline = [pivotAdapter(columnPercent, pivotColumnPercent)]\n","import { columnPercentAdvancedPipeline, columnPercentSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerColumnPercent = () => {\n  Builder._advancedPipelineMap['columnPercent'] = columnPercentAdvancedPipeline\n  Builder._specPipelineMap['columnPercent'] = columnPercentSpecPipeline\n}","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingYX: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions) {\n    return result\n  }\n\n  const yDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const y = [isZeroDimension ? foldInfo.measureName : yDimension?.id]\n    const x = [foldInfo.measureValue]\n    const group = [unfoldInfo.groupId]\n    const color = [foldInfo.measureName]\n\n    return [\n      ...prev,\n      {\n        x,\n        y,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  initAdvancedVSeed,\n  encodingYX,\n  theme,\n  autoMeasures,\n  autoDimensions,\n  reshapeTo2D1M,\n  pivotReshapeTo2D1M,\n  pivotAdapter,\n  barConfig,\n  markStyle,\n  annotation,\n  sortYBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const barAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingYX,\n  sortYBandAxis,\n  sortLegend,\n  barConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IBarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initBar: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IBarChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'bar'\n  result.direction = 'horizontal'\n  result.yField = encoding[0].y?.[0]\n  result.xField = encoding[0].x?.[0]\n  result.seriesField = encoding[0].group?.[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { isPivotChart } from 'src/pipeline/utils'\nimport type { SpecPipe } from 'src/types'\n\nexport const datasetYX: SpecPipe = (spec, context) => {\n  const { advancedVSeed, vseed } = context\n  const { encoding, analysis, datasetReshapeInfo } = advancedVSeed\n  const orderMapping = analysis?.orderMapping || {}\n  const angle = encoding[0]?.angle?.[0]\n  const y = encoding[0]?.y?.[0]\n  const group = encoding[0]?.group?.[0]\n  const id = datasetReshapeInfo[0].id\n\n  const fields: Record<string, object> = {}\n  if (angle) {\n    fields[angle] = {\n      sortIndex: 0,\n    }\n  }\n  if (y) {\n    const order = orderMapping[y]\n    if (order) {\n      fields[y] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[y] = {\n        sortIndex: 0,\n      }\n    }\n  }\n  if (group) {\n    const order = orderMapping[group]\n    if (order) {\n      fields[group] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[group] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  return {\n    ...spec,\n    data: {\n      id,\n      // 透视表不使用 dataValues\n      values: isPivotChart(vseed) ? undefined : advancedVSeed.dataset,\n      fields: fields,\n    },\n  } as ISpec\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { LINEAR_AXIS_INNER_OFFSET_TOP } from '../../../../utils/constant'\nimport type { SpecPipe, XLinearAxis } from 'src/types'\nimport { autoFormatter } from '../../../../utils'\n\nexport const xLinear: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { locale } = advancedVSeed\n  const config = advancedVSeed.config?.[chartType as 'bar']?.xAxis as XLinearAxis\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        type: 'linear',\n        orient: 'bottom',\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n\n    zero,\n    nice,\n    inverse,\n    max,\n    min,\n    log,\n    logBase = 10,\n  } = config\n\n  const linearAxis = {\n    visible,\n    type: log ? 'log' : 'linear',\n    base: logBase,\n    orient: 'bottom',\n    nice,\n    zero: log ? false : zero,\n    inverse,\n    max,\n    min,\n    label: {\n      visible: label?.visible,\n      formatMethod: (value: string) => {\n        return autoFormatter(value, locale)\n      },\n      style: {\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    innerOffset: {\n      right: LINEAR_AXIS_INNER_OFFSET_TOP,\n      // left: LINEAR_AXIS_INNER_OFFSET_TOP,\n    },\n  }\n\n  result.axes = [...result.axes, linearAxis] as ISpec['axes']\n\n  return result\n}\n","import type { ICartesianBandAxisSpec, ISpec } from '@visactor/vchart'\nimport type { SpecPipe, XBandAxis } from 'src/types'\n\nexport const yBand: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const config = advancedVSeed.config?.[chartType as 'bar']?.yAxis as XBandAxis\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        type: 'band',\n        orient: 'left',\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n    labelAutoHide,\n    labelAutoHideGap,\n    labelAutoLimit,\n    labelAutoLimitLength = 80,\n    labelAutoRotate,\n    labelAutoRotateAngleRange,\n  } = config\n\n  const sampling = !(labelAutoHide || labelAutoRotate || labelAutoLimit)\n\n  const bandAxis = {\n    visible,\n    type: 'band',\n    orient: 'left',\n    maxWidth: labelAutoLimitLength + 60,\n    sampling,\n    hover: true,\n    label: {\n      visible: label?.visible,\n      flush: true,\n      containerAlign: 'right',\n      space: 8,\n      style: {\n        maxLineWidth: labelAutoLimitLength,\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n      // 防重叠相关\n      minGap: labelAutoHideGap,\n      autoHide: labelAutoHide,\n      autoHideMethod: 'greedy',\n      autoHideSeparation: labelAutoHideGap,\n      autoLimit: labelAutoLimit,\n      autoRotate: labelAutoRotate,\n      autoRotateAngle: labelAutoRotateAngleRange,\n      lastVisible: true,\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    paddingInner: [0.15, 0.1],\n    paddingOuter: [0.075, 0.1],\n  } as ICartesianBandAxisSpec\n\n  result.axes = [...result.axes, bandAxis] as ISpec['axes']\n  return result\n}\n","import type { ICartesianCrosshairSpec, ILineChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const horizontalCrosshairRect: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n\n  const config = advancedVSeed.config?.[chartType as 'column']?.crosshairRect\n  if (!config) {\n    return result\n  }\n\n  if (!result.crosshair) {\n    result.crosshair = {}\n  }\n\n  const visible = config.visible || true\n  const rectColor = config.rectColor || undefined\n  const labelColor = config.labelColor || undefined\n  const labelVisible = config.labelVisible || false\n  const labelBackgroundColor = config.labelBackgroundColor || undefined\n\n  const crosshair = result.crosshair as ICartesianCrosshairSpec\n  crosshair.yField = {\n    visible,\n    line: {\n      type: 'rect',\n      style: {\n        lineWidth: 0,\n        opacity: 0.2,\n        fill: rectColor,\n      },\n    },\n    label: {\n      visible: labelVisible,\n      labelBackground: {\n        visible: labelVisible,\n        style: {\n          fill: labelBackgroundColor,\n        },\n      },\n      style: {\n        fill: labelColor,\n      },\n    },\n  }\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  initBar,\n  datasetYX,\n  xLinear,\n  yBand,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotAdapter,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsCol,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  horizontalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst bar: SpecPipeline = [\n  initBar,\n  stackCornerRadius,\n  color,\n  backgroundColor,\n  datasetYX,\n  progressive,\n  xLinear,\n  yBand,\n  label,\n  tooltip,\n  horizontalCrosshairRect,\n  discreteLegend,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotBar: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsCol,\n  datasetPivot,\n  pivotIndicators([\n    initBar,\n    stackCornerRadius,\n    color,\n    backgroundColor,\n    datasetYX,\n    progressive,\n    xLinear,\n    yBand,\n    label,\n    label,\n    tooltip,\n    horizontalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const barSpecPipeline: SpecPipeline = [pivotAdapter(bar, pivotBar)]\n","import { barAdvancedPipeline, barSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerBar = () => {\n  Builder._advancedPipelineMap['bar'] = barAdvancedPipeline\n  Builder._specPipelineMap['bar'] = barSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingYX,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  pivotReshapeTo2D1M,\n  barParallelConfig,\n  markStyle,\n  annotation,\n  sortYBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const barParallelAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingYX,\n  sortYBandAxis,\n  sortLegend,\n  barParallelConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IBarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initBarParallel: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IBarChartSpec\n  const { advancedVSeed } = context\n  const { encoding, datasetReshapeInfo } = advancedVSeed\n  const { unfoldInfo } = datasetReshapeInfo[0]\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'bar'\n  result.direction = 'horizontal'\n  result.yField = [encoding[0].y[0], unfoldInfo.groupId] as string[]\n  result.xField = encoding[0].x[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetYX,\n  xLinear,\n  yBand,\n  initBarParallel,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  initPivot,\n  datasetPivot,\n  pivotDiscreteLegend,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsCol,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  horizontalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst barParallel: SpecPipeline = [\n  initBarParallel,\n  stackCornerRadius,\n  color,\n  backgroundColor,\n  datasetYX,\n  progressive,\n  xLinear,\n  yBand,\n  label,\n  tooltip,\n  horizontalCrosshairRect,\n  discreteLegend,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotBarParallel: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsCol,\n  datasetPivot,\n  pivotIndicators([\n    initBarParallel,\n    stackCornerRadius,\n    color,\n    backgroundColor,\n    datasetYX,\n    xLinear,\n    yBand,\n    label,\n    tooltip,\n    horizontalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const barParallelSpecPipeline: SpecPipeline = [pivotAdapter(barParallel, pivotBarParallel)]\n","import { barParallelAdvancedPipeline, barParallelSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerBarParallel = () => {\n  Builder._advancedPipelineMap['barParallel'] = barParallelAdvancedPipeline\n  Builder._specPipelineMap['barParallel'] = barParallelSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingYX,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  pivotReshapeTo2D1M,\n  barPercentConfig,\n  markStyle,\n  annotation,\n  sortYBandAxis,\n  sortLegend,\n} from '../pipes'\n\nexport const barPercentAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingYX,\n  sortYBandAxis,\n  sortLegend,\n  barPercentConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { SpecPipeline } from 'src/types'\nimport {\n  initBar,\n  datasetYX,\n  xLinear,\n  yBand,\n  percent,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotAdapter,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsCol,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  horizontalCrosshairRect,\n  stackCornerRadius,\n  progressive,\n} from '../pipes'\n\nconst barPercent: SpecPipeline = [\n  initBar,\n  stackCornerRadius,\n  color,\n  backgroundColor,\n  percent,\n  datasetYX,\n  progressive,\n  xLinear,\n  yBand,\n  label,\n  tooltip,\n  horizontalCrosshairRect,\n  discreteLegend,\n  barStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotBarPercent: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsCol,\n  datasetPivot,\n  pivotIndicators([\n    initBar,\n    stackCornerRadius,\n    color,\n    backgroundColor,\n    percent,\n    datasetYX,\n    yBand,\n    xLinear,\n    label,\n    tooltip,\n    horizontalCrosshairRect,\n    barStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const barPercentSpecPipeline: SpecPipeline = [pivotAdapter(barPercent, pivotBarPercent)]\n","import { barPercentAdvancedPipeline, barPercentSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerBarPercent = () => {\n  Builder._advancedPipelineMap['barPercent'] = barPercentAdvancedPipeline\n  Builder._specPipelineMap['barPercent'] = barPercentSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  areaConfig,\n  annotation,\n  markStyle,\n  sortXBandAxis,\n  sortLegend,\n  reshapeTo2D1M0Name,\n  pivotReshapeTo2D1M0Name,\n} from '../pipes'\n\nexport const areaAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M0Name], [pivotReshapeTo2D1M0Name]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  areaConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IAreaChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initArea: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IAreaChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'area'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { IAreaChartSpec } from '@visactor/vchart'\nimport { selector } from '../../../../../dataSelector'\nimport type { AreaStyle, Datum, SpecPipe } from 'src/types'\nimport { groupBy } from 'remeda'\n\nexport const areaStyle: SpecPipe = (spec, context) => {\n  const { advancedVSeed } = context\n  const { markStyle, encoding, dataset } = advancedVSeed\n  const { areaStyle } = markStyle\n\n  if (!areaStyle) {\n    return spec\n  }\n  const result = { ...spec } as IAreaChartSpec\n\n  const areaStyles = (Array.isArray(areaStyle) ? areaStyle : [areaStyle]) as AreaStyle[]\n\n  const group = encoding[0]?.group?.[0]\n  const lineGroups = groupBy(dataset, (d) => d[group ?? ''] as string)\n\n  const customMap = areaStyles.reduce<object>((result, style, index) => {\n    const { areaColor, areaColorOpacity } = style\n\n    return {\n      ...result,\n      [`custom${index + 1}`]: {\n        // 优先级: 后者覆盖前者\n        level: index + 1,\n        filter: (datum: Datum) => {\n          const lineData = lineGroups[datum[group ?? ''] as string]\n          for (const d of lineData) {\n            if (selector(d, style.selector)) {\n              return true\n            }\n          }\n          return false\n        },\n        style: {\n          fill: areaColor,\n          fillOpacity: areaColorOpacity,\n        },\n      },\n    }\n  }, {})\n\n  return {\n    ...result,\n    area: {\n      state: {\n        ...customMap,\n      },\n    },\n  }\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  xBand,\n  yLinear,\n  initArea,\n  stackInverse,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotAdapter,\n  initPivot,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  lineStyle,\n  areaStyle,\n  verticalCrosshairLine,\n  pointStateDimensionHover,\n  datasetXY,\n  progressive,\n} from '../pipes'\n\nconst area: SpecPipeline = [\n  initArea,\n  stackInverse,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairLine,\n  discreteLegend,\n  pointStyle,\n  pointStateDimensionHover,\n  lineStyle,\n  areaStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotArea: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initArea,\n    color,\n    backgroundColor,\n    stackInverse,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairLine,\n    pointStyle,\n    pointStateDimensionHover,\n    lineStyle,\n    areaStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const areaSpecPipeline = [pivotAdapter(area, pivotArea)]\n","import { areaAdvancedPipeline, areaSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerArea = () => {\n  Builder._advancedPipelineMap['area'] = areaAdvancedPipeline\n  Builder._specPipelineMap['area'] = areaSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  encodingXY,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  areaPercentConfig,\n  annotation,\n  markStyle,\n  sortXBandAxis,\n  sortLegend,\n  reshapeTo2D1M0Name,\n  pivotReshapeTo2D1M0Name,\n} from '../pipes'\n\nexport const areaPercentAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M0Name], [pivotReshapeTo2D1M0Name]),\n  encodingXY,\n  sortXBandAxis,\n  sortLegend,\n  areaPercentConfig,\n  theme,\n  markStyle,\n  annotation\n]\n","import type { SpecPipeline } from 'src/types'\nimport {\n  percent,\n  datasetXY,\n  xBand,\n  yLinear,\n  initArea,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotAdapter,\n  initPivot,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  stackInverse,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  lineStyle,\n  areaStyle,\n  verticalCrosshairLine,\n  progressive,\n} from '../pipes'\n\nconst areaPercent: SpecPipeline = [\n  initArea,\n  stackInverse,\n  color,\n  backgroundColor,\n  percent,\n  datasetXY,\n  progressive,\n  xBand,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairLine,\n  discreteLegend,\n  pointStyle,\n  lineStyle,\n  areaStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotAreaPercent: SpecPipeline = [\n  initPivot,\n\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initArea,\n    stackInverse,\n    color,\n    backgroundColor,\n    percent,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairLine,\n    pointStyle,\n    lineStyle,\n    areaStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const areaPercentSpecPipeline = [pivotAdapter(areaPercent, pivotAreaPercent)]\n","import { areaPercentAdvancedPipeline, areaPercentSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerAreaPercent = () => {\n  Builder._advancedPipelineMap['areaPercent'] = areaPercentAdvancedPipeline\n  Builder._specPipelineMap['areaPercent'] = areaPercentSpecPipeline\n}","import { findAllMeasures } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, MeasureGroup, MeasureTree } from 'src/types'\n\n/**\n * 自动处理指标, 如果超出了2个指标, 则按每2个指标一个组的逻辑维护\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const autoMeasuresBy2M1Group: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { measures, dataset } = vseed\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (measures) {\n    result.measures = auto2M1Group(measures as MeasureTree)\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  const newMeasures = Object.keys(sample)\n    .filter((key) => {\n      return top100dataset.some((item) => typeof item[key] === 'number') && !['', null, undefined].includes(key)\n    })\n    .map((measure) => ({\n      id: measure,\n      alias: measure,\n    }))\n\n  result.measures = auto2M1Group(newMeasures)\n  return result\n}\n\nconst auto2M1Group = (measures: MeasureTree): MeasureTree => {\n  const allMeasures = findAllMeasures(measures)\n\n  if (allMeasures.length <= 2) {\n    return allMeasures\n  }\n\n  const groups: MeasureTree = measures.filter((measure) => 'children' in measure)\n  const singleMeasures = measures.filter((measure) => !('children' in measure))\n  for (let i = 0; i < singleMeasures.length; i += 2) {\n    const group = createEmptyMeasureGroup()\n    group.children = allMeasures.slice(i, i + 2)\n    groups.push(group)\n  }\n  return groups as MeasureGroup[]\n}\n\nconst createEmptyMeasureGroup = (): MeasureGroup => {\n  return {\n    id: '',\n    alias: '',\n    children: [],\n  }\n}\n","import type { Dataset, Dimension, FoldInfo, Measure, UnfoldInfo } from 'src/types'\nimport {\n  UnfoldDimensionGroup,\n  FoldMeasureId,\n  FoldMeasureName,\n  FoldMeasureValue,\n  UnfoldDimensionGroupId,\n} from './constant'\nimport { unfoldDimensions } from './unfoldDimensions'\nimport { i18n } from '../i18n'\n\nconst emptyReshapeResult = {\n  dataset: [],\n  foldInfo: {\n    foldMap: {},\n    measureId: '',\n    measureName: '',\n    measureValue: '',\n  },\n  unfoldInfo: {\n    groupName: '',\n    groupId: '',\n    colorItems: [],\n    colorIdMap: {},\n  },\n}\n/**\n * 仅数据重塑为1个维度，不处理指标\n * @param dataset\n * @param dimensions\n * @param measures\n * @returns\n */\nexport const dataReshapeFor1D = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  options?: {\n    foldMeasureId?: string\n    foldMeasureName?: string\n    foldMeasureValue?: string\n    unfoldDimensionGroup?: string\n    unfoldDimensionGroupId?: string\n  },\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} => {\n  const {\n    foldMeasureId = FoldMeasureId,\n    foldMeasureName = FoldMeasureName,\n    foldMeasureValue = FoldMeasureValue,\n    unfoldDimensionGroup = UnfoldDimensionGroup,\n    unfoldDimensionGroupId = UnfoldDimensionGroupId,\n  } = options || {}\n\n  if (dimensions.length === 0 && measures.length === 0) {\n    return emptyReshapeResult\n  }\n\n  if (dimensions.length === 0) {\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      dataset,\n      [],\n      [],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return {\n      dataset: finalDataset,\n      foldInfo: {\n        foldMap: {},\n        measureId: foldMeasureId,\n        measureName: foldMeasureName,\n        measureValue: foldMeasureValue,\n      },\n      unfoldInfo,\n    }\n  } else {\n    // 展开指定的维度为指标\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      dataset,\n      [...dimensions],\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return {\n      dataset: finalDataset,\n      foldInfo: {\n        foldMap: {},\n        measureId: foldMeasureId,\n        measureName: foldMeasureName,\n        measureValue: foldMeasureValue,\n      },\n      unfoldInfo,\n    }\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  areaConfig,\n  annotation,\n  sortXBandAxis,\n  autoMeasuresBy2M1Group,\n  encodingAreaRange,\n  reshapeTo1D,\n  pivotReshapeTo1D,\n  markStyle,\n} from '../pipes'\n\nexport const areaRangeAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasuresBy2M1Group,\n  autoDimensions,\n  pivotAdapter([reshapeTo1D], [pivotReshapeTo1D]),\n  encodingAreaRange,\n  sortXBandAxis,\n  areaConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import { dataReshapeFor1D } from 'src/dataReshape'\nimport type { AdvancedPipe } from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为1个维度2个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo1D: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n\n  const { dataset: newDatasets, foldInfo, unfoldInfo } = dataReshapeFor1D(dataset, dimensions, measures)\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: [\n      {\n        id: '1D2M',\n        index: 0,\n        foldInfo,\n        unfoldInfo,\n      },\n    ],\n  }\n}\n","import { FoldMeasureId, FoldMeasureName, FoldMeasureValue, UnfoldDimensionGroup } from 'src/dataReshape/constant'\nimport { dataReshapeFor1D } from 'src/dataReshape'\nimport type { AdvancedPipe, Dataset, DatasetReshapeInfo, Dimensions, MeasureGroup } from 'src/types'\n\n/**\n * 数据重塑为透视结构, 如果存在指标分组, 则将数据按组划分\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo1D: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { measures } = advancedVSeed\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!measures || !dimensions) {\n    return result\n  }\n\n  const measureGroups: MeasureGroup[] = []\n  if (measures) {\n    measures.forEach((measure: MeasureGroup) => {\n      if (measure.children && measure.children.length > 0) {\n        measureGroups.push(measure)\n      }\n    })\n  }\n  const newDatasets: Dataset = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n  measureGroups.forEach((measureGroup, index) => {\n    const measures = measureGroup.children\n    if (!measures) {\n      return\n    }\n\n    const commonDimensions = dimensions.filter((dim) => dim.location === 'dimension')\n    const groupId = measureGroup.id\n    const {\n      dataset: newSubDataset,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor1D(dataset, commonDimensions, measures, {\n      foldMeasureId: FoldMeasureId,\n      foldMeasureName: FoldMeasureName,\n      foldMeasureValue: FoldMeasureValue + groupId,\n      unfoldDimensionGroup: UnfoldDimensionGroup,\n    })\n    const reshapeInfo = {\n      id: groupId,\n      index,\n      foldInfo,\n      unfoldInfo,\n    }\n    newDatasets.push(newSubDataset)\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: datasetReshapeInfo,\n  }\n}\n","import type { AdvancedPipe, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingAreaRange: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, measures } = advancedVSeed\n  if (!datasetReshapeInfo || !measures) {\n    return result\n  }\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur, index) => {\n    const measure = measures[index]\n    if ('children' in measure) {\n      const m1 = measure.children?.[0]\n      const m2 = measure.children?.[1] || m1\n      const { foldInfo, unfoldInfo } = cur as {\n        foldInfo: FoldInfo\n        unfoldInfo: UnfoldInfo\n      }\n\n      const x = [unfoldInfo.groupId]\n      const y = [m1?.id, m2?.id]\n      const group = [unfoldInfo.groupId]\n      const color = [foldInfo.measureName]\n\n      return [\n        ...prev,\n        {\n          x,\n          y,\n          group,\n          color,\n        },\n      ] as Encoding\n    } else {\n      const m1 = measures[index]\n      const m2 = measures[index + 1] || m1\n      const { foldInfo, unfoldInfo } = cur as {\n        foldInfo: FoldInfo\n        unfoldInfo: UnfoldInfo\n      }\n\n      const x = [unfoldInfo.groupId]\n      const y = [m1.id, m2.id]\n      const group = [unfoldInfo.groupId]\n      const color = [foldInfo.measureName]\n\n      return [\n        ...prev,\n        {\n          x,\n          y,\n          group,\n          color,\n        },\n      ] as Encoding\n    }\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { Spec, SpecPipe, SpecPipeline, SpecPipelineContext } from 'src/types'\nimport { execPipeline } from '../../../../utils'\nimport type { ICommonChartSpec, ILineSeriesSpec } from '@visactor/vchart'\n\nexport const series = (...args: SpecPipeline[]): SpecPipe => {\n  const result = {\n    type: 'common',\n    padding: 0,\n    region: [\n      {\n        clip: true,\n      },\n    ],\n  } as ICommonChartSpec\n\n  return (_, context) => {\n    result.series = args.map((pipeline) => {\n      return execPipeline<Spec, SpecPipelineContext>(pipeline, context, {})\n    }) as ILineSeriesSpec[]\n\n    return result\n  }\n}\n\nexport const seriesDualAxis = (...args: SpecPipeline[]): SpecPipe => {\n  const result = {\n    type: 'common',\n    padding: 0,\n    region: [\n      {\n        clip: true,\n      },\n    ],\n  } as ICommonChartSpec\n\n  const createDualContext = <T extends SpecPipelineContext>(context: T, index: number): T => {\n    const { advancedVSeed } = context\n    const dataset = advancedVSeed.dataset[index]\n    return {\n      ...context,\n      advancedVSeed: {\n        ...advancedVSeed,\n        dataset: dataset,\n      },\n    }\n  }\n\n  return (_, context) => {\n    result.series = args.map((pipeline, index) => {\n      const seriesContext = createDualContext(context, index)\n      return execPipeline<Spec, SpecPipelineContext>(pipeline, seriesContext, {})\n    }) as ILineSeriesSpec[]\n\n    return result\n  }\n}\n","import type { ILineSeriesSpec, IRangeAreaSeriesSpec } from '@visactor/vchart'\nimport type { Color, SpecPipe } from 'src/types'\n\nexport const initAreaRange: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRangeAreaSeriesSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n  const { color } = advancedVSeed.config.areaRange as {\n    color: Color\n  }\n\n  result.type = 'rangeArea'\n  result.direction = 'vertical'\n  result.stack = false\n  result.xField = encoding[0].x[0]\n  result.yField = [encoding[0].y[0], encoding[0].y[1]]\n\n  result.animation = true\n  result.area = {\n    style: {\n      fill: color.colorScheme?.[0],\n    },\n  }\n\n  return result\n}\n\nexport const initAreaRangeLine1: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineSeriesSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n  const { color } = advancedVSeed.config.areaRange as {\n    color: Color\n  }\n  result.type = 'line'\n  result.direction = 'vertical'\n  result.stack = false\n  result.xField = encoding[0].x[0]\n  result.yField = [encoding[0].y[0]]\n\n  result.animation = true\n  result.line = {\n    style: {\n      stroke: color.colorScheme?.[0],\n    },\n  }\n  result.point = {\n    style: {\n      visible: false,\n      fill: color.colorScheme?.[0],\n    },\n  }\n  return result\n}\n\nexport const initAreaRangeLine2: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineSeriesSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n  const { color } = advancedVSeed.config.areaRange as {\n    color: Color\n  }\n  result.type = 'line'\n  result.direction = 'vertical'\n  result.stack = false\n  result.xField = encoding[0].x[0]\n  result.yField = [encoding[0].y[1]]\n\n  result.animation = true\n  result.line = {\n    style: {\n      stroke: color.colorScheme?.[0],\n    },\n  }\n  result.point = {\n    style: {\n      visible: false,\n      fill: color.colorScheme?.[0],\n    },\n  }\n  return result\n}\n","import type { SpecPipe } from 'src/types'\n\nexport const tooltipDisable: SpecPipe = (spec) => {\n  const result = { ...spec }\n\n  result.tooltip = {\n    visible: false,\n  }\n  return result\n}\n","import { isEmpty } from 'remeda'\nimport { autoFormatter, createFormatter, findMeasureById } from '../../../../utils'\nimport type { Datum, SpecPipe, Tooltip } from 'src/types'\n\nexport const tooltipAreaRange: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, chartType, locale, encoding } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { tooltip: Tooltip }\n  const { tooltip = { enable: true } } = baseConfig\n  const { enable } = tooltip\n\n  const { groupName } = datasetReshapeInfo[0].unfoldInfo\n\n  const y = encoding[0]?.y || []\n\n  result.tooltip = {\n    visible: enable,\n\n    dimension: {\n      content: [\n        {\n          visible: true,\n          key: (datum) => (datum && (datum[groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const text = y.map((id) => {\n              const value = datum[id] as string | number\n              const measure = findMeasureById(measures, id)\n              if (!measure) {\n                return String(value)\n              }\n              const { format = {}, autoFormat = true } = measure\n\n              if (!isEmpty(format)) {\n                const formatter = createFormatter(format)\n                return formatter(value)\n              }\n              if (autoFormat) {\n                return autoFormatter(value, locale)\n              }\n              return String(value)\n            })\n            return text.join(' ~ ')\n          },\n          shapeType: 'rectRound',\n        },\n        ...y.map((id: string) => {\n          const measure = findMeasureById(measures, id)\n          return {\n            visible: true,\n            key: measure?.alias || id,\n            value: (datum: unknown) => {\n              if (!datum) {\n                return ''\n              }\n              const value = (datum as unknown as Datum)[id] as string | number\n              const measure = findMeasureById(measures, id)\n              if (!measure) {\n                return String(value)\n              }\n\n              const { format = {}, autoFormat = true } = measure\n\n              if (!isEmpty(format)) {\n                const formatter = createFormatter(format)\n                return formatter(value)\n              }\n              if (autoFormat) {\n                return autoFormatter(value, locale)\n              }\n              return String(value)\n            },\n            shapeType: 'rectRound',\n          }\n        }),\n      ],\n    },\n  }\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  xBand,\n  yLinear,\n  backgroundColor,\n  label,\n  datasetPivot,\n  pivotIndicators,\n  pivotAdapter,\n  initPivot,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  verticalCrosshairLine,\n  initAreaRange,\n  series,\n  lineStyle,\n  pointStyle,\n  pointStateDimensionHover,\n  areaStyle,\n  progressive,\n  tooltipAreaRange,\n  tooltipDisable,\n} from '../pipes'\nimport { initAreaRangeLine1, initAreaRangeLine2 } from '../pipes/init/areaRange'\n\nconst areaRange: SpecPipeline = [\n  series(\n    [initAreaRange, areaStyle],\n    [initAreaRangeLine1, lineStyle, pointStyle, pointStateDimensionHover, tooltipDisable],\n    [initAreaRangeLine2, lineStyle, pointStyle, pointStateDimensionHover, tooltipDisable],\n  ),\n  datasetXY,\n  progressive,\n  backgroundColor,\n  xBand,\n  yLinear,\n  label,\n  tooltipAreaRange,\n  verticalCrosshairLine,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotAreaRange: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    series(\n      [initAreaRange, areaStyle],\n      [initAreaRangeLine1, lineStyle, pointStyle, pointStateDimensionHover, tooltipDisable],\n      [initAreaRangeLine2, lineStyle, pointStyle, pointStateDimensionHover, tooltipDisable],\n    ),\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xBand,\n    yLinear,\n    label,\n    tooltipAreaRange,\n    verticalCrosshairLine,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n]\n\nexport const areaRangeSpecPipeline = [pivotAdapter(areaRange, pivotAreaRange)]\n","import { areaRangeAdvancedPipeline, areaRangeSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerAreaRange = () => {\n  Builder._advancedPipelineMap['areaRange'] = areaRangeAdvancedPipeline\n  Builder._specPipelineMap['areaRange'] = areaRangeSpecPipeline\n}","import type { Dataset, Dimension, FoldInfo, Measure, UnfoldInfo } from 'src/types'\nimport { foldMeasures } from './foldMeasures'\nimport {\n  UnfoldDimensionGroup,\n  FoldMeasureId,\n  FoldMeasureName,\n  FoldMeasureValue,\n  UnfoldDimensionGroupId,\n} from './constant'\nimport { unfoldDimensions } from './unfoldDimensions'\nimport { i18n } from '../i18n'\n\nconst emptyReshapeResult = {\n  dataset: [],\n  foldInfo: {\n    foldMap: {},\n    measureId: '',\n    measureName: '',\n    measureValue: '',\n  },\n  unfoldInfo: {\n    groupName: '',\n    groupId: '',\n    colorItems: [],\n    colorIdMap: {},\n  },\n}\n/**\n * 数据重塑为1个维度1个指标\n * @param dataset\n * @param dimensions\n * @param measures\n * @returns\n */\nexport const dataReshapeFor1D2M = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  options?: {\n    foldMeasureId?: string\n    foldMeasureName?: string\n    foldMeasureValue?: string\n    unfoldDimensionGroup?: string\n    unfoldDimensionGroupId?: string\n  },\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} => {\n  const {\n    foldMeasureId = FoldMeasureId,\n    foldMeasureName = FoldMeasureName,\n    foldMeasureValue = FoldMeasureValue,\n    unfoldDimensionGroup = UnfoldDimensionGroup,\n    unfoldDimensionGroupId = UnfoldDimensionGroupId,\n  } = options || {}\n\n  if (dimensions.length === 0 && measures.length === 0) {\n    return emptyReshapeResult\n  }\n\n  // 合并所有指标为1个指标\n  const { dataset: foldedDataset, foldInfo } = foldMeasures(\n    dataset,\n    measures.length > 1 ? measures.slice(1) : measures,\n    foldMeasureId,\n    foldMeasureName,\n    foldMeasureValue,\n  )\n\n  if (dimensions.length === 0) {\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      [{ id: foldMeasureValue, alias: i18n`指标值`, location: 'dimension' }],\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  } else {\n    // 展开指定的维度为指标\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      [...dimensions],\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  annotation,\n  markStyle,\n  scatterConfig,\n  reshapeTo1D2M,\n  pivotReshapeTo1D2M,\n  encodingYY,\n} from '../pipes'\n\nexport const scatterAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo1D2M], [pivotReshapeTo1D2M]),\n  encodingYY,\n  scatterConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import { dataReshapeFor1D2M } from 'src/dataReshape'\nimport type { AdvancedPipe } from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为1个维度2个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo1D2M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n\n  const { dataset: newDatasets, foldInfo, unfoldInfo } = dataReshapeFor1D2M(dataset, dimensions, measures)\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: [\n      {\n        id: '1D2M',\n         index: 0,\n        foldInfo,\n        unfoldInfo,\n      },\n    ],\n  }\n}\n","import { FoldMeasureId, FoldMeasureName, FoldMeasureValue, UnfoldDimensionGroup } from 'src/dataReshape/constant'\nimport { dataReshapeFor1D2M } from 'src/dataReshape'\nimport type { AdvancedPipe, Dataset, DatasetReshapeInfo, Dimensions, MeasureGroup } from 'src/types'\n\n/**\n * 数据重塑为透视结构, 如果存在指标分组, 则将数据按组划分. 如果存在行列维度, 则生成行列树结构.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo1D2M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { measures } = advancedVSeed\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!measures || !dimensions) {\n    return result\n  }\n\n  const measureGroups: MeasureGroup[] = []\n  if (measures) {\n    measures.forEach((measure: MeasureGroup) => {\n      if (measure.children && measure.children.length > 0) {\n        measureGroups.push(measure)\n      }\n    })\n  }\n  const newDatasets: Dataset = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n  measureGroups.forEach((measureGroup, index) => {\n    const measures = measureGroup.children\n    if (!measures) {\n      return\n    }\n\n    const commonDimensions = dimensions.filter((dim) => dim.location === 'dimension')\n    const groupId = measureGroup.id\n    const {\n      dataset: newSubDataset,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor1D2M(dataset, commonDimensions, measures, {\n      foldMeasureId: FoldMeasureId,\n      foldMeasureName: FoldMeasureName,\n      foldMeasureValue: FoldMeasureValue + groupId,\n      unfoldDimensionGroup: UnfoldDimensionGroup,\n    })\n    const reshapeInfo = {\n      id: groupId,\n      index,\n      foldInfo,\n      unfoldInfo,\n    }\n    newDatasets.push(newSubDataset)\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: datasetReshapeInfo,\n  }\n}\n","import { findFirstMeasure } from 'src/pipeline/utils'\nimport type { AdvancedPipe, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingYY: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, measures } = advancedVSeed\n  if (!datasetReshapeInfo || !measures) {\n    return result\n  }\n\n  const firstMeasure = findFirstMeasure(measures)\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const x = [firstMeasure?.id]\n    const y = [foldInfo.measureValue]\n    const group = [unfoldInfo.groupId]\n    const color = [unfoldInfo.groupId]\n\n    return [\n      ...prev,\n      {\n        x,\n        y,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { IScatterChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initScatter: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IScatterChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'scatter'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n\n  return result\n}\n","import type { ICartesianCrosshairSpec, ILineChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const horizontalCrosshairLine: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n\n  const config = advancedVSeed.config?.[chartType as 'line']?.crosshairLine\n  if (!config) {\n    return result\n  }\n\n  if (!result.crosshair) {\n    result.crosshair = {}\n  }\n\n  const visible = config.visible || true\n  const lineColor = config.lineColor || undefined\n  const labelColor = config.labelColor || undefined\n  const labelVisible = config.labelVisible || undefined\n  const labelBackgroundColor = config.labelBackgroundColor || undefined\n\n  const crosshair = result.crosshair as ICartesianCrosshairSpec\n  crosshair.yField = {\n    visible,\n    line: {\n      type: 'line',\n      style: {\n        lineWidth: 1,\n        opacity: 1,\n        stroke: lineColor,\n        lineDash: [4, 2],\n      },\n    },\n    label: {\n      visible: labelVisible,\n      labelBackground: {\n        visible: labelVisible,\n        style: {\n          fill: labelBackgroundColor,\n        },\n      },\n      style: {\n        fill: labelColor,\n      },\n    },\n  }\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  yLinear,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  initPivot,\n  datasetPivot,\n  pivotDiscreteLegend,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  verticalCrosshairLine,\n  xLinear,\n  horizontalCrosshairLine,\n  pointStateHover,\n  initScatter,\n  progressive\n} from '../pipes'\n\nconst scatter: SpecPipeline = [\n  initScatter,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  xLinear,\n  yLinear,\n  label,\n  tooltip,\n  verticalCrosshairLine,\n  horizontalCrosshairLine,\n  discreteLegend,\n  pointStyle,\n  pointStateHover,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotScatter: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initScatter,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    xLinear,\n    yLinear,\n    label,\n    tooltip,\n    verticalCrosshairLine,\n    horizontalCrosshairLine,\n    pointStyle,\n    pointStateHover,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const scatterSpecPipeline: SpecPipeline = [pivotAdapter(scatter, pivotScatter)]\n","import { scatterAdvancedPipeline, scatterSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerScatter = () => {\n  Builder._advancedPipelineMap['scatter'] = scatterAdvancedPipeline\n  Builder._specPipelineMap['scatter'] = scatterSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  annotation,\n  markStyle,\n  sortXBandAxis,\n  sortLegend,\n  reshapeTo2D2M,\n  encodingXYY,\n  pivotReshapeTo2D2M,\n  dualAxisConfig,\n} from '../pipes'\nimport { autoDualMeasures } from '../pipes/init/autoDualMeasures'\n\nexport const dualAxisAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoDualMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D2M], [pivotReshapeTo2D2M]),\n  encodingXYY,\n  sortXBandAxis,\n  sortLegend,\n  dualAxisConfig,\n  theme,\n  markStyle,\n  annotation\n]\n","import { measureDepth } from 'src/pipeline/utils'\nimport type { AdvancedPipe, Datum, DualAxis, DualMeasures, MeasureGroup, MeasureTree } from 'src/types'\n\nexport const autoDualMeasures: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context as {\n    vseed: DualAxis\n  }\n  const { dataset, dualMeasures, measures } = vseed\n\n  if (!dataset) {\n    throw new Error('dataset is required')\n  }\n\n  if (dataset.length === 0) {\n    return result\n  }\n\n  if (dualMeasures) {\n    result.measures = dualMeasuresToMeasureTree(dualMeasures)\n    return result\n  }\n  if (measures && measureDepth(measures) > 1) {\n    result.measures = measures\n    return result\n  }\n\n  const top100dataset = dataset.slice(0, 100)\n\n  const sample = top100dataset.reduce<Datum>((prev, cur) => {\n    return { ...prev, ...cur }\n  }, {})\n\n  const newMeasures =\n    measures ||\n    Object.keys(sample)\n      .filter((key) => {\n        return top100dataset.some((item) => typeof item[key] === 'number') && !['', null, undefined].includes(key)\n      })\n      .map((measure) => ({\n        id: measure,\n        alias: measure,\n      }))\n\n  if (newMeasures.length === 0) {\n    result.measures = []\n    return result\n  } else if (newMeasures.length === 1) {\n    result.measures = [\n      {\n        id: 'primary',\n        alias: 'primary',\n        children: newMeasures,\n      },\n    ]\n    return result\n  } else if (newMeasures.length > 1) {\n    result.measures = [\n      {\n        id: 'primary',\n        alias: 'primary',\n        children: newMeasures.slice(0, 1),\n      },\n      {\n        id: 'secondary',\n        alias: 'secondary',\n        children: newMeasures.slice(1),\n      },\n    ]\n  }\n\n  return result\n}\n\nconst dualMeasuresToMeasureTree = (dualMeasures: DualMeasures): MeasureTree => {\n  const measureTree = dualMeasures.map((item, index): MeasureGroup => {\n    const { primaryMeasures, secondaryMeasures } = item\n    const groupChildren: MeasureGroup[] = []\n\n    let id: string = ''\n    if (primaryMeasures) {\n      const arrPrimaryMeasures = Array.isArray(primaryMeasures) ? primaryMeasures : [primaryMeasures]\n      const alias = arrPrimaryMeasures.map((item) => item.alias || item.id).toString()\n      id += alias\n      groupChildren.push({\n        id: `${index}-primary`,\n        alias: arrPrimaryMeasures.map((item) => item.alias || item.id).toString(),\n        children: arrPrimaryMeasures,\n      })\n    }\n    if (secondaryMeasures) {\n      const arrSecondaryMeasures = Array.isArray(secondaryMeasures) ? secondaryMeasures : [secondaryMeasures]\n      const alias = arrSecondaryMeasures.map((item) => item.alias || item.id).toString()\n      id += alias\n      groupChildren.push({\n        id: `${index}-secondary`,\n        alias: arrSecondaryMeasures.map((item) => item.alias || item.id).toString(),\n        children: arrSecondaryMeasures,\n      })\n    }\n\n    return {\n      id,\n      alias: id,\n      children: groupChildren,\n    }\n  })\n\n  // 只有1个双轴图, 仅返回2层, vchart 绘制双轴图\n  if (dualMeasures.length === 1) {\n    return measureTree[0].children || []\n  }\n\n  // 有多个双轴图, 返回3层, pivot chart 绘制组合双轴图\n  return measureTree\n}\n","import { dataReshapeFor2D1M, FoldPrimaryMeasureValue, FoldSecondaryMeasureValue } from 'src/dataReshape'\nimport type { AdvancedPipe, Dimension, FoldInfo, MeasureGroup, UnfoldInfo } from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为2个维度2个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo2D2M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n  if (measures.length > 2) {\n    throw new Error('measures can not be more than 2')\n  }\n\n  const commonDimensions = dimensions.filter((dim) => (dim as Dimension).location === 'dimension')\n\n  const datasets = []\n  const foldInfoList: FoldInfo[] = []\n  const unfoldInfoList: UnfoldInfo[] = []\n\n  const primaryMeasures = measures[0] as MeasureGroup\n  const secondaryMeasures = (measures[1] || []) as MeasureGroup\n\n  if (primaryMeasures && primaryMeasures.children) {\n    const {\n      dataset: newDatasets,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor2D1M(dataset, commonDimensions, primaryMeasures.children, {\n      foldMeasureValue: FoldPrimaryMeasureValue,\n    })\n    datasets.push(newDatasets)\n    foldInfoList.push(foldInfo)\n    unfoldInfoList.push(unfoldInfo)\n  }\n\n  if (secondaryMeasures && secondaryMeasures.children) {\n    const {\n      dataset: newDatasets,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor2D1M(dataset, commonDimensions, secondaryMeasures.children, {\n      foldMeasureValue: FoldSecondaryMeasureValue,\n    })\n    datasets.push(newDatasets)\n    foldInfoList.push(foldInfo)\n    unfoldInfoList.push(unfoldInfo)\n  }\n\n  const unfoldInfo: UnfoldInfo = {\n    groupName: unfoldInfoList[0].groupName,\n    groupId: unfoldInfoList[0].groupId,\n    colorItems: unfoldInfoList.flatMap((d) => d.colorItems),\n    colorIdMap: unfoldInfoList.reduce((prev, cur) => ({ ...prev, ...cur.colorIdMap }), {}),\n  }\n\n  return {\n    ...result,\n    dataset: datasets,\n    datasetReshapeInfo: [\n      {\n        id: '2D2M',\n        index: 0,\n        foldInfo: foldInfoList[0],\n        foldInfoList: foldInfoList,\n        unfoldInfo: unfoldInfo,\n      },\n    ],\n  }\n}\n","import { dataReshapeFor2D1M, FoldPrimaryMeasureValue, FoldSecondaryMeasureValue } from 'src/dataReshape'\nimport type {\n  AdvancedPipe,\n  Dataset,\n  DatasetReshapeInfo,\n  Dimension,\n  FoldInfo,\n  MeasureGroup,\n  UnfoldInfo,\n} from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为2个维度2个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo2D2M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  const commonDimensions = dimensions.filter((dim) => (dim as Dimension).location === 'dimension')\n\n  const datasetList: Dataset[] = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n\n  measures.forEach((measureGroup: MeasureGroup, index) => {\n    const measures = measureGroup.children || []\n    if (measures.length === 0) {\n      throw new Error('measures can not be empty')\n    }\n    if (measures.length > 2) {\n      throw new Error('measures can not be more than 2')\n    }\n\n    const datasets = []\n    const foldInfoList: FoldInfo[] = []\n    const unfoldInfoList: UnfoldInfo[] = []\n\n    const primaryMeasures = measures[0] as MeasureGroup\n    const secondaryMeasures = (measures[1] || measures[0]) as MeasureGroup\n\n    if (primaryMeasures && primaryMeasures.children) {\n      const {\n        dataset: newDatasets,\n        foldInfo,\n        unfoldInfo,\n      } = dataReshapeFor2D1M(dataset, commonDimensions, primaryMeasures.children, {\n        foldMeasureValue: `${FoldPrimaryMeasureValue}${index}`,\n      })\n      datasets.push(newDatasets)\n      foldInfoList.push(foldInfo)\n      unfoldInfoList.push(unfoldInfo)\n    }\n\n    if (secondaryMeasures && secondaryMeasures.children) {\n      const {\n        dataset: newDatasets,\n        foldInfo,\n        unfoldInfo,\n      } = dataReshapeFor2D1M(dataset, commonDimensions, secondaryMeasures.children, {\n        foldMeasureValue: `${FoldSecondaryMeasureValue}${index}`,\n      })\n      datasets.push(newDatasets)\n      foldInfoList.push(foldInfo)\n      unfoldInfoList.push(unfoldInfo)\n    }\n\n    datasetList.push(datasets.flat(2))\n\n    const unfoldInfo: UnfoldInfo = {\n      groupName: unfoldInfoList[0].groupName,\n      groupId: unfoldInfoList[0].groupId,\n      colorItems: unfoldInfoList.flatMap((d) => d.colorItems),\n      colorIdMap: unfoldInfoList.reduce((prev, cur) => ({ ...prev, ...cur.colorIdMap }), {}),\n    }\n\n    const reshapeInfo = {\n      id: `2D2M-${index}`,\n      index,\n      foldInfo: foldInfoList[0],\n      unfoldInfo: unfoldInfo,\n      foldInfoList: foldInfoList,\n    }\n\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n\n  return {\n    ...result,\n    dataset: datasetList,\n    datasetReshapeInfo,\n  }\n}\n","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingXYY: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions) {\n    return result\n  }\n\n  const xDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfoList, unfoldInfo } = cur as {\n      foldInfoList: FoldInfo[]\n      unfoldInfo: UnfoldInfo\n    }\n\n    const x = [isZeroDimension ? foldInfoList[0].measureName : xDimension?.id]\n    const y = foldInfoList.map((d) => d.measureValue)\n    const group = [unfoldInfo.groupId]\n    const color = [foldInfoList[0].measureName]\n\n    return [\n      ...prev,\n      {\n        x,\n        y,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import { pick } from 'remeda'\nimport type { AdvancedPipe, AdvancedVSeed, Config } from 'src/types'\n\nexport const dualAxisConfig: AdvancedPipe = (advancedVSeed, context) => {\n  const { vseed } = context\n  const { chartType } = vseed\n  const result = {\n    ...advancedVSeed,\n  }\n\n  const config = pick(vseed, [\n    // common\n    'backgroundColor',\n    'color',\n    'label',\n    'legend',\n    'tooltip',\n\n    // only for dualAxis\n    'dualChartType',\n    'primaryYAxis',\n    'secondaryYAxis',\n    'crosshairLine',\n  ]) as Config['dualAxis']\n\n  result.config = {\n    ...(result.config || {}),\n    [chartType]: {\n      ...config,\n    },\n  }\n\n  return result as AdvancedVSeed\n}\n","import type { IBarSeriesSpec, ILineSeriesSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initDualAxisPrimary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IBarSeriesSpec\n  const { advancedVSeed } = context\n  const { encoding, datasetReshapeInfo } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.id = `${datasetReshapeInfo[0].id}-primary-series`\n  result.type = 'bar'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.seriesField = encoding[0].group[0]\n  result.animation = true\n\n  return result\n}\n\nexport const initDualAxisSecondary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineSeriesSpec\n  const { advancedVSeed } = context\n  const { encoding, datasetReshapeInfo } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].group) {\n    return result\n  }\n\n  result.id = `${datasetReshapeInfo[0].id}-secondary-series`\n  result.type = 'line'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[1]\n  result.seriesField = encoding[0].group[0]\n\n  result.animation = true\n\n  return result\n}\n","import type { IBarSeriesSpec, ISeriesSpec } from '@visactor/vchart'\nimport type { DualChartType, SpecPipe } from 'src/types'\n\nexport const dualChartTypePrimary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISeriesSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { datasetReshapeInfo } = advancedVSeed\n  const index = datasetReshapeInfo[0].index\n\n  const config =\n    advancedVSeed.config?.[chartType as 'dualAxis']?.dualChartType ||\n    ({\n      primary: 'column',\n      secondary: 'line',\n    } as DualChartType)\n\n  const primary = Array.isArray(config) ? config[index].primary || config[0].primary : config.primary\n\n  switch (primary) {\n    case 'line': {\n      result.type = 'line'\n      break\n    }\n    case 'column': {\n      result.type = 'bar'\n      break\n    }\n    case 'columnParallel': {\n      const columnSpec = result as IBarSeriesSpec\n      if (Array.isArray(columnSpec.xField)) {\n        columnSpec.xField.push(datasetReshapeInfo[0].unfoldInfo.groupId)\n      } else if (columnSpec.xField) {\n        columnSpec.xField = [columnSpec.xField, datasetReshapeInfo[0].unfoldInfo.groupId]\n      }\n      columnSpec.type = 'bar'\n      break\n    }\n    // @ts-expect-error  'columnPercent' 和 'areaPercent' 会改变轴值域为[0,1], VTable不支持.\n    case 'columnPercent': {\n      result.type = 'bar'\n      result.percent = true\n      break\n    }\n    case 'area': {\n      result.type = 'area'\n      break\n    }\n    // @ts-expect-error  'columnPercent' 和 'areaPercent' 会改变轴值域为[0,1], VTable不支持.\n    case 'areaPercent': {\n      result.type = 'area'\n      result.percent = true\n      break\n    }\n    case 'scatter': {\n      result.type = 'scatter'\n      break\n    }\n    default:\n      result.type = primary\n  }\n\n  return result\n}\n\nexport const dualChartTypeSecondary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISeriesSpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { datasetReshapeInfo } = advancedVSeed\n  const config =\n    advancedVSeed.config?.[chartType as 'dualAxis']?.dualChartType ||\n    ({\n      primary: 'column',\n      secondary: 'line',\n    } as DualChartType)\n\n  const index = datasetReshapeInfo[0].index\n  const secondary = Array.isArray(config) ? config[index].secondary || config[0].secondary : config.secondary\n\n  switch (secondary) {\n    case 'line': {\n      result.type = 'line'\n      break\n    }\n    case 'column': {\n      result.type = 'bar'\n      break\n    }\n    case 'columnParallel': {\n      const columnSpec = result as IBarSeriesSpec\n      if (Array.isArray(columnSpec.xField)) {\n        columnSpec.xField.push(datasetReshapeInfo[0].unfoldInfo.groupId)\n      } else if (columnSpec.xField) {\n        columnSpec.xField = [columnSpec.xField, datasetReshapeInfo[0].unfoldInfo.groupId]\n      }\n      columnSpec.type = 'bar'\n      break\n    }\n    // @ts-expect-error  'columnPercent' 和 'areaPercent' 会改变轴值域为[0,1], VTable不支持.\n    case 'columnPercent': {\n      result.type = 'bar'\n      result.percent = true\n      break\n    }\n    case 'area': {\n      result.type = 'area'\n      break\n    }\n    // @ts-expect-error  'columnPercent' 和 'areaPercent' 会改变轴值域为[0,1], VTable不支持.\n    case 'areaPercent': {\n      result.type = 'area'\n      result.percent = true\n      break\n    }\n    case 'scatter': {\n      result.type = 'scatter'\n      break\n    }\n    default:\n      result.type = secondary\n  }\n\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { isPivotChart } from 'src/pipeline/utils'\nimport type { SpecPipe } from 'src/types'\n\nexport const datasetPrimary: SpecPipe = (spec, context) => {\n  const { advancedVSeed, vseed } = context\n  const { encoding, analysis, datasetReshapeInfo } = advancedVSeed\n  const orderMapping = analysis?.orderMapping || {}\n  const x = encoding[0]?.x?.[0]\n  const group = encoding[0]?.group?.[0]\n  const id = datasetReshapeInfo[0].id\n\n  const fields: Record<string, object> = {}\n\n  if (x) {\n    const order = orderMapping[x]\n    if (order) {\n      fields[x] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[x] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  if (group) {\n    const order = orderMapping[group]\n    if (order) {\n      fields[group] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[group] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  return {\n    ...spec,\n    data: {\n      id: `${id}-primary-dataset`,\n      // 透视表不使用 dataValues\n      values: isPivotChart(vseed) ? undefined : advancedVSeed.dataset,\n      fields: fields,\n    },\n  } as ISpec\n}\n\nexport const datasetSecondary: SpecPipe = (spec, context) => {\n  const { advancedVSeed, vseed } = context\n  const { encoding, analysis, datasetReshapeInfo } = advancedVSeed\n  const orderMapping = analysis?.orderMapping || {}\n  const x = encoding[0]?.x?.[0]\n  const group = encoding[0]?.group?.[0]\n  const id = datasetReshapeInfo[0].id\n\n  const fields: Record<string, object> = {}\n\n  if (x) {\n    const order = orderMapping[x]\n    if (order) {\n      fields[x] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[x] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  if (group) {\n    const order = orderMapping[group]\n    if (order) {\n      fields[group] = {\n        sortIndex: 0,\n        domain: order,\n        lockStatisticsByDomain: true,\n      }\n    } else {\n      fields[group] = {\n        sortIndex: 0,\n      }\n    }\n  }\n\n  return {\n    ...spec,\n    data: {\n      id: `${id}-secondary-dataset`,\n      // 透视表不使用 dataValues\n      values: isPivotChart(vseed) ? undefined : advancedVSeed.dataset,\n      fields: fields,\n    },\n  } as ISpec\n}\n","import type { ILineChartSpec } from '@visactor/vchart'\nimport type { ILineLikeLabelSpec } from '@visactor/vchart/esm/series/mixin/interface'\nimport { autoFormatter, createFormatter, findMeasureById } from '../../../../utils'\nimport type { Datum, FoldInfo, Label, SpecPipe } from 'src/types'\nimport { isEmpty, isNullish } from 'remeda'\n\nexport const labelPrimary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, locale } = advancedVSeed\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { label: Label }\n\n  if (!baseConfig || !baseConfig.label) {\n    return result\n  }\n\n  const foldInfoList = datasetReshapeInfo[0].foldInfoList as FoldInfo[]\n  const { measureId, measureValue } = foldInfoList[0]\n  const { label } = baseConfig\n  const { enable } = label\n\n  result.label = {\n    visible: enable,\n    formatMethod: (value: string, datum: Datum) => {\n      const result = []\n\n      const formatValue = (value: number) => {\n        const id = datum[measureId] as string\n        const measure = findMeasureById(measures, id)\n        if (!measure) {\n          return value\n        }\n\n        const { format = {}, autoFormat = true } = measure\n\n        if (!isEmpty(format)) {\n          const formatter = createFormatter(format)\n          return formatter(value)\n        }\n        if (autoFormat) {\n          return autoFormatter(value, locale)\n        }\n        return String(value)\n      }\n\n      result.push(formatValue(datum[measureValue] as number))\n\n      return result.join(' ')\n    },\n  } as ILineLikeLabelSpec\n  return result\n}\n\nexport const labelSecondary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, locale } = advancedVSeed\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { label: Label }\n\n  if (!baseConfig || !baseConfig.label) {\n    return result\n  }\n  if (isNullish(datasetReshapeInfo[0].foldInfoList?.[1])) {\n    return result\n  }\n  const foldInfoList = datasetReshapeInfo[0].foldInfoList as FoldInfo[]\n\n  const { measureId, measureValue } = foldInfoList[1]\n  const { label } = baseConfig\n  const { enable } = label\n\n  result.label = {\n    visible: enable,\n    formatMethod: (value: string, datum: Datum) => {\n      const result = []\n\n      const formatValue = (value: number) => {\n        const id = datum[measureId] as string\n        const measure = findMeasureById(measures, id)\n        if (!measure) {\n          return value\n        }\n\n        const { format = {}, autoFormat = true } = measure\n\n        if (!isEmpty(format)) {\n          const formatter = createFormatter(format)\n          return formatter(value)\n        }\n        if (autoFormat) {\n          return autoFormatter(value, locale)\n        }\n        return String(value)\n      }\n\n      result.push(formatValue(datum[measureValue] as number))\n\n      return result.join(' ')\n    },\n  } as ILineLikeLabelSpec\n  return result\n}\n","import { isEmpty, isNullish } from 'remeda'\nimport { autoFormatter, createFormatter, findMeasureById } from '../../../../utils'\nimport type { Datum, FoldInfo, SpecPipe, Tooltip, UnfoldInfo } from 'src/types'\n\nexport const tooltipPrimary: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, chartType, locale, dimensions } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { tooltip: Tooltip }\n  const { tooltip = { enable: true } } = baseConfig\n  const { enable } = tooltip\n\n  const foldInfoList = datasetReshapeInfo[0].foldInfoList as FoldInfo[]\n  const unfoldInfo = datasetReshapeInfo[0].unfoldInfo\n\n  const { measureId, measureValue, measureName } = foldInfoList[0]\n  const { groupName } = unfoldInfo\n\n  result.tooltip = {\n    visible: enable,\n\n    mark: {\n      title: {\n        visible: true,\n      },\n      content: [\n        ...dimensions.map((item) => ({\n          visible: true,\n          hasShape: true,\n          shapeType: 'rectRound',\n          key: (datum: unknown) => {\n            if (item.alias || item.id) {\n              return item.alias || item.id\n            }\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n          value: (datum: unknown) => {\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n        })),\n        {\n          visible: true,\n          hasShape: true,\n          key: (datum) => (datum && (datum[measureName || groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n        },\n      ],\n    },\n    dimension: {\n      content: [\n        {\n          visible: true,\n          key: (datum) => (datum && (datum[groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n          shapeType: 'rectRound',\n        },\n      ],\n    },\n  }\n  return result\n}\n\nexport const tooltipSecondary: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { measures, datasetReshapeInfo, chartType, locale, dimensions } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { tooltip: Tooltip }\n  const { tooltip = { enable: true } } = baseConfig\n  const { enable } = tooltip\n\n  if (isNullish(datasetReshapeInfo[0].foldInfoList?.[1])) {\n    return result\n  }\n\n  const foldInfoList = datasetReshapeInfo[0].foldInfoList as FoldInfo[]\n  const unfoldInfo = datasetReshapeInfo[0].unfoldInfo as UnfoldInfo\n  const { measureId, measureValue, measureName } = foldInfoList[1]\n  const { groupName } = unfoldInfo\n\n  result.tooltip = {\n    visible: enable,\n\n    mark: {\n      title: {\n        visible: true,\n      },\n      content: [\n        ...dimensions.map((item) => ({\n          visible: true,\n          hasShape: true,\n          shapeType: 'rectRound',\n          key: (datum: unknown) => {\n            if (item.alias || item.id) {\n              return item.alias || item.id\n            }\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n          value: (datum: unknown) => {\n            return (datum as Datum) && ((datum as Datum)[item.id] as string)\n          },\n        })),\n        {\n          visible: true,\n          hasShape: true,\n          key: (datum) => (datum && (datum[measureName || groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n        },\n      ],\n    },\n    dimension: {\n      content: [\n        {\n          visible: true,\n          key: (datum) => (datum && (datum[groupName] as string)) || '',\n          value: (datum) => {\n            if (!datum) {\n              return ''\n            }\n            const value = datum[measureValue] as string | number\n            const id = datum[measureId] as string\n            const measure = findMeasureById(measures, id)\n            if (!measure) {\n              return String(value)\n            }\n\n            const { format = {}, autoFormat = true } = measure\n\n            if (!isEmpty(format)) {\n              const formatter = createFormatter(format)\n              return formatter(value)\n            }\n            if (autoFormat) {\n              return autoFormatter(value, locale)\n            }\n            return String(value)\n          },\n          shapeType: 'rectRound',\n        },\n      ],\n    },\n  }\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { LINEAR_AXIS_INNER_OFFSET_TOP } from '../../../../utils/constant'\nimport { autoFormatter } from '../../../../utils'\nimport type { SpecPipe, YLinearAxis } from 'src/types'\nimport { isEmpty } from 'remeda'\n\nexport const yLinearPrimary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { locale, datasetReshapeInfo } = advancedVSeed\n  // TODO: default config missing\n  const index = datasetReshapeInfo[0].index\n  const primaryYAxis = advancedVSeed.config?.[chartType as 'dualAxis']?.primaryYAxis as YLinearAxis | YLinearAxis[]\n  const config = Array.isArray(primaryYAxis) ? primaryYAxis[index] || primaryYAxis[0] : primaryYAxis\n\n  if (datasetReshapeInfo[0].foldInfoList?.[0] && isEmpty(datasetReshapeInfo[0].foldInfoList[0].foldMap)) {\n    return result\n  }\n  const id = `${datasetReshapeInfo[0].id}-primary-axis`\n  const seriesId = `${datasetReshapeInfo[0].id}-primary-series`\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        id,\n        seriesId,\n        type: 'linear',\n        orient: 'left',\n        sync: {\n          axisId: `${datasetReshapeInfo[0].id}-secondary-axis`,\n          tickAlign: false,\n          zeroAlign: true,\n        },\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n\n    zero,\n    nice,\n    inverse,\n    max,\n    min,\n    log,\n    logBase = 10,\n  } = config\n\n  const linearAxis = {\n    visible,\n    id,\n    seriesId,\n    sync: {\n      axisId: `${datasetReshapeInfo[0].id}-secondary-axis`,\n      tickAlign: false,\n      zeroAlign: true,\n    },\n\n    type: log ? 'log' : 'linear',\n    base: logBase,\n    orient: 'left',\n    nice,\n    zero: log ? false : zero,\n    inverse,\n    max,\n    min,\n    label: {\n      visible: label?.visible,\n      formatMethod: (value: string) => {\n        return autoFormatter(value, locale)\n      },\n      style: {\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    innerOffset: {\n      top: LINEAR_AXIS_INNER_OFFSET_TOP,\n      // bottom: LINEAR_AXIS_INNER_OFFSET_TOP,\n    },\n  }\n\n  result.axes = [...result.axes, linearAxis] as ISpec['axes']\n\n  return result\n}\n","import type { ISpec } from '@visactor/vchart'\nimport { LINEAR_AXIS_INNER_OFFSET_TOP } from '../../../../utils/constant'\nimport { autoFormatter } from '../../../../utils'\nimport type { SpecPipe, YLinearAxis } from 'src/types'\nimport { isNullish } from 'remeda'\n\nexport const yLinearSecondary: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ISpec\n  const { advancedVSeed, vseed } = context\n  const { chartType } = vseed\n  const { locale, datasetReshapeInfo } = advancedVSeed\n  // TODO: default config missing\n  const index = datasetReshapeInfo[0].index\n  const secondaryYAxis = advancedVSeed.config?.[chartType as 'dualAxis']?.secondaryYAxis as YLinearAxis | YLinearAxis[]\n  const config = Array.isArray(secondaryYAxis) ? secondaryYAxis[index] || secondaryYAxis[0] : secondaryYAxis\n\n  if (isNullish(datasetReshapeInfo[0].foldInfoList?.[1])) {\n    return result\n  }\n\n  const id = `${datasetReshapeInfo[0].id}-secondary-axis`\n  const seriesId = `${datasetReshapeInfo[0].id}-secondary-series`\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  if (!config) {\n    result.axes = [\n      ...result.axes,\n      {\n        visible: true,\n        id,\n        seriesId,\n        type: 'linear',\n        orient: 'right',\n      },\n    ] as ISpec['axes']\n    return result\n  }\n\n  const {\n    visible = true,\n    label,\n    tick,\n    title,\n    grid,\n    line,\n\n    zero,\n    nice,\n    inverse,\n    max,\n    min,\n    log,\n    logBase = 10,\n  } = config\n\n  const linearAxis = {\n    visible,\n    id,\n    seriesId,\n    type: log ? 'log' : 'linear',\n    base: logBase,\n    orient: 'right',\n    nice,\n    zero: log ? false : zero,\n    inverse,\n    max,\n    min,\n    label: {\n      visible: label?.visible,\n      formatMethod: (value: string) => {\n        return autoFormatter(value, locale)\n      },\n      style: {\n        fill: label?.labelColor,\n        angle: label?.labelAngle,\n        fontSize: label?.labelFontSize,\n        fontWeight: label?.labelFontWeight,\n      },\n    },\n    title: {\n      visible: title?.visible,\n      text: title?.titleText,\n      style: {\n        fill: title?.titleColor,\n        fontSize: title?.titleFontSize,\n        fontWeight: title?.titleFontWeight,\n      },\n    },\n    tick: {\n      visible: tick?.visible,\n      tickSize: tick?.tickSize,\n      inside: tick?.tickInside,\n      style: {\n        stroke: tick?.tickColor,\n      },\n    },\n    grid: {\n      visible: grid?.visible,\n      style: {\n        lineWidth: grid?.gridWidth,\n        stroke: grid?.gridColor,\n      },\n    },\n    domainLine: {\n      visible: line?.visible,\n      style: {\n        lineWidth: line?.lineWidth,\n        stroke: line?.lineColor,\n      },\n    },\n    innerOffset: {\n      top: LINEAR_AXIS_INNER_OFFSET_TOP,\n      // bottom: LINEAR_AXIS_INNER_OFFSET_TOP,\n    },\n  }\n\n  result.axes = [...result.axes, linearAxis] as ISpec['axes']\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  xBand,\n  backgroundColor,\n  discreteLegend,\n  color,\n  initPivot,\n  datasetPivot,\n  pivotDiscreteLegend,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  lineStyle,\n  pointStateDimensionHover,\n  progressive,\n  datasetPrimary,\n  datasetSecondary,\n  areaStyle,\n  barStyle,\n  verticalCrosshairRect,\n  yLinearSecondary,\n  initDualAxisPrimary,\n  initDualAxisSecondary,\n  labelPrimary,\n  labelSecondary,\n  tooltipPrimary,\n  tooltipSecondary,\n  yLinearPrimary,\n  dualChartTypePrimary,\n  dualChartTypeSecondary,\n  seriesDualAxis,\n} from '../pipes'\n\nconst dualAxis: SpecPipeline = [\n  seriesDualAxis(\n    [\n      initDualAxisPrimary,\n      dualChartTypePrimary,\n      datasetPrimary,\n      labelPrimary,\n      tooltipPrimary,\n      progressive,\n\n      barStyle,\n      pointStyle,\n      pointStateDimensionHover,\n      lineStyle,\n      areaStyle,\n    ],\n    [\n      initDualAxisSecondary,\n      dualChartTypeSecondary,\n      datasetSecondary,\n      labelSecondary,\n      tooltipSecondary,\n      progressive,\n\n      barStyle,\n      pointStyle,\n      pointStateDimensionHover,\n      lineStyle,\n      areaStyle,\n    ],\n  ),\n  xBand,\n  yLinearPrimary,\n  yLinearSecondary,\n\n  color,\n  backgroundColor,\n  discreteLegend,\n\n  verticalCrosshairRect,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotDualAxis: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    seriesDualAxis(\n      [\n        initDualAxisPrimary,\n        dualChartTypePrimary,\n        datasetPrimary,\n        labelPrimary,\n        tooltipPrimary,\n        progressive,\n\n        barStyle,\n        pointStyle,\n        pointStateDimensionHover,\n        lineStyle,\n        areaStyle,\n      ],\n      [\n        initDualAxisSecondary,\n        dualChartTypeSecondary,\n        datasetSecondary,\n        labelSecondary,\n        tooltipSecondary,\n        progressive,\n\n        barStyle,\n        pointStyle,\n        pointStateDimensionHover,\n        lineStyle,\n        areaStyle,\n      ],\n    ),\n    xBand,\n    yLinearPrimary,\n    yLinearSecondary,\n    color,\n    backgroundColor,\n    verticalCrosshairRect,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const dualAxisSpecPipeline: SpecPipeline = [pivotAdapter(dualAxis, pivotDualAxis)]\n","import type { Dataset, Dimension, FoldInfo, Measure, UnfoldInfo } from 'src/types'\nimport { foldMeasures } from './foldMeasures'\nimport {\n  UnfoldDimensionGroup,\n  FoldMeasureId,\n  FoldMeasureName,\n  FoldMeasureValue,\n  UnfoldDimensionGroupId,\n} from './constant'\nimport { unfoldDimensions } from './unfoldDimensions'\nimport { i18n } from '../i18n'\n\nconst emptyReshapeResult = {\n  dataset: [],\n  foldInfo: {\n    foldMap: {},\n    measureId: '',\n    measureName: '',\n    measureValue: '',\n  },\n  unfoldInfo: {\n    groupName: '',\n    groupId: '',\n    colorItems: [],\n    colorIdMap: {},\n  },\n}\n/**\n * 数据重塑为1个维度1个指标\n * @param dataset\n * @param dimensions\n * @param measures\n * @returns\n */\nexport const dataReshapeFor1D1M = (\n  dataset: Dataset,\n  dimensions: Dimension[],\n  measures: Measure[],\n  options?: {\n    foldMeasureId?: string\n    foldMeasureName?: string\n    foldMeasureValue?: string\n    unfoldDimensionGroup?: string\n    unfoldDimensionGroupId?: string\n  },\n): {\n  dataset: Dataset\n  foldInfo: FoldInfo\n  unfoldInfo: UnfoldInfo\n} => {\n  const {\n    foldMeasureId = FoldMeasureId,\n    foldMeasureName = FoldMeasureName,\n    foldMeasureValue = FoldMeasureValue,\n    unfoldDimensionGroup = UnfoldDimensionGroup,\n    unfoldDimensionGroupId = UnfoldDimensionGroupId,\n  } = options || {}\n\n  if (dimensions.length === 0 && measures.length === 0) {\n    return emptyReshapeResult\n  }\n\n  // 合并所有指标为1个指标\n  const { dataset: foldedDataset, foldInfo } = foldMeasures(\n    dataset,\n    measures,\n    foldMeasureId,\n    foldMeasureName,\n    foldMeasureValue,\n  )\n\n  if (dimensions.length === 0) {\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      [{ id: foldMeasureName, alias: i18n`指标名称`, location: 'dimension' }],\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  } else {\n    const dims =\n      measures.length === 1\n        ? ([...dimensions] as Dimension[])\n        : ([...dimensions, { id: foldMeasureName, alias: i18n`指标名称`, location: 'dimension' }] as Dimension[])\n    // 展开指定的维度为指标\n    const { dataset: finalDataset, unfoldInfo } = unfoldDimensions(\n      foldedDataset,\n      dims,\n      [{ id: foldMeasureValue, alias: i18n`指标值` }],\n      0,\n      unfoldDimensionGroup,\n      unfoldDimensionGroupId,\n      foldMeasureId,\n    )\n    return { dataset: finalDataset, foldInfo, unfoldInfo }\n  }\n}\n","import { dataReshapeFor1D1M } from 'src/dataReshape'\nimport type { AdvancedPipe } from 'src/types'\n\n/**\n * 数据重塑, 将任意维度、任意指标, 重塑为2个维度1个指标.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const reshapeTo1D1M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { dimensions, measures } = advancedVSeed\n  if (!measures || !dimensions || !dataset) {\n    return result\n  }\n\n  if (measures.length === 0) {\n    throw new Error('measures can not be empty')\n  }\n\n  const { dataset: newDatasets, foldInfo, unfoldInfo } = dataReshapeFor1D1M(dataset, dimensions, measures)\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: [\n      {\n        id: '1D1M',\n         index: 0,\n        foldInfo,\n        unfoldInfo,\n      },\n    ],\n  }\n}\n","import { FoldMeasureId, FoldMeasureName, FoldMeasureValue, UnfoldDimensionGroup } from 'src/dataReshape/constant'\nimport { dataReshapeFor1D1M } from 'src/dataReshape'\nimport type { AdvancedPipe, Dataset, DatasetReshapeInfo, Dimensions, MeasureGroup } from 'src/types'\n\n/**\n * 数据重塑为透视结构, 如果存在指标分组, 则将数据按组划分. 如果存在行列维度, 则生成行列树结构.\n * @param advancedVSeed\n * @param context\n * @returns\n */\nexport const pivotReshapeTo1D1M: AdvancedPipe = (advancedVSeed, context) => {\n  const result = { ...advancedVSeed }\n  const { vseed } = context\n  const { dataset } = vseed\n  const { measures } = advancedVSeed\n  const dimensions = advancedVSeed.dimensions as Dimensions\n\n  if (!measures || !dimensions) {\n    return result\n  }\n\n  const measureGroups: MeasureGroup[] = []\n  if (measures) {\n    measures.forEach((measure: MeasureGroup) => {\n      if (measure.children && measure.children.length > 0) {\n        measureGroups.push(measure)\n      }\n    })\n  }\n  const newDatasets: Dataset = []\n  const datasetReshapeInfo: DatasetReshapeInfo = []\n  measureGroups.forEach((measureGroup, index) => {\n    const measures = measureGroup.children\n    if (!measures) {\n      return\n    }\n\n    const commonDimensions = dimensions.filter((dim) => dim.location === 'dimension')\n    const groupId = measureGroup.id\n    const {\n      dataset: newSubDataset,\n      foldInfo,\n      unfoldInfo,\n    } = dataReshapeFor1D1M(dataset, commonDimensions, measures, {\n      foldMeasureId: FoldMeasureId,\n      foldMeasureName: FoldMeasureName,\n      foldMeasureValue: FoldMeasureValue + groupId,\n      unfoldDimensionGroup: UnfoldDimensionGroup,\n    })\n    const reshapeInfo = {\n      id: groupId,\n      index,\n      foldInfo,\n      unfoldInfo,\n    }\n    newDatasets.push(newSubDataset)\n    datasetReshapeInfo.push(reshapeInfo)\n  })\n\n  return {\n    ...result,\n    dataset: newDatasets,\n    datasetReshapeInfo: datasetReshapeInfo,\n  }\n}\n","import type { AdvancedPipe, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingPie: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo } = advancedVSeed\n  if (!datasetReshapeInfo) {\n    return result\n  }\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const radius = [foldInfo.measureValue]\n    const angle = [unfoldInfo.groupId]\n    const group = [unfoldInfo.groupId]\n    const color = [unfoldInfo.groupId]\n\n    return [\n      ...prev,\n      {\n        angle,\n        radius,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  reshapeTo1D1M,\n  pivotReshapeTo1D1M,\n  encodingPie,\n  pieConfig,\n  annotation,\n} from '../pipes'\n\nexport const pieAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo1D1M], [pivotReshapeTo1D1M]),\n  encodingPie,\n  pieConfig,\n  theme,\n  annotation\n]\n","import type { IPieChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initPie: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IPieChartSpec\n  const { advancedVSeed } = context\n  const { encoding, dataset } = advancedVSeed\n\n  if (!encoding[0].angle || !encoding[0].radius || !encoding[0].group) {\n    return result\n  }\n\n  const showStroke = dataset.length <= 30\n\n  result.type = 'pie'\n  result.outerRadius = 0.8\n  result.innerRadius = 0\n  result.valueField = encoding[0].radius[0]\n  result.categoryField = encoding[0].angle[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.pie = {\n    style: {\n      stroke: '#ffffff',\n      lineWidth: showStroke ? 1 : 0,\n      centerOffset: 0,\n    },\n    state: {\n      hover: {\n        outerRadius: result.outerRadius * 1.1,\n      },\n    },\n  }\n  result.animation = true\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  backgroundColor,\n  color,\n  datasetXY,\n  datasetPivot,\n  initPie,\n  initPivot,\n  label,\n  discreteLegend,\n  pivotAdapter,\n  pivotColumnDimensions,\n  pivotGridStyle,\n  pivotIndicators,\n  pivotIndicatorsAsRow,\n  pivotDiscreteLegend,\n  pivotRowDimensions,\n  tooltip,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  progressive,\n} from '../pipes'\n\nconst pie: SpecPipeline = [\n  initPie,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  label,\n  tooltip,\n  discreteLegend,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotPie: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initPie,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    label,\n    tooltip,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const pieSpecPipeline: SpecPipeline = [pivotAdapter(pie, pivotPie)]\n","import { pieAdvancedPipeline, pieSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerPie = () => {\n  Builder._advancedPipelineMap['pie'] = pieAdvancedPipeline\n  Builder._specPipelineMap['pie'] = pieSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  reshapeTo1D1M,\n  pivotReshapeTo1D1M,\n  encodingPie,\n  annotation,\n  donutConfig,\n} from '../pipes'\n\nexport const donutAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo1D1M], [pivotReshapeTo1D1M]),\n  encodingPie,\n  donutConfig,\n  theme,\n  annotation\n]\n","import type { IPieChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initDonut: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IPieChartSpec\n  const { advancedVSeed } = context\n  const { encoding, dataset } = advancedVSeed\n\n  if (!encoding[0].angle || !encoding[0].radius || !encoding[0].group) {\n    return result\n  }\n  const showStroke = dataset.length <= 30\n\n  result.type = 'pie'\n  result.outerRadius = 0.8\n  result.innerRadius = result.outerRadius * 0.8\n  result.valueField = encoding[0].radius[0]\n  result.categoryField = encoding[0].angle[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n\n  result.pie = {\n    style: {\n      stroke: '#ffffff',\n      lineWidth: showStroke ? 1 : 0,\n    },\n    state: {\n      hover: {\n        outerRadius: result.outerRadius * 1.1,\n      },\n    },\n  }\n\n  result.animation = true\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  backgroundColor,\n  color,\n  datasetXY,\n  datasetPivot,\n  initDonut,\n  initPivot,\n  label,\n  discreteLegend,\n  pivotAdapter,\n  pivotColumnDimensions,\n  pivotGridStyle,\n  pivotIndicators,\n  pivotIndicatorsAsRow,\n  pivotDiscreteLegend,\n  pivotRowDimensions,\n  tooltip,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  progressive,\n} from '../pipes'\n\nconst donut: SpecPipeline = [\n  initDonut,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  label,\n  tooltip,\n  discreteLegend,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotDonut: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initDonut,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    label,\n    tooltip,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const donutSpecPipeline: SpecPipeline = [pivotAdapter(donut, pivotDonut)]\n","import { donutAdvancedPipeline, donutSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerDonut = () => {\n  Builder._advancedPipelineMap['donut'] = donutAdvancedPipeline\n  Builder._specPipelineMap['donut'] = donutSpecPipeline\n}","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingRose: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions, measures } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions || !measures) {\n    return result\n  }\n\n  const angleDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const is1D1M = dimensions.length === 1 && measures.length === 1\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const radius = [foldInfo.measureValue]\n    const angle = [isZeroDimension ? foldInfo.measureName : angleDimension?.id]\n    const group = [is1D1M ? angleDimension?.id : unfoldInfo.groupId]\n    const color = [is1D1M ? angleDimension?.id : unfoldInfo.groupId]\n\n    return [\n      ...prev,\n      {\n        angle,\n        radius,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  markStyle,\n  annotation,\n  roseConfig,\n  encodingRose,\n  pivotReshapeTo2D1M,\n} from '../pipes'\n\nexport const roseAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingRose,\n  roseConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initRose: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { encoding, dataset, datasetReshapeInfo } = advancedVSeed\n  const { foldInfo } = datasetReshapeInfo[0]\n  if (!encoding[0].radius || !encoding[0].angle || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'rose'\n  result.categoryField = encoding[0].angle[0]\n  result.valueField = encoding[0].radius[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.outerRadius = 0.9\n  result.innerRadius = 0\n\n  const hasNegativeValue = dataset.flat().find((d) => d[foldInfo.measureValue] < 0)\n  if (hasNegativeValue) {\n    result.innerRadius = 0.05\n  }\n\n  result.rose = {\n    style: {\n      stroke: '#ffffff',\n      lineWidth: 1,\n    },\n    state: {\n      hover: {\n        lineWidth: 1,\n        fillOpacity: 0.6,\n      },\n    },\n  }\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n\n  return result\n}\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const radiusAxis: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { dimensions, measures } = advancedVSeed\n\n  if (!dimensions || !measures) {\n    return result\n  }\n\n  const is0D = dimensions.length === 0\n  const is1M1D = dimensions.length === 1 && measures.length === 1\n  const showAxis = !(is0D || is1M1D)\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  result.axes.push({\n    orient: 'radius',\n    visible: showAxis,\n    zero: true,\n    nice: showAxis ? true : false,\n    grid: {\n      visible: showAxis,\n    },\n    tick: {\n      visible: showAxis,\n    },\n    label: {\n      visible: showAxis,\n    },\n    domainLine: {\n      visible: showAxis,\n    },\n  })\n\n  return result\n}\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const angleAxis: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { dimensions, measures } = advancedVSeed\n\n  if (!dimensions || !measures) {\n    return result\n  }\n\n  const is0D = dimensions.length === 0\n  const is1M1D = dimensions.length === 1 && measures.length === 1\n  const showAxis = !(is0D || is1M1D)\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  result.axes.push({\n    orient: 'angle',\n    visible: showAxis,\n    zero: true,\n    nice: showAxis ? true : false,\n    paddingInner: showAxis ? [0.15, 0.1] : [0, 0],\n    paddingOuter: showAxis ? [0.075, 0.1] : [0, 0],\n    grid: {\n      visible: showAxis,\n    },\n    domainLine: {\n      visible: showAxis,\n    },\n    tick: {\n      visible: showAxis,\n    },\n  })\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotAdapter,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  stackInverse,\n  verticalCrosshairRect,\n  stackCornerRadius,\n  initRose,\n  radiusAxis,\n  angleAxis,\n  progressive,\n} from '../pipes'\n\nconst rose: SpecPipeline = [\n  initRose,\n  stackCornerRadius,\n  stackInverse,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  radiusAxis,\n  angleAxis,\n  label,\n  tooltip,\n  verticalCrosshairRect,\n  discreteLegend,\n]\n\nconst pivotRose: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initRose,\n    stackCornerRadius,\n    stackInverse,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    radiusAxis,\n    angleAxis,\n    label,\n    tooltip,\n    verticalCrosshairRect,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const roseSpecPipeline = [pivotAdapter(rose, pivotRose)]\n","import { roseAdvancedPipeline, roseSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerRose = () => {\n  Builder._advancedPipelineMap['rose'] = roseAdvancedPipeline\n  Builder._specPipelineMap['rose'] = roseSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  pivotReshapeTo2D1M,\n  markStyle,\n  annotation,\n  roseParallelConfig,\n  encodingRose,\n} from '../pipes'\n\nexport const roseParallelAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingRose,\n  roseParallelConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initRoseParallel: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { encoding, datasetReshapeInfo, dataset } = advancedVSeed\n  const { unfoldInfo, foldInfo } = datasetReshapeInfo[0]\n\n  if (!encoding[0].radius || !encoding[0].angle || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'rose'\n  result.categoryField = [encoding[0].angle[0], unfoldInfo.groupId]\n  result.valueField = encoding[0].radius[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n\n  result.outerRadius = 0.9\n  result.innerRadius = 0\n\n  const hasNegativeValue = dataset.flat().find((d) => d[foldInfo.measureValue] < 0)\n  if (hasNegativeValue) {\n    result.innerRadius = 0.05\n  }\n\n  result.rose = {\n    style: {\n      stroke: '#ffffff',\n      lineWidth: 1,\n    },\n    state: {\n      hover: {\n        lineWidth: 1,\n        fillOpacity: 0.6,\n      },\n    },\n  }\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  pivotIndicators,\n  initPivot,\n  datasetPivot,\n  pivotAdapter,\n  pivotDiscreteLegend,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n  verticalCrosshairRect,\n  stackCornerRadius,\n  initRoseParallel,\n  radiusAxis,\n  angleAxis,\n  progressive,\n} from '../pipes'\n\nconst roseParallel: SpecPipeline = [\n  initRoseParallel,\n  stackCornerRadius,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  radiusAxis,\n  angleAxis,\n  label,\n  tooltip,\n  discreteLegend,\n  verticalCrosshairRect,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationAreaBand,\n]\n\nconst pivotRoseParallel: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initRoseParallel,\n    stackCornerRadius,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    radiusAxis,\n    angleAxis,\n    label,\n    tooltip,\n    verticalCrosshairRect,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationAreaBand,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const roseParallelSpecPipeline: SpecPipeline = [pivotAdapter(roseParallel, pivotRoseParallel)]\n","import { roseParallelAdvancedPipeline, roseParallelSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerRoseParallel = () => {\n  Builder._advancedPipelineMap['roseParallel'] = roseParallelAdvancedPipeline\n  Builder._specPipelineMap['roseParallel'] = roseParallelSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  annotation,\n  markStyle,\n  sortLegend,\n  radarConfig,\n  encodingAR,\n  reshapeTo2D1M0Name,\n  pivotReshapeTo2D1M0Name,\n} from '../pipes'\n\nexport const radarAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M0Name], [pivotReshapeTo2D1M0Name]),\n  encodingAR,\n  // sortXBandAxis,\n  sortLegend,\n  radarConfig,\n  theme,\n  markStyle,\n  annotation,\n]\n","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingAR: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions, measures } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions || !measures) {\n    return result\n  }\n\n  const angleDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const angle = [isZeroDimension ? foldInfo.measureName : angleDimension?.id]\n    const radius = [foldInfo.measureValue]\n    const group = [unfoldInfo.groupId]\n    const color = [unfoldInfo.groupId]\n\n    return [\n      ...prev,\n      {\n        angle,\n        radius,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { IRadarChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initRadar: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRadarChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].angle || !encoding[0].radius || !encoding[0].group) {\n    return result\n  }\n\n  result.type = 'radar'\n  result.angleField = encoding[0].angle[0]\n  result.radiusField = encoding[0].radius[0]\n  result.seriesField = encoding[0].group[0]\n  result.padding = 0\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n  return result\n}\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const radarAngleAxis: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { dimensions, measures } = advancedVSeed\n\n  if (!dimensions || !measures) {\n    return result\n  }\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  result.axes.push({\n    orient: 'angle',\n    visible: true,\n    zero: true,\n    nice: true,\n    grid: {\n      visible: true,\n    },\n    domainLine: {\n      visible: true,\n    },\n    tick: {\n      visible: true,\n    },\n  })\n\n  return result\n}\n","import type { IRoseChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const radarRadiusAxis: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IRoseChartSpec\n  const { advancedVSeed } = context\n  const { dimensions, measures } = advancedVSeed\n\n  if (!dimensions || !measures) {\n    return result\n  }\n\n  if (!result.axes) {\n    result.axes = []\n  }\n\n  result.axes.push({\n    orient: 'radius',\n    visible: true,\n    zero: true,\n    nice: true,\n    grid: {\n      visible: true,\n    },\n    tick: {\n      visible: true,\n    },\n    label: {\n      visible: true,\n    },\n    domainLine: {\n      visible: true,\n    },\n  })\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  backgroundColor,\n  label,\n  tooltip,\n  discreteLegend,\n  color,\n  initPivot,\n  datasetPivot,\n  pivotDiscreteLegend,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  pointStyle,\n  lineStyle,\n  verticalCrosshairLine,\n  pointStateDimensionHover,\n  initRadar,\n  areaStyle,\n  radarAngleAxis,\n  radarRadiusAxis,\n  progressive,\n} from '../pipes'\n\nconst radar: SpecPipeline = [\n  initRadar,\n  color,\n  backgroundColor,\n  datasetXY,\n  progressive,\n  radarAngleAxis,\n  radarRadiusAxis,\n  label,\n  tooltip,\n  verticalCrosshairLine,\n  discreteLegend,\n  pointStyle,\n  pointStateDimensionHover,\n  lineStyle,\n  areaStyle,\n  // annotationPoint,\n  // annotationVerticalLine,\n  // annotationHorizontalLine,\n  // annotationArea,\n]\n\nconst pivotRadar: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initRadar,\n    color,\n    backgroundColor,\n    datasetXY,\n    progressive,\n    radarAngleAxis,\n    radarRadiusAxis,\n    label,\n    tooltip,\n    verticalCrosshairLine,\n    pointStyle,\n    pointStateDimensionHover,\n    lineStyle,\n    areaStyle,\n    // annotationPoint,\n    // annotationVerticalLine,\n    // annotationHorizontalLine,\n    // annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n  pivotDiscreteLegend,\n]\n\nexport const radarSpecPipeline: SpecPipeline = [pivotAdapter(radar, pivotRadar)]\n","import { radarAdvancedPipeline, radarSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerRadar = () => {\n  Builder._advancedPipelineMap['radar'] = radarAdvancedPipeline\n  Builder._specPipelineMap['radar'] = radarSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  theme,\n  pivotAdapter,\n  reshapeTo1D1M,\n  pivotReshapeTo1D1M,\n  annotation,\n  encodingFunnel,\n  funnelConfig,\n} from '../pipes'\n\nexport const funnelAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo1D1M], [pivotReshapeTo1D1M]),\n  encodingFunnel,\n  funnelConfig,\n  theme,\n  annotation,\n]\n","import type { AdvancedPipe, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingFunnel: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo } = advancedVSeed\n  if (!datasetReshapeInfo) {\n    return result\n  }\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const size = [foldInfo.measureValue]\n    const group = [unfoldInfo.groupId]\n    const color = [foldInfo.measureValue]\n\n    return [\n      ...prev,\n      {\n        size,\n        group,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { IFunnelChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initFunnel: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IFunnelChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].size || !encoding[0].group || !encoding[0].color) {\n    return result\n  }\n\n  result.type = 'funnel'\n  result.valueField = encoding[0].size[0]\n  result.categoryField = encoding[0].group[0]\n  result.padding = 0\n  result.isTransform = true\n  result.shape = 'rect'\n  result.maxSize = '75%'\n  result.minSize = '10%'\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.funnel = {\n    style: {\n      cornerRadius: 4,\n      fill: {\n        field: encoding[0].color[0],\n        scale: 'color',\n      },\n    },\n    state: {\n      hover: {\n        fillOpacity: 0.6,\n      },\n    },\n  }\n  result.transformLabel = {\n    visible: true,\n  }\n\n  result.animation = true\n\n  return result\n}\n","import type { ILineChartSpec } from '@visactor/vchart'\nimport type { Color, SpecPipe } from 'src/types'\n\nexport const linearColor: SpecPipe = (spec, context) => {\n  const result = { ...spec } as ILineChartSpec\n  const { advancedVSeed } = context\n  const { datasetReshapeInfo, chartType, encoding } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { color: Color }\n\n  if (!baseConfig || !baseConfig.color) {\n    return result\n  }\n\n  const { color } = baseConfig\n  const { colorScheme } = color\n\n  result.color = {\n    type: 'linear',\n    domain: [\n      {\n        dataId: datasetReshapeInfo[0].id,\n        fields: encoding?.[0]?.color,\n      },\n    ],\n    range: colorScheme,\n  } as ILineChartSpec['color']\n  return result\n}\n","import type { Legend, SpecPipe } from 'src/types'\n\nexport const colorLegend: SpecPipe = (spec, context) => {\n  const result = { ...spec }\n  const { advancedVSeed } = context\n  const { chartType } = advancedVSeed\n  const baseConfig = advancedVSeed.config[chartType] as { legend: Legend }\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].color) {\n    return result\n  }\n\n  if (!baseConfig || !baseConfig.legend) {\n    return result\n  }\n\n  const { legend } = baseConfig\n  const { enable, position = 'bottom' } = legend || {}\n\n  const orient = ['bottom', 'bottomLeft', 'bottomRight', 'bl', 'br'].includes(position)\n    ? 'bottom'\n    : ['top', 'topLeft', 'topRight', 'tl', 'tr'].includes(position)\n      ? 'top'\n      : ['left', 'leftTop', 'leftBottom', 'lt', 'lb'].includes(position)\n        ? 'left'\n        : 'right'\n\n  const legendPosition = ['topLeft', 'bottomLeft', 'leftTop', 'rightTop', 'lt', 'rt', 'tl', 'bl'].includes(position)\n    ? 'start'\n    : ['topRight', 'bottomRight', 'leftBottom', 'rightBottom', 'lb', 'rb', 'rt', 'br'].includes(position)\n      ? 'end'\n      : 'middle'\n\n  result.legends = {\n    type: 'color',\n    visible: enable,\n    orient,\n    position: legendPosition,\n    field: encoding[0].color[0],\n    inverse: ['left', 'right'].includes(orient) ? true : false,\n  }\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  backgroundColor,\n  datasetXY,\n  datasetPivot,\n  initPivot,\n  label,\n  colorLegend,\n  pivotAdapter,\n  pivotColumnDimensions,\n  pivotGridStyle,\n  pivotIndicators,\n  pivotIndicatorsAsRow,\n  pivotRowDimensions,\n  tooltip,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  initFunnel,\n  linearColor,\n} from '../pipes'\n\nconst funnel: SpecPipeline = [\n  initFunnel,\n  linearColor,\n  backgroundColor,\n  datasetXY,\n  label,\n  tooltip,\n  colorLegend,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotFunnel: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initFunnel,\n    linearColor,\n    backgroundColor,\n    datasetXY,\n    label,\n    tooltip,\n    colorLegend,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n]\n\nexport const funnelSpecPipeline: SpecPipeline = [pivotAdapter(funnel, pivotFunnel)]\n","import { funnelAdvancedPipeline, funnelSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerFunnel = () => {\n  Builder._advancedPipelineMap['funnel'] = funnelAdvancedPipeline\n  Builder._specPipelineMap['funnel'] = funnelSpecPipeline\n}","import type { AdvancedPipeline } from 'src/types'\nimport {\n  autoDimensions,\n  autoMeasures,\n  initAdvancedVSeed,\n  reshapeTo2D1M,\n  theme,\n  pivotAdapter,\n  pivotReshapeTo2D1M,\n  annotation,\n  markStyle,\n  sortXBandAxis,\n  heatmapConfig,\n} from '../pipes'\nimport { encodingMatrix } from '../pipes/encoding/encodingMatrix'\n\nexport const heatmapAdvancedPipeline: AdvancedPipeline = [\n  initAdvancedVSeed,\n  autoMeasures,\n  autoDimensions,\n  pivotAdapter([reshapeTo2D1M], [pivotReshapeTo2D1M]),\n  encodingMatrix,\n  sortXBandAxis,\n  heatmapConfig,\n  theme,\n  markStyle,\n  annotation\n]\n","import type { AdvancedPipe, Dimensions, FoldInfo, UnfoldInfo } from 'src/types'\nimport type { Encoding } from 'src/types'\n\nexport const encodingMatrix: AdvancedPipe = (advancedVSeed) => {\n  const result = { ...advancedVSeed }\n  const { datasetReshapeInfo, dimensions } = advancedVSeed\n  if (!datasetReshapeInfo || !dimensions) {\n    return result\n  }\n\n  const xDimension =\n    (dimensions as Dimensions).find(\n      (item) => item.location !== 'rowDimension' && item.location !== 'columnDimension',\n    ) || dimensions[0]\n\n  const isZeroDimension = dimensions.length === 0\n\n  const encoding = datasetReshapeInfo.reduce<Encoding>((prev, cur) => {\n    const { foldInfo, unfoldInfo } = cur as {\n      foldInfo: FoldInfo\n      unfoldInfo: UnfoldInfo\n    }\n\n    const x = [isZeroDimension ? foldInfo.measureName : xDimension?.id]\n    const y = [unfoldInfo.groupName]\n    const color = [foldInfo.measureValue]\n\n    return [\n      ...prev,\n      {\n        x,\n        y,\n        color,\n      },\n    ] as Encoding\n  }, [])\n\n  return {\n    ...result,\n    encoding,\n  }\n}\n","import type { IHeatmapChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const labelColorInversion: SpecPipe = (spec) => {\n  const result = { ...spec } as IHeatmapChartSpec\n  if (result.label) {\n    result.label.smartInvert = true\n  } else {\n    result.label = {\n      smartInvert: true,\n    }\n  }\n  return result\n}\n","import type { IHeatmapChartSpec } from '@visactor/vchart'\nimport type { SpecPipe } from 'src/types'\n\nexport const initHeatmap: SpecPipe = (spec, context) => {\n  const result = { ...spec } as IHeatmapChartSpec\n  const { advancedVSeed } = context\n  const { encoding } = advancedVSeed\n\n  if (!encoding[0].y || !encoding[0].x || !encoding[0].color) {\n    return result\n  }\n\n  result.type = 'heatmap'\n  result.direction = 'vertical'\n  result.xField = encoding[0].x[0]\n  result.yField = encoding[0].y[0]\n  result.valueField = encoding[0].color[0]\n  result.padding = 0\n  result.cell = {\n    style: {\n      shape: 'rect',\n      stroke: '#ffffff',\n      lineWidth: 1,\n      fill: {\n        field: encoding[0].color[0],\n        scale: 'color',\n      },\n    },\n  }\n  result.axes = [\n    {\n      type: 'band',\n      orient: 'left',\n      bandPadding: 0,\n    },\n    {\n      type: 'band',\n      orient: 'bottom',\n      bandPadding: 0,\n    },\n  ]\n  result.region = [\n    {\n      clip: true,\n    },\n  ]\n  result.animation = true\n\n  return result\n}\n","import type { SpecPipeline } from 'src/types'\nimport {\n  datasetXY,\n  backgroundColor,\n  label,\n  tooltip,\n  initPivot,\n  datasetPivot,\n  pivotIndicators,\n  pivotAdapter,\n  pivotIndicatorsAsRow,\n  pivotGridStyle,\n  pivotColumnDimensions,\n  pivotRowDimensions,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n  pointStyle,\n  lineStyle,\n  pointStateDimensionHover,\n  colorLegend,\n  linearColor,\n  labelColorInversion,\n} from '../pipes'\nimport { initHeatmap } from '../pipes/init/heatmap'\n\nconst heatmap: SpecPipeline = [\n  initHeatmap,\n  linearColor,\n  backgroundColor,\n  datasetXY,\n  label,\n  labelColorInversion,\n  colorLegend,\n  tooltip,\n  pointStyle,\n  pointStateDimensionHover,\n  lineStyle,\n  annotationPoint,\n  annotationVerticalLine,\n  annotationHorizontalLine,\n  annotationArea,\n]\n\nconst pivotHeatmap: SpecPipeline = [\n  initPivot,\n  pivotGridStyle,\n  pivotIndicatorsAsRow,\n  datasetPivot,\n  pivotIndicators([\n    initHeatmap,\n    linearColor,\n    backgroundColor,\n    datasetXY,\n    label,\n    labelColorInversion,\n    colorLegend,\n    tooltip,\n    pointStyle,\n    pointStateDimensionHover,\n    lineStyle,\n    annotationPoint,\n    annotationVerticalLine,\n    annotationHorizontalLine,\n    annotationArea,\n  ]),\n  pivotRowDimensions,\n  pivotColumnDimensions,\n]\n\nexport const heatmapSpecPipeline: SpecPipeline = [pivotAdapter(heatmap, pivotHeatmap)]\n","import { heatmapAdvancedPipeline, heatmapSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerHeatmap = () => {\n  Builder._advancedPipelineMap['heatmap'] = heatmapAdvancedPipeline\n  Builder._specPipelineMap['heatmap'] = heatmapSpecPipeline\n}","import type {\n  BackgroundColor,\n  Color,\n  CustomThemeConfig,\n  Label,\n  Legend,\n  TableConfig,\n  Tooltip,\n  YBandAxis,\n  YLinearAxis,\n} from 'src/types'\n\nexport const lightTheme = (): CustomThemeConfig => {\n  const linearAxis: YLinearAxis = {\n    nice: true,\n    zero: true,\n    inverse: false,\n    label: {\n      visible: true,\n      labelAngle: 0,\n      labelColor: '#797B85',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n    title: {\n      visible: false,\n      titleText: '',\n      titleColor: '#646A73',\n      titleFontSize: 12,\n      titleFontWeight: 400,\n    },\n    grid: {\n      visible: true,\n      gridColor: '#36415926',\n      gridWidth: 0.5,\n    },\n    tick: {\n      visible: false,\n      tickInside: false,\n      tickSize: 4,\n      tickColor: '#3641594d',\n    },\n    line: {\n      visible: false,\n      lineColor: '#3641594d',\n      lineWidth: 1,\n    },\n  }\n  const bandAxis: YBandAxis = {\n    labelAutoHide: true,\n    labelAutoHideGap: 4,\n    labelAutoLimit: true,\n    labelAutoLimitLength: 80,\n    labelAutoRotate: false,\n    labelAutoRotateAngleRange: [0, -45, -90],\n    label: {\n      visible: true,\n      labelAngle: 0,\n      labelColor: '#797B85',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n    title: {\n      visible: false,\n      titleText: '',\n      titleColor: '#646A73',\n      titleFontSize: 12,\n      titleFontWeight: 400,\n    },\n    grid: {\n      visible: false,\n      gridColor: '#36415926',\n      gridWidth: 0.5,\n    },\n    tick: {\n      visible: false,\n      tickInside: false,\n      tickSize: 4,\n      tickColor: '#3641594d',\n    },\n    line: {\n      visible: true,\n      lineColor: '#3641594d',\n      lineWidth: 1,\n    },\n  }\n  const barBandAxis: YBandAxis = {\n    ...bandAxis,\n    labelAutoHide: false,\n    labelAutoHideGap: 1,\n    labelAutoLimit: false,\n    labelAutoLimitLength: undefined,\n    labelAutoRotate: false,\n    labelAutoRotateAngleRange: [0, -45, -90],\n  }\n\n  const crosshairLine = {\n    visible: true,\n    labelVisible: true,\n    lineColor: '#3641594d',\n    labelColor: '#ffffff',\n    labelBackgroundColor: '#364159',\n  }\n  const crosshairRect = {\n    visible: true,\n    labelVisible: true,\n    rectColor: '#3641594d',\n    labelColor: '#ffffff',\n    labelBackgroundColor: '#364159',\n  }\n\n  const baseConfig: {\n    backgroundColor?: BackgroundColor\n    color?: Color\n    label?: Label\n    tooltip?: Tooltip\n    legend?: Legend\n  } = {\n    backgroundColor: 'transparent',\n    color: {\n      colorScheme: [\n        '#8D72F6',\n        '#5766EC',\n        '#66A3FE',\n        '#51D5E6',\n        '#4EC0B3',\n        '#F9DF90',\n        '#F9AD71',\n        '#ED8888',\n        '#E9A0C3',\n        '#D77DD3',\n      ],\n    },\n    label: {\n      enable: true,\n    },\n    tooltip: {\n      enable: true,\n    },\n    legend: {\n      enable: true,\n      border: true,\n      maxSize: 1,\n      shapeType: 'rectRound',\n      position: 'rt',\n      labelFontColor: '#646A73',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n  }\n  const tableConfig: TableConfig = {\n    borderColor: '#e3e5eb',\n\n    bodyFontSize: 12,\n    bodyFontColor: '#141414',\n    bodyBackgroundColor: 'transparent',\n\n    headerFontSize: 12,\n    headerFontColor: '#21252c',\n    headerBackgroundColor: '#f6f7f9',\n\n    hoverBodyBackgroundColor: '#bedaff',\n    hoverBodyInlineBackgroundColor: '#bedaff33',\n    hoverHeaderBackgroundColor: '#D9DDE4',\n    hoverHeaderInlineBackgroundColor: '#D9DDE455',\n\n    selectedBorderColor: '#4080ff',\n    selectedBackgroundColor: '#bedaff33',\n\n    backgroundColor: 'transparent',\n  }\n\n  return {\n    config: {\n      // table\n      table: tableConfig,\n      pivotTable: tableConfig,\n      // cartesian\n      line: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine,\n      },\n      column: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      columnParallel: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      columnPercent: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      bar: {\n        ...baseConfig,\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      barParallel: {\n        ...baseConfig,\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      barPercent: {\n        ...baseConfig,\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      area: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine,\n      },\n      areaPercent: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine,\n      },\n      areaRange: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine,\n      },\n      scatter: {\n        ...baseConfig,\n        xAxis: {\n          ...linearAxis,\n          line: {\n            ...linearAxis.line,\n            visible: true,\n          },\n        },\n        yAxis: {\n          ...linearAxis,\n          line: {\n            ...linearAxis.line,\n            visible: true,\n          },\n        },\n        crosshairLine,\n      },\n      dualAxis: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        primaryYAxis: linearAxis,\n        secondaryYAxis: { ...linearAxis, grid: { visible: false } },\n        dualChartType: {\n          primary: 'column',\n          secondary: 'line',\n        },\n        crosshairRect,\n      },\n      // polar\n      pie: {\n        ...baseConfig,\n      },\n      donut: {\n        ...baseConfig,\n      },\n      radar: {\n        ...baseConfig,\n      },\n      rose: {\n        ...baseConfig,\n      },\n      roseParallel: {\n        ...baseConfig,\n      },\n      // other\n      funnel: {\n        ...baseConfig,\n        color: {\n          colorScheme: [\n            '#5766EC',\n            '#6372F0',\n            '#7080F4',\n            '#7C8CFA',\n            '#8998FF',\n            '#95A3FF',\n            '#A0AEFF',\n            '#ACB9FF',\n            '#B7C4FF',\n            '#C2CEFF',\n          ].reverse(),\n        },\n      },\n      heatmap: {\n        ...baseConfig,\n        color: {\n          colorScheme: [\n            '#5766EC',\n            '#6372F0',\n            '#7080F4',\n            '#7C8CFA',\n            '#8998FF',\n            '#95A3FF',\n            '#A0AEFF',\n            '#ACB9FF',\n            '#B7C4FF',\n            '#C2CEFF',\n          ].reverse(),\n        },\n      },\n    },\n  }\n}\n","import type {\n  BackgroundColor,\n  Color,\n  CustomThemeConfig,\n  Label,\n  Legend,\n  TableConfig,\n  Tooltip,\n  YBandAxis,\n  YLinearAxis,\n} from 'src/types'\n\nexport const darkTheme = (): CustomThemeConfig => {\n  const linearAxis: YLinearAxis = {\n    nice: true,\n    zero: true,\n    label: {\n      visible: true,\n      labelAngle: 0,\n      labelColor: '#E2E3E6',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n    title: {\n      visible: false,\n      titleText: '',\n      titleColor: '#FDFDFD',\n      titleFontSize: 12,\n      titleFontWeight: 400,\n    },\n    grid: {\n      visible: true,\n      gridColor: '#404349',\n      gridWidth: 0.5,\n    },\n    tick: {\n      visible: false,\n      tickInside: false,\n      tickSize: 4,\n      tickColor: '#4B4F54',\n    },\n    line: {\n      visible: false,\n      lineColor: '#4B4F54',\n      lineWidth: 1,\n    },\n  }\n  const bandAxis: YBandAxis = {\n    labelAutoHide: true,\n    labelAutoHideGap: 4,\n    labelAutoLimit: true,\n    labelAutoLimitLength: 80,\n    labelAutoRotate: false,\n    labelAutoRotateAngleRange: [0, -45, -90],\n    label: {\n      visible: true,\n      labelAngle: 0,\n      labelColor: '#E2E3E6',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n    title: {\n      visible: false,\n      titleText: '',\n      titleColor: '#FDFDFD',\n      titleFontSize: 12,\n      titleFontWeight: 400,\n    },\n    grid: {\n      visible: false,\n      gridColor: '#404349',\n      gridWidth: 0.5,\n    },\n    tick: {\n      visible: false,\n      tickInside: false,\n      tickSize: 4,\n      tickColor: '#4B4F54',\n    },\n    line: {\n      visible: true,\n      lineColor: '#4B4F54',\n      lineWidth: 1,\n    },\n  }\n  const barBandAxis: YBandAxis = {\n    ...bandAxis,\n    labelAutoHide: false,\n    labelAutoHideGap: 1,\n    labelAutoLimit: false,\n    labelAutoLimitLength: undefined,\n    labelAutoRotate: false,\n    labelAutoRotateAngleRange: [0, -45, -90],\n  }\n  const crosshairLine = {\n    visible: true,\n    labelVisible: true,\n    lineColor: '#E2E3E6',\n    labelColor: '#4B4F54',\n    labelBackgroundColor: '#ffffff',\n  }\n  const crosshairRect = {\n    visible: true,\n    labelVisible: true,\n    lineColor: '#E2E3E6',\n    labelColor: '#4B4F54',\n    labelBackgroundColor: '#ffffff',\n  }\n\n  const baseConfig: {\n    backgroundColor?: BackgroundColor\n    color?: Color\n    label?: Label\n    tooltip?: Tooltip\n    legend?: Legend\n  } = {\n    backgroundColor: 'transparent',\n    color: {\n      colorScheme: [\n        '#2E62F1',\n        '#4DC36A',\n        '#FF8406',\n        '#FFCC00',\n        '#4F44CF',\n        '#5AC8FA',\n        '#003A8C',\n        '#B08AE2',\n        '#FF6341',\n        '#98DD62',\n      ],\n    },\n    label: {\n      enable: true,\n    },\n    tooltip: {\n      enable: true,\n    },\n    legend: {\n      enable: true,\n      border: true,\n      maxSize: 1,\n      position: 'rt',\n      shapeType: 'rectRound',\n      labelFontColor: '#FDFDFD',\n      labelFontSize: 12,\n      labelFontWeight: 400,\n    },\n  }\n\n  const tableConfig: TableConfig = {\n    borderColor: '#4b4e53',\n\n    bodyFontSize: 12,\n    bodyFontColor: '#fdfdfd',\n    bodyBackgroundColor: 'transparent',\n\n    headerFontSize: 12,\n    headerFontColor: '#fdfdfd',\n    headerBackgroundColor: '#36393e',\n\n    hoverBodyBackgroundColor: '#4284ff66',\n    hoverBodyInlineBackgroundColor: '#4284ff10',\n    hoverHeaderBackgroundColor: '#6f7984cc',\n    hoverHeaderInlineBackgroundColor: '#4b4f54',\n\n    selectedBorderColor: '#3073f2',\n    selectedBackgroundColor: '#4284ff33',\n  }\n\n  return {\n    config: {\n      table: tableConfig,\n      pivotTable: tableConfig,\n\n      // cartesian\n      line: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine: crosshairLine,\n      },\n      column: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      columnParallel: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      columnPercent: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      bar: {\n        ...baseConfig,\n\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [0, 4, 4, 0],\n      },\n      barParallel: {\n        ...baseConfig,\n\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      barPercent: {\n        ...baseConfig,\n\n        xAxis: linearAxis,\n        yAxis: barBandAxis,\n        crosshairRect: crosshairRect,\n        stackCornerRadius: [4, 4, 4, 4],\n      },\n      area: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine: crosshairLine,\n      },\n      areaPercent: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine: crosshairLine,\n      },\n      areaRange: {\n        ...baseConfig,\n\n        xAxis: bandAxis,\n        yAxis: linearAxis,\n        crosshairLine: crosshairLine,\n      },\n      scatter: {\n        ...baseConfig,\n\n        xAxis: {\n          ...linearAxis,\n          line: {\n            ...linearAxis.line,\n            visible: true,\n          },\n        },\n        yAxis: {\n          ...linearAxis,\n          line: {\n            ...linearAxis.line,\n            visible: true,\n          },\n        },\n        crosshairLine,\n      },\n      dualAxis: {\n        ...baseConfig,\n        xAxis: bandAxis,\n        primaryYAxis: linearAxis,\n        secondaryYAxis: { ...linearAxis, grid: { visible: false } },\n        dualChartType: {\n          primary: 'column',\n          secondary: 'line',\n        },\n        crosshairRect,\n      },\n      // polar\n      pie: {\n        ...baseConfig,\n      },\n      donut: {\n        ...baseConfig,\n      },\n      radar: {\n        ...baseConfig,\n      },\n      rose: {\n        ...baseConfig,\n      },\n      roseParallel: {\n        ...baseConfig,\n      },\n      // other\n      funnel: {\n        ...baseConfig,\n        color: {\n          colorScheme: [\n            '#2E62F1',\n            '#3A6EF6',\n            '#4780FA',\n            '#548CFE',\n            '#6198FF',\n            '#6FA3FF',\n            '#7CACFF',\n            '#88B7FF',\n            '#94C2FF',\n            '#A0CEFF',\n          ],\n        },\n      },\n      heatmap: {\n        ...baseConfig,\n      },\n    },\n  }\n}\n","import type { CustomThemeConfig } from 'src/types'\nimport { Builder } from '../../builder'\nimport { darkTheme, lightTheme } from '../../../theme'\n\nexport const registerCustomTheme = (\n  key: string,\n  themeConfig:\n    | CustomThemeConfig\n    | ((props: { lightTheme: CustomThemeConfig; darkTheme: CustomThemeConfig }) => CustomThemeConfig),\n) => {\n  const customTheme =\n    typeof themeConfig === 'function' ? themeConfig({ lightTheme: lightTheme(), darkTheme: darkTheme() }) : themeConfig\n  Builder._themeMap[key] = customTheme\n}\n","import { registerCustomTheme } from './custom'\nimport { lightTheme } from '../../../theme'\n\nexport const registerLightTheme = () => {\n  registerCustomTheme('light', lightTheme())\n}\n","import { darkTheme } from '../../../theme'\nimport { registerCustomTheme } from './custom'\n\nexport const registerDarkTheme = () => {\n  registerCustomTheme('dark', darkTheme())\n}\n","import {\n  registerArea,\n  registerAreaPercent,\n  registerBar,\n  registerBarParallel,\n  registerBarPercent,\n  registerColumn,\n  registerColumnParallel,\n  registerColumnPercent,\n  registerLine,\n  registerPie,\n  registerDonut,\n  registerRose,\n  registerRoseParallel,\n  registerFunnel,\n  registerScatter,\n  registerTable,\n  registerPivotTable,\n  registerAreaRange,\n  registerHeatmap,\n  registerRadar,\n  registerDualAxis,\n} from './chartType'\nimport { registerDarkTheme, registerLightTheme } from './theme'\n\nexport const registerAll = () => {\n  // table\n  registerTable()\n  registerPivotTable()\n  // cartesian\n  registerLine()\n  registerColumn()\n  registerColumnParallel()\n  registerColumnPercent()\n  registerBar()\n  registerBarParallel()\n  registerBarPercent()\n  registerArea()\n  registerAreaPercent()\n  registerAreaRange()\n  registerScatter()\n  registerDualAxis()\n  // polar\n  registerPie()\n  registerDonut()\n  registerRose()\n  registerRoseParallel()\n  registerRadar()\n  // other\n  registerFunnel()\n  registerHeatmap()\n  // theme\n  registerLightTheme()\n  registerDarkTheme()\n}\n","import { dualAxisAdvancedPipeline, dualAxisSpecPipeline } from '../../../pipeline'\nimport { Builder } from '../../builder'\n\nexport const registerDualAxis = () => {\n  Builder._advancedPipelineMap['dualAxis'] = dualAxisAdvancedPipeline\n  Builder._specPipelineMap['dualAxis'] = dualAxisSpecPipeline\n}\n","import type { AdvancedPipe, ChartType, SpecPipe } from 'src/types'\nimport { Builder } from '../builder'\n\nexport const updateAdvanced = (chartType: ChartType, advancedPipe: AdvancedPipe) => {\n  Builder._customAdvancedPipe[chartType] = advancedPipe\n}\nexport const updateSpec = (chartType: ChartType, specPipe: SpecPipe) => {\n  Builder._customSpecPipe[chartType] = specPipe\n}\n","import type { Dimension, DimensionGroup } from 'src/types'\n\nexport const isDimension = (dimension: Dimension | DimensionGroup): dimension is Dimension => {\n  return !('children' in dimension)\n}\n\nexport const isDimensionGroup = (dimension: Dimension | DimensionGroup): dimension is DimensionGroup => {\n  return 'children' in dimension\n}\n\nexport const isDimensions = (dimensions: Dimension[] | DimensionGroup[]): dimensions is Dimension[] => {\n  return dimensions.every(isDimension)\n}\n","import { z } from 'zod'\n\nexport type ChartType =\n  | 'table'\n  | 'pivotTable'\n  // cartesian\n  | 'line'\n  | 'column'\n  | 'columnPercent'\n  | 'columnParallel'\n  | 'bar'\n  | 'barPercent'\n  | 'barParallel'\n  | 'area'\n  | 'areaPercent'\n  | 'areaRange'\n  | 'scatter'\n  | 'dualAxis'\n  // polar\n  | 'rose'\n  | 'roseParallel'\n  | 'pie'\n  | 'donut'\n  | 'radar'\n  // other\n  | 'heatmap'\n  | 'funnel'\n\nexport enum ChartTypeEnum {\n  Table = 'table',\n  PivotTable = 'pivotTable',\n  // cartesian\n  Line = 'line',\n  Column = 'column',\n  ColumnPercent = 'columnPercent',\n  ColumnParallel = 'columnParallel',\n  Bar = 'bar',\n  BarPercent = 'barPercent',\n  BarParallel = 'barParallel',\n  Area = 'area',\n  AreaPercent = 'areaPercent',\n  AreaRange = 'areaRange',\n  DualAxis = 'dualAxis',\n  Scatter = 'scatter',\n  // polar\n  Rose = 'rose',\n  RoseParallel = 'roseParallel',\n  Pie = 'pie',\n  Donut = 'donut',\n  Radar = 'radar',\n  // other\n  Funnel = 'funnel',\n  Heatmap = 'heatmap',\n}\n\nexport const zChartType = z.enum([\n  'table',\n  'pivotTable',\n  // cartesian\n  'line',\n  'column',\n  'columnPercent',\n  'columnParallel',\n  'bar',\n  'barPercent',\n  'barParallel',\n  'area',\n  'areaPercent',\n  'areaRange',\n  'scatter',\n  'dualAxis',\n  // polar\n  'rose',\n  'roseParallel',\n  'pie',\n  'donut',\n  'radar',\n  // other\n  'funnel',\n  'heatmap',\n])\n","import { z } from 'zod'\n\n// 'columnPercent' 和 'areaPercent' 会改变轴值域为[0,1], VTable不支持.\nexport const zDualChartType = z.object({\n  primary: z.enum(['line', 'column', 'columnParallel', 'area', 'scatter']).default('column'),\n  secondary: z.enum(['line', 'column', 'columnParallel', 'area', 'scatter']).default('line'),\n})\n\nexport type DualChartType = z.infer<typeof zDualChartType>\n","import { z } from 'zod'\n\n/**\n * example dataset link:\n * [\n *    { date: '2019', 20001:'type', profit:10, sales: null, },\n *    { date: '2020', 20001:'type', profit:30, sales: -1.1, },\n *    { date: '2021', 20001:'type', profit:30, sales: 1, },\n *    { date: '2023', 20001:'type', profit:40, sales: undefined, },\n *    { date: '2022', 20001:'type', profit:50, sales: 100, },\n * ]\n */\nexport const zDatum = z.record(z.string().or(z.number()), z.any())\nexport const zDataset = z.array(zDatum)\n\nexport type Datum = z.infer<typeof zDatum>\nexport type Dataset = z.infer<typeof zDataset>\n","import { z } from 'zod'\nimport type { DimensionGroup } from './dimensions'\n\nexport const zDimension = z.object({\n  id: z.string(),\n  alias: z.string().optional(),\n  location: z.enum(['dimension', 'rowDimension', 'columnDimension']).default('dimension'),\n})\nexport const zDimensionGroup: z.ZodType<DimensionGroup> = z.object({\n  id: z.string(),\n  alias: z.string().optional(),\n  get children() {\n    return z.array(zDimensionGroup.or(zDimension)).optional()\n  },\n})\nexport const zDimensions = z.array(zDimension)\nexport const zDimensionTree = z.array(zDimensionGroup.or(zDimension))\n","import { z } from 'zod'\n\nexport interface NumFormat {\n  /**\n   * @description 数字格式化类型, 支持数值(十进制)、百分比(%)、千分比(‰)、科学计数法\n   * @default 'number'\n   */\n  type?: 'number' | 'percent' | 'permille' | 'scientific'\n\n  /**\n   * @description 数值格式化比例, 百分比和千分比需要设置比例\n   * @default 1\n   * @example\n   * - 100000 转换为 10万, ratio:10000, symbol:\"万\"\n   * - 100000 转换为 10K, ratio:1000, symbol:\"K\"\n   * - 100000 转换为 100%, ratio:100, symbol:\"%\"\n   * - 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n   */\n  ratio?: number\n\n  /**\n   * @description 数值格式化符号, 例如%、‰\n   * @default ''\n   * @example\n   * - 100000 转换为 10万, ratio:10000, symbol:\"万\"\n   * - 100000 转换为 10K, ratio:1000, symbol:\"K\"\n   * - 100000 转换为 100%, ratio:100, symbol:\"%\"\n   * - 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n   */\n  symbol?: string\n\n  /**\n   * @description 数值格式化千分位分隔符\n   * @default true\n   */\n  thousandSeparator?: boolean\n\n  /**\n   * @description 数值格式化后缀\n   * @default ''\n   */\n  suffix?: string\n  /**\n   * @description 数值格式化前缀\n   * @default ''\n   */\n  prefix?: string\n\n  /**\n   * @description 数值格式化小数位, 使用浏览器提供的 Intl.NumberFormat 中的 minimumFractionDigits 和 maximumFractionDigits 进行格式化, 优先级低于 significantDigits\n   * @default 2\n   * @example\n   * - 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n   */\n  fractionDigits?: number\n\n  /**\n   * @description 数值格式化有效位, 使用浏览器提供的 Intl.NumberFormat 中的 minimumSignificantDigits 和 maximumSignificantDigits 进行格式化, 优先级高于 fractionDigits\n   * @default undefined\n   * @example\n   * - 1234.5678 转换为 1000, significantDigits:1\n   * - 1234.5678 转换为 1200, significantDigits:2\n   * - 1234.5678 转换为 1230, significantDigits:3\n   * - 1234.5678 转换为 1234, significantDigits:4\n   * - 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n   * - 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n   */\n  significantDigits?: number\n\n  /**\n   * @description 数值格式化舍入优先级, 处理同时设置了 significantDigits 和 fractionDigits 时的舍入优先级, 使用浏览器提供的 Intl.NumberFormat 进行格式化, 规则同 Intl.NumberFormat 中的 roundingPriority\n   * @default 'morePrecision'\n   * @example\n   * - 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n   * - 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n   */\n  roundingPriority?: 'morePrecision' | 'lessPrecision'\n\n  /**\n   * @description 数值格式化舍入模式, 使用浏览器提供的 Intl.NumberFormat 进行格式化, 规则同 Intl.NumberFormat 中的 roundingMode\n   * @default 'halfExpand'\n   * @example\n   */\n  roundingMode?:\n    | 'floor'\n    | 'ceil'\n    | 'expand'\n    | 'trunc'\n    | 'halfCeil'\n    | 'halfFloor'\n    | 'halfExpand'\n    | 'halfTrunc'\n    | 'halfEven'\n}\n\nexport const zNumFormat = z\n  .object({\n    type: z.enum(['number', 'percent', 'permille', 'scientific']).default('number').optional(),\n    ratio: z.number().default(1).optional(),\n    symbol: z.string().default('').optional(),\n    thousandSeparator: z.boolean().default(false).optional(),\n    prefix: z.string().default('').optional(),\n    suffix: z.string().default('').optional(),\n\n    fractionDigits: z.number().default(2).optional(),\n    significantDigits: z.number().default(0).optional(),\n    roundingPriority: z.enum(['morePrecision', 'lessPrecision']).default('morePrecision').optional(),\n    roundingMode: z\n      .enum(['floor', 'ceil', 'halfEven', 'expand', 'trunc', 'halfFloor', 'halfCeil', 'halfExpand', 'halfTrunc'])\n      .default('halfCeil')\n      .optional(),\n  })\n  .optional()\n","import { z } from 'zod'\nimport { zNumFormat } from './format/numFormat'\nimport type { MeasureGroup } from './measures'\n\nexport const zMeasure = z.object({\n  id: z.string(),\n  alias: z.string().optional(),\n  autoFormat: z.boolean().default(true),\n  format: zNumFormat.default({}),\n})\n\nexport const zMeasureGroup: z.ZodType<MeasureGroup> = z.object({\n  id: z.string(),\n  alias: z.string().optional(),\n  get children() {\n    return z.array(zMeasureGroup.or(zMeasure)).optional()\n  },\n})\n\nexport const zMeasures = z.array(zMeasure)\nexport const zMeasureTree = z.array(zMeasureGroup.or(zMeasure))\n","import { z } from 'zod'\nimport { zMeasure } from './zMeasures'\n\nexport const zDualMeasure = z.object({\n  id: z.string(),\n\n  primaryMeasures: z.array(zMeasure).or(zMeasure).optional(),\n\n  secondaryMeasures: z.array(zMeasure).or(zMeasure).optional(),\n})\n\nexport const zDualMeasures = z.array(zDualMeasure)\n","import { z } from 'zod'\n\nexport type FoldInfo = {\n  foldMap: Record<string, string | undefined>\n  measureId: string\n  measureName: string\n  measureValue: string\n}\n\nexport type UnfoldInfo = {\n  groupName: string\n  groupId: string\n  colorItems: string[]\n  colorIdMap: Record<string, string>\n}\n\nexport const zFoldInfo = z.object({\n  foldMap: z.record(z.string(), z.string().or(z.undefined())),\n  measureId: z.string(),\n  measureName: z.string(),\n  measureValue: z.string(),\n})\nexport const zUnfoldInfo = z.object({\n  colorItems: z.array(z.string()),\n  groupId: z.string(),\n  colorIdMap: z.record(z.string(), z.string()),\n  groupName: z.string(),\n})\n\nexport const zDatasetReshapeInfo = z.array(\n  z.object({\n    id: z.string(),\n    index: z.number(),\n    foldInfo: zFoldInfo,\n    foldInfoList: z.array(zFoldInfo).nullish(),\n    unfoldInfo: zUnfoldInfo,\n  }),\n)\n\nexport type DatasetReshapeInfo = z.infer<typeof zDatasetReshapeInfo>\n","import { z } from 'zod'\n\nexport const zEncoding = z.array(\n  z.object({\n    x: z.array(z.string()).nullish(),\n    y: z.array(z.string()).nullish(),\n    color: z.array(z.string()).nullish(),\n    group: z.array(z.string()).nullish(),\n    angle: z.array(z.string()).nullish(),\n    radius: z.array(z.string()).nullish(),\n    tooltip: z.array(z.string()).nullish(),\n    size: z.array(z.string()).nullish(),\n  }),\n)\n\nexport type Encoding = Array<{\n  x?: string[]\n  y?: string[]\n  color?: string[]\n  group?: string[]\n  angle?: string[]\n  radius?: string[]\n  tooltip?: string[]\n  size?: string[]\n}>\n","import { z } from 'zod'\nimport type { Axis } from './axis'\n\nexport type XBandAxis = Omit<Axis, 'min' | 'max' | 'nice' | 'zero' | 'log' | 'logBase'>\nexport type YBandAxis = Omit<Axis, 'min' | 'max' | 'nice' | 'zero' | 'log' | 'logBase'>\n\nexport const zXBandAxis = z.object({\n  visible: z.boolean().default(true).nullish(),\n\n  labelAutoHide: z.boolean().default(true).nullish(),\n  labelAutoHideGap: z.number().default(0).nullish(),\n  labelAutoRotate: z.boolean().default(true).nullish(),\n  labelAutoRotateAngleRange: z.array(z.number()).default([0, -45, -90]).nullish(),\n  labelAutoLimit: z.boolean().default(true).nullish(),\n  labelAutoLimitLength: z.number().default(100).nullish(),\n  label: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      labelColor: z.string().default('#797B85').nullish(),\n      labelFontSize: z.number().default(12).nullish(),\n      labelFontWeight: z.number().default(400).nullish(),\n      labelAngle: z.number().default(0).nullish(),\n    })\n    .nullish(),\n  line: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      lineColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      lineWidth: z.number().default(1).nullish(),\n    })\n    .nullish(),\n  tick: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      tickInside: z.boolean().default(false).nullish(),\n      tickColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      tickSize: z.number().default(4).nullish(),\n    })\n    .nullish(),\n  title: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      titleText: z.string().default('').nullish(),\n      titleColor: z.string().default('#646A73').nullish(),\n      titleFontSize: z.number().default(12).nullish(),\n      titleFontWeight: z.number().default(400).nullish(),\n    })\n    .nullish(),\n  grid: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      gridColor: z.string().default('rgba(54, 65, 89, 0.15)').nullish(),\n      gridWidth: z.number().default(0.5).nullish(),\n    })\n    .nullish(),\n})\nexport const zYBandAxis = zXBandAxis\n","import { z } from 'zod'\nimport { type Axis } from './axis'\n\nexport type XLinearAxis = Omit<\n  Axis,\n  | 'labelAutoHide'\n  | 'labelAutoHideGap'\n  | 'labelAutoRotate'\n  | 'labelAutoRotateAngleRange'\n  | 'labelAutoLimit'\n  | 'labelAutoLimitLength'\n>\nexport type YLinearAxis = Omit<\n  Axis,\n  | 'labelAutoHide'\n  | 'labelAutoHideGap'\n  | 'labelAutoRotate'\n  | 'labelAutoRotateAngleRange'\n  | 'labelAutoLimit'\n  | 'labelAutoLimitLength'\n>\n\nexport const zXLinearAxis = z.object({\n  visible: z.boolean().default(true).nullish(),\n\n  min: z.number().nullish(),\n  max: z.number().nullish(),\n  nice: z.boolean().default(true).nullish(),\n  zero: z.boolean().default(true).nullish(),\n  log: z.boolean().default(false).nullish(),\n  logBase: z.number().default(10).nullish(),\n  inverse: z.boolean().default(false).nullish(),\n\n  label: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      labelColor: z.string().default('#797B85').nullish(),\n      labelFontSize: z.number().default(12).nullish(),\n      labelFontWeight: z.number().default(400).nullish(),\n      labelAngle: z.number().default(0).nullish(),\n    })\n    .nullish(),\n  line: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      lineColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      lineWidth: z.number().default(1).nullish(),\n    })\n    .nullish(),\n  tick: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      tickInside: z.boolean().default(false).nullish(),\n      tickColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      tickSize: z.number().default(4).nullish(),\n    })\n    .nullish(),\n  title: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      titleText: z.string().default('').nullish(),\n      titleColor: z.string().default('#646A73').nullish(),\n      titleFontSize: z.number().default(12).nullish(),\n      titleFontWeight: z.number().default(400).nullish(),\n    })\n    .nullish(),\n  grid: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      gridColor: z.string().default('rgba(54, 65, 89, 0.15)').nullish(),\n      gridWidth: z.number().default(0.5).nullish(),\n    })\n    .nullish(),\n})\n\nexport const zYLinearAxis = zXLinearAxis\n","import { z } from 'zod'\n\nexport const zCrosshairLine = z.object({\n  visible: z.boolean().nullish(),\n  lineColor: z.string().nullish(),\n  labelColor: z.string().nullish(),\n  labelVisible: z.boolean().nullish(),\n  labelBackgroundColor: z.string().nullish(),\n})\n\nexport const zCrosshairRect = z.object({\n  visible: z.boolean().nullish(),\n  rectColor: z.string().nullish(),\n  labelColor: z.string().nullish(),\n  labelVisible: z.boolean().nullish(),\n  labelBackgroundColor: z.string().nullish(),\n})\n","import { z } from 'zod'\n\nexport const zStackCornerRadius = z.number().or(z.array(z.number())).default([3, 3, 0, 0])\n\nexport type StackCornerRadius = z.infer<typeof zStackCornerRadius>\n","import { z } from 'zod'\nexport const zBackgroundColor = z.string().default('transparent').nullish()\n\n/**\n * 图表的背景颜色\n * @default transparent 默认为透明背景\n * @description 背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'\n */\nexport type BackgroundColor = string | undefined\n","import { z } from 'zod'\n\nexport const zColor = z.object({\n  colorScheme: z.array(z.string()).nullish(),\n  colorMapping: z.record(z.string(), z.string()).nullish(),\n})\n\nexport const zLinearColor = z.object({\n  colorScheme: z.array(z.string()).nullish(),\n})\n\nexport type Color = {\n  /**\n   * 颜色配色方案\n   * @description 颜色配色方案用于定义图表中不同元素的颜色\n   * @example ['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n   */\n  colorScheme?: string[]\n  /**\n   * 颜色映射\n   * @description 颜色映射用于将数据值映射到具体的颜色\n   * @example\n   * {\n   *  'profit': 'red',\n   *  'sales': 'blue',\n   * }\n   */\n  colorMapping?: Record<string, string>\n}\n\nexport type LinearColor = {\n  /**\n   * 线性渐变颜色配色方案\n   * @description 线性渐变颜色配色方案用于定义图表中不同元素的颜色\n   * @example ['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n   */\n  colorScheme?: string[]\n}\n","import { z } from 'zod'\n\nexport const zLabel = z.object({\n  enable: z.boolean().default(true).nullish(),\n})\n\nexport type Label = {\n  /**\n   * 标签功能是否开启\n   * @default true\n   */\n  enable: boolean\n}\n","import { z } from 'zod'\n\nexport type Legend = {\n  /**\n   * 图例功能是否开启\n   * @default true\n   * @example enable: true\n   */\n  enable?: boolean\n  /**\n   * 图例边框是否开启\n   * @default true\n   * @example border: true\n   */\n  border?: boolean\n  /**\n   * 图例字体大小\n   * @default 12\n   * @example labelFontSize: 10\n   */\n  labelFontSize?: number\n  /**\n   * 图例字体颜色\n   * @default '#fff'\n   * @example labelFontColor: '#212121'\n   */\n  labelFontColor?: string\n  /**\n   * 图例字体粗细\n   * @default 400\n   * @example labelFontWeight: 400\n   */\n  labelFontWeight?: number | string\n  /**\n   * 图例形状\n   * @default 'rectRound'\n   * @example shapeType: 'circle'\n   */\n  shapeType?:\n    | 'circle'\n    | 'cross'\n    | 'diamond'\n    | 'square'\n    | 'arrow'\n    | 'arrow2Left'\n    | 'arrow2Right'\n    | 'wedge'\n    | 'thinTriangle'\n    | 'triangle'\n    | 'triangleUp'\n    | 'triangleDown'\n    | 'triangleRight'\n    | 'triangleLeft'\n    | 'stroke'\n    | 'star'\n    | 'wye'\n    | 'rect'\n    | 'arrowLeft'\n    | 'arrowRight'\n    | 'rectRound'\n    | 'roundLine'\n  /**\n   * 图例位置\n   * @default 'right'\n   * @example position: 'rightTop'\n   */\n  position?:\n    | 'left'\n    | 'leftTop'\n    | 'leftBottom'\n    | 'lt'\n    | 'lb'\n    | 'top'\n    | 'topLeft'\n    | 'topRight'\n    | 'tl'\n    | 'tr'\n    | 'right'\n    | 'rightTop'\n    | 'rightBottom'\n    | 'rt'\n    | 'rb'\n    | 'bottom'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'bl'\n    | 'br'\n\n  /**\n   * @description 存在大量图例时, 最大列数 或 图例最大行数\n   *  如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight, tl, tr), maxSize控制显示的列数\n   *  如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom, rt, rb), maxSize控制显示的行数\n   * @example maxSize: 2\n   * @default 1\n   */\n  maxSize?: number\n}\n\nexport const zLegend = z.object({\n  enable: z.boolean().default(true).nullish(),\n  border: z.boolean().default(true).nullish(),\n  maxSize: z.number().default(1).nullish(),\n  shapeType: z\n    .enum([\n      'circle',\n      'cross',\n      'diamond',\n      'square',\n      'arrow',\n      'arrow2Left',\n      'arrow2Right',\n      'wedge',\n      'thinTriangle',\n      'triangle',\n      'triangleUp',\n      'triangleDown',\n      'triangleRight',\n      'triangleLeft',\n      'stroke',\n      'star',\n      'wye',\n      'rect',\n      'arrowLeft',\n      'arrowRight',\n      'rectRound',\n      'roundLine',\n    ])\n    .default('rectRound')\n    .nullish(),\n  position: z\n    .enum([\n      'left',\n      'leftTop',\n      'leftBottom',\n      'lt',\n      'lb',\n      'top',\n      'topLeft',\n      'topRight',\n      'tl',\n      'tr',\n      'right',\n      'rightTop',\n      'rightBottom',\n      'rt',\n      'rb',\n      'bottom',\n      'bottomLeft',\n      'bottomRight',\n      'bl',\n      'br',\n    ])\n    .default('bottom')\n    .nullish(),\n  labelFontSize: z.number().default(12).nullish(),\n  labelFontColor: z.string().default('#fff').nullish(),\n  labelFontWeight: z.number().or(z.string()).default(400).nullish(),\n})\n\nexport type ColorLegend = Pick<Legend, 'position' | 'enable'>\nexport const zColorLegend = z.object({\n  position: z\n    .enum([\n      'left',\n      'leftTop',\n      'leftBottom',\n      'lt',\n      'lb',\n      'top',\n      'topLeft',\n      'topRight',\n      'tl',\n      'tr',\n      'right',\n      'rightTop',\n      'rightBottom',\n      'rt',\n      'rb',\n      'bottom',\n      'bottomLeft',\n      'bottomRight',\n      'bl',\n      'br',\n    ])\n    .default('bottom')\n    .nullish(),\n  enable: z.boolean().default(true).nullish(),\n})\n","import { z } from 'zod'\n\nexport const zTooltip = z.object({\n  enable: z.boolean().default(true).nullish(),\n})\n\nexport type Tooltip = {\n  /**\n   * 提示信息功能是否开启\n   * @default true\n   */\n  enable: boolean\n}\n","import { z } from 'zod'\nimport { zXBandAxis, zYBandAxis } from './axes/bandAxis'\nimport { zXLinearAxis, zYLinearAxis } from './axes/linearAxis'\nimport { zCrosshairLine, zCrosshairRect } from './crosshair'\nimport { zStackCornerRadius } from './stackCornerRadius/stackCornerRadius'\nimport { zBackgroundColor } from './backgroundColor/backgroundColor'\nimport { zColor } from './color/color'\nimport { zLabel } from './label/label'\nimport { zLegend } from './legend/legend'\nimport { zTooltip } from './tooltip/tooltip'\nimport { zDualChartType } from '../chartType'\n\n/**\n * ---\n * zConfig by 图表类型\n */\nexport const zTableConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n\n  // Border\n  borderColor: z.string().nullish(),\n\n  // Body\n  bodyFontSize: z.number().nullish(),\n  bodyFontColor: z.string().nullish(),\n  bodyBackgroundColor: z.string().nullish(),\n  // Body interaction\n  hoverBodyBackgroundColor: z.string().nullish(),\n  hoverBodyInlineBackgroundColor: z.string().nullish(),\n\n  // Header\n  headerFontSize: z.number().nullish(),\n  headerFontColor: z.string().nullish(),\n  headerBackgroundColor: z.string().nullish(),\n  // Header interaction\n  hoverHeaderBackgroundColor: z.string().nullish(),\n  hoverHeaderInlineBackgroundColor: z.string().nullish(),\n\n  // Interaction\n  selectedBorderColor: z.string().nullish(),\n  selectedBackgroundColor: z.string().nullish(),\n})\nexport const zPivotTableConfig = zTableConfig\n\nexport const zLineConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n})\nexport const zColumnConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n})\nexport const zColumnParallelConfig = zColumnConfig\nexport const zColumnPercentConfig = zColumnConfig\nexport const zBarConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYBandAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n})\nexport const zBarParallelConfig = zBarConfig\nexport const zBarPercentConfig = zBarConfig\nexport const zAreaConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n})\nexport const zAreaPercentConfig = zAreaConfig\nexport const zAreaRangeConfig = zAreaConfig\nexport const zDualAxisConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  dualChartType: z.array(zDualChartType).or(zDualChartType).nullish(),\n  primaryYAxis: z.array(zYLinearAxis).or(zYLinearAxis).nullish(),\n  secondaryYAxis: z.array(zYLinearAxis).or(zYLinearAxis).nullish(),\n\n  xAxis: zXBandAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n})\nexport const zScatterConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n})\n\n// polar\nexport const zRoseConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n})\nexport const zRoseParallelConfig = zRoseConfig\nexport const zPieConfig = z.object({\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  color: zColor.nullish(),\n  tooltip: zTooltip.nullish(),\n  legend: zLegend.nullish(),\n})\nexport const zDonutConfig = zPieConfig\nexport const zRadarConfig = zPieConfig\n// other\nexport const zFunnelConfig = zPieConfig\nexport const zHeatmapConfig = zPieConfig\n\n/**\n * ---\n * Type config by chart type\n */\nexport type TableConfig = z.infer<typeof zTableConfig>\nexport type PivotTableConfig = z.infer<typeof zPivotTableConfig>\n// cartesian\nexport type LineConfig = z.infer<typeof zLineConfig>\nexport type ColumnConfig = z.infer<typeof zColumnConfig>\nexport type ColumnParallelConfig = z.infer<typeof zColumnParallelConfig>\nexport type ColumnPercentConfig = z.infer<typeof zColumnPercentConfig>\nexport type BarConfig = z.infer<typeof zBarConfig>\nexport type BarParallelConfig = z.infer<typeof zBarParallelConfig>\nexport type BarPercentConfig = z.infer<typeof zBarPercentConfig>\nexport type AreaConfig = z.infer<typeof zAreaConfig>\nexport type AreaPercentConfig = z.infer<typeof zAreaPercentConfig>\nexport type AreaRangeConfig = z.infer<typeof zAreaRangeConfig>\nexport type ScatterConfig = z.infer<typeof zScatterConfig>\nexport type DualAxisConfig = z.infer<typeof zDualAxisConfig>\n// polar\nexport type RoseConfig = z.infer<typeof zRoseConfig>\nexport type RoseParallelConfig = z.infer<typeof zRoseParallelConfig>\nexport type PieConfig = z.infer<typeof zPieConfig>\nexport type DonutConfig = z.infer<typeof zDonutConfig>\nexport type RadarConfig = z.infer<typeof zRadarConfig>\n// other\nexport type FunnelConfig = z.infer<typeof zFunnelConfig>\nexport type HeatmapConfig = z.infer<typeof zHeatmapConfig>\n\n/**\n * config and type\n */\nexport type Config = z.infer<typeof zConfig>\nexport const zConfig = z.object({\n  table: zTableConfig.nullish(),\n  pivotTable: zPivotTableConfig.nullish(),\n\n  // cartesian\n  line: zLineConfig.nullish(),\n  column: zColumnConfig.nullish(),\n  columnParallel: zColumnParallelConfig.nullish(),\n  columnPercent: zColumnPercentConfig.nullish(),\n  bar: zBarConfig.nullish(),\n  barParallel: zBarParallelConfig.nullish(),\n  barPercent: zBarPercentConfig.nullish(),\n  area: zAreaConfig.nullish(),\n  areaPercent: zAreaPercentConfig.nullish(),\n  areaRange: zAreaRangeConfig.nullish(),\n  scatter: zScatterConfig.nullish(),\n  dualAxis: zDualAxisConfig.nullish(),\n\n  // polar\n  rose: zRoseConfig.nullish(),\n  roseParallel: zRoseParallelConfig.nullish(),\n  pie: zPieConfig.nullish(),\n  donut: zDonutConfig.nullish(),\n  radar: zRadarConfig.nullish(),\n  // other\n  funnel: zFunnelConfig.nullish(),\n  heatmap: zHeatmapConfig.nullish(),\n})\n","import { z } from 'zod'\n\nexport type Axis = {\n  /**\n   * 轴是否可见\n   * @default true\n   * @example true\n   */\n  visible?: boolean\n\n  /**\n   * 轴的最小值\n   * @description 优先级高于 nice 与 zero\n   * @default undefined\n   * @example 100\n   */\n  min?: number\n\n  /**\n   * 轴的最大值\n   * @description 优先级高于 nice 与 zero\n   * @default undefined\n   * @example 10000\n   */\n  max?: number\n\n  /**\n   * @description 是否使用对数轴, 仅对数值轴生效\n   * @default false\n   */\n  log?: boolean\n\n  /**\n   * @description 对数轴的底数, 仅对数值轴生效\n   * @default 10\n   */\n  logBase?: number\n\n  /**\n   * 是否自动调整轴的刻度间隔，使刻度标签更易读\n   * @description 当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n   * @default true\n   * @example true\n   */\n  nice?: boolean\n\n  /**\n   * 轴是否反向展示\n   * @description 仅对数值轴生效\n   * @default false\n   * @example false\n   */\n  inverse?: boolean\n\n  /**\n   * 是否在坐标轴上强制显示 0 值,\n   * @description 当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n   * @default true\n   * @example true\n   */\n  zero?: boolean\n\n  /**\n   * 轴标签, 自动隐藏\n   * @description 2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n   * @default true\n   */\n  labelAutoHide?: boolean\n  /**\n   * 轴标签, 自动隐藏间隔\n   * @description 若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n   *  autoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n   *  autoHide关闭时, 使用sampling采样, 设置在minGap上\n   * @default 4\n   */\n  labelAutoHideGap?: number\n  /**\n   * 轴标签, 自动旋转\n   * @description 当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n   * @default true\n   */\n  labelAutoRotate?: boolean\n  /**\n   * 轴标签, 自动旋转角度范围\n   * @description 当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n   * @default [0, -45, -90]\n   */\n  labelAutoRotateAngleRange?: number[]\n  /**\n   * 轴标签, 自动限制长度,\n   * @description 当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n   * @default true\n   */\n  labelAutoLimit?: boolean\n  /**\n   * 轴标签, 自动限制长度的最大长度\n   * @description 当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n   * @default 80\n   */\n  labelAutoLimitLength?: number\n\n  /**\n   * X轴刻度标签\n   * @default true\n   */\n  label?: {\n    /**\n     * 标签是否可见\n     * @default true\n     */\n    visible?: boolean\n    /**\n     * 标签颜色\n     * @default '#797B85'\n     */\n    labelColor?: string\n    /**\n     * 标签字体大小\n     * @default 12\n     */\n    labelFontSize?: number\n    /**\n     * 标签字体粗细\n     * @default 400\n     */\n    labelFontWeight?: number\n    /**\n     * 标签旋转角度\n     * @default 0\n     */\n    labelAngle?: number\n  }\n\n  /**\n   * X轴线\n   * @example\n   * {\n   *   visible: true,\n   *   lineColor: '#ffeecc',\n   *   lineWidth: 2,\n   * }\n   */\n  line?: {\n    /**\n     * 轴线是否可见\n     * @default true\n     */\n    visible?: boolean\n    /**\n     * 轴线颜色\n     * @default 'rgba(54, 65, 89, 0.30)'\n     */\n    lineColor?: string\n    /**\n     * 轴线宽度\n     * @default 1\n     */\n    lineWidth?: number\n  }\n\n  /**\n   * X轴刻度\n   * @default true\n   */\n  tick?: {\n    /**\n     * 刻度是否可见\n     * @default true\n     */\n    visible?: boolean\n    /**\n     * 刻度是否朝内\n     * @default false\n     */\n    tickInside?: boolean\n    /**\n     * 刻度颜色\n     * @default 'rgba(54, 65, 89, 0.30)'\n     */\n    tickColor?: string\n    /**\n     * 刻度尺寸\n     * @default 4\n     */\n    tickSize?: number\n  }\n\n  /**\n   * X轴标题\n   * @default false\n   */\n  title?: {\n    /**\n     * 标题是否可见\n     * @default false\n     */\n    visible?: boolean\n    /**\n     * 标题文本, 默认跟随字段配置\n     * @default ''\n     */\n    titleText?: string\n    /**\n     * 标题颜色\n     * @default '#646A73'\n     */\n    titleColor?: string\n    /**\n     * 标题字体大小\n     * @default 12\n     */\n    titleFontSize?: number\n    /**\n     * 标题字体粗细\n     * @default 400\n     */\n    titleFontWeight?: number\n  }\n\n  /**\n   * X轴网格线\n   * @default false\n   */\n  grid?: {\n    visible?: boolean\n    /**\n     * 网格线颜色\n     * @default 'rgba(54, 65, 89, 0.15)'\n     */\n    gridColor?: string\n    /**\n     * 网格线宽度\n     * @default 0.5\n     */\n    gridWidth?: number\n  }\n}\n\nexport const zAxis = z.object({\n  visible: z.boolean().default(true).nullish(),\n\n  min: z.number().nullish(),\n  max: z.number().nullish(),\n  nice: z.boolean().default(true).nullish(),\n  zero: z.boolean().default(true).nullish(),\n  inverse: z.boolean().default(false).nullish(),\n  log: z.boolean().default(false).nullish(),\n  logBase: z.number().default(10).nullish(),\n\n  labelAutoHide: z.boolean().default(true).nullish(),\n  labelAutoHideGap: z.number().default(4).nullish(),\n  labelAutoRotate: z.boolean().default(true).nullish(),\n  labelAutoRotateAngleRange: z.array(z.number()).default([0, -45, -90]).nullish(),\n  labelAutoLimit: z.boolean().default(true).nullish(),\n  labelAutoLimitLength: z.number().default(100).nullish(),\n  label: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      labelColor: z.string().default('#797B85').nullish(),\n      labelFontSize: z.number().default(12).nullish(),\n      labelFontWeight: z.number().default(400).nullish(),\n      labelAngle: z.number().default(0).nullish(),\n    })\n    .nullish(),\n  line: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      lineColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      lineWidth: z.number().default(1).nullish(),\n    })\n    .nullish(),\n  tick: z\n    .object({\n      visible: z.boolean().default(true).nullish(),\n      tickInside: z.boolean().default(false).nullish(),\n      tickColor: z.string().default('rgba(54, 65, 89, 0.30)').nullish(),\n      tickSize: z.number().default(4).nullish(),\n    })\n    .nullish(),\n  title: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      titleText: z.string().default('').nullish(),\n      titleColor: z.string().default('#646A73').nullish(),\n      titleFontSize: z.number().default(12).nullish(),\n      titleFontWeight: z.number().default(400).nullish(),\n    })\n    .nullish(),\n  grid: z\n    .object({\n      visible: z.boolean().default(false).nullish(),\n      gridColor: z.string().default('rgba(54, 65, 89, 0.15)').nullish(),\n      gridWidth: z.number().default(0.5).nullish(),\n    })\n    .nullish(),\n})\n","import { z } from 'zod'\nimport { zConfig } from '../config'\n\nexport const zCustomThemeConfig = z.object({\n  config: zConfig.nullish(),\n})\n\nexport const zCustomTheme = z.record(z.string(), zCustomThemeConfig).nullish()\n\nexport type CustomTheme = z.infer<typeof zCustomTheme>\nexport type CustomThemeConfig = z.infer<typeof zCustomThemeConfig>\n","import { z } from 'zod'\n\nexport const zTheme = z.string()\n\ntype Light = 'light' & { readonly brand: unique symbol }\ntype Dark = 'dark' & { readonly brand: unique symbol }\n\n/**\n * 主题\n * @default light\n * @description 内置 light、dark 两种主题, 新的主题可以通过registerTheme自定义主题.\n */\nexport type Theme = Light | Dark | string\n","import { z } from 'zod'\nimport type { Datum } from '../properties'\n\nexport type ValueSelector = string | number\n\nexport type PartialDatumSelector = Datum\n\nexport type MeasureSelector = {\n  field: string\n  operator?: '=' | '==' | '!=' | '>' | '<' | '>=' | '<=' | 'between'\n  op?: '=' | '==' | '!=' | '>' | '<' | '>=' | '<=' | 'between'\n  value: string | number | Array<string | number>\n}\n\nexport type DimensionSelector = {\n  field: string\n  operator?: 'in' | 'not in'\n  op?: 'in' | 'not in'\n  value: string | number | Array<string | number>\n}\n\nexport type Selector = ValueSelector | PartialDatumSelector | MeasureSelector | DimensionSelector\n\nexport type Selectors = Array<Selector>\n\nexport const zSelector = z.union([\n  z.string(),\n  z.number(),\n  z.object({\n    field: z.string(),\n    operator: z.enum(['=', '==', '!=', '>', '<', '>=', '<=', 'between']).nullish(),\n    op: z.enum(['=', '==', '!=', '>', '<', '>=', '<=', 'between']).nullish(),\n    value: z.union([z.string(), z.number(), z.array(z.union([z.string(), z.number()]))]),\n  }),\n  z.object({\n    field: z.string(),\n    operator: z.enum(['in', 'not in']).nullish(),\n    op: z.enum(['in', 'not in']).nullish(),\n    value: z.union([z.string(), z.number(), z.array(z.union([z.string(), z.number()]))]),\n  }),\n])\n\nexport const zSelectors = z.array(zSelector)\n","import { z } from 'zod'\nimport { zSelector, zSelectors, type Selector, type Selectors } from '../../dataSelector'\n\nexport type BarStyle = {\n  /**\n   * 数据选择器\n   * @description\n   * 若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector 共四类数据匹配能力\n   * 若未配置selector, 则样式全局生效.\n   * @type {Selector | Selectors}\n   * @example 数值选择器\n   * selector = \"tool\"\n   * selector = [\"tool\", \"book\"]\n   * selector = 100\n   * selector = [100, 200]\n   * @example 局部数据选择器\n   * selector = { profit: 100 }\n   * selector = [{ profit: 100 }, { profit: 200 }]\n   * @example 条件维度选择器\n   * selector = {\n   *  field: 'category',\n   *  operator: 'in',\n   *  value: 'tool'\n   * }\n   * selector = {\n   *  field: 'category',\n   *  operator: 'not in',\n   *  value: 'book'\n   * }\n   * @example 条件指标选择器\n   * selector = {\n   *  field: 'profit',\n   *  operator: '>=',\n   *  value: 100\n   * }\n   * selector = {\n   *  field: 'profit',\n   *  operator: 'between'\n   *  value: [100, 300]\n   * }\n   */\n  selector?: Selector | Selectors\n\n  /**\n   * 柱状图颜色\n   * @description 柱状图颜色\n   * @type {string}\n   */\n  barColor?: string\n  /**\n   * 柱状图颜色透明度\n   * @description 柱状图颜色透明度\n   * @type {number}\n   */\n  barColorOpacity?: number\n  /**\n   * 柱状图边框颜色\n   * @description 柱状图边框颜色\n   * @type {string}\n   */\n  barBorderColor?: string\n  /**\n   * 柱状图边框宽度\n   * @description 柱状图边框宽度\n   * @type {number}\n   */\n  barBorderWidth?: number\n  /**\n   * 柱状图边框样式\n   * @description 柱状图边框样式\n   * @type {number}\n   * @example solid\n   * @example dashed\n   * @example dotted\n   */\n  barBorderStyle?: 'solid' | 'dashed' | 'dotted'\n  /**\n   * 柱状图圆角\n   * @description 柱状图圆角\n   * @type {number | number[]}\n   * @example 4\n   * @example [0, 0, 10, 10]\n   */\n  barRadius?: number | number[]\n}\n\nexport const zBarStyle = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  barColor: z.string().nullish(),\n  barColorOpacity: z.number().nullish(),\n  barBorderColor: z.string().nullish(),\n  barBorderWidth: z.number().nullish(),\n  barBorderStyle: z.union([z.literal('solid'), z.literal('dashed'), z.literal('dotted')]).nullish(),\n  barRadius: z.union([z.number(), z.array(z.number())]).nullish(),\n})\n","import { z } from 'zod'\nimport { zSelector, zSelectors, type Selector, type Selectors } from '../../dataSelector'\n\nexport type PointStyle = {\n  /**\n   * 数据选择器\n   * @description\n   * 若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector 共四类数据匹配能力\n   * 若未配置selector, 则样式全局生效.\n   * @type {Selector | Selectors}\n   * @example 数值选择器\n   * selector = \"tool\"\n   * selector = [\"tool\", \"book\"]\n   * selector = 100\n   * selector = [100, 200]\n   * @example 局部数据选择器\n   * selector = { profit: 100 }\n   * selector = [{ profit: 100 }, { profit: 200 }]\n   * @example 条件维度选择器\n   * selector = {\n   *  field: 'category',\n   *  operator: 'in',\n   *  value: 'tool'\n   * }\n   * selector = {\n   *  field: 'category',\n   *  operator: 'not in',\n   *  value: 'book'\n   * }\n   * @example 条件指标选择器\n   * selector = {\n   *  field: 'profit',\n   *  operator: '>=',\n   *  value: 100\n   * }\n   * selector = {\n   *  field: 'profit',\n   *  operator: 'between'\n   *  value: [100, 300]\n   * }\n   */\n  selector?: Selector | Selectors\n\n  /**\n   * 点大小\n   * @description 点大小\n   * @type {number}\n   */\n  pointSize?: number\n  /**\n   * 点图元颜色\n   * @description 点图元颜色\n   * @type {string}\n   */\n  pointColor?: string\n  /**\n   * 点图元颜色透明度\n   * @description 点图元颜色透明度\n   * @type {number}\n   */\n  pointColorOpacity?: number\n  /**\n   * 点图元边框颜色\n   * @description 点图元边框颜色\n   * @type {string}\n   */\n  pointBorderColor?: string\n  /**\n   * 点图元边框宽度\n   * @description 点图元边框宽度\n   * @type {number}\n   */\n  pointBorderWidth?: number\n  /**\n   * 点图元边框样式\n   * @description 点图元边框样式\n   * @type {number}\n   * @example solid\n   * @example dashed\n   * @example dotted\n   */\n  pointBorderStyle?: 'solid' | 'dashed' | 'dotted'\n}\n\nexport const zPointStyle = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  pointSize: z.number().nullish(),\n  pointColor: z.string().nullish(),\n  pointColorOpacity: z.number().nullish(),\n  pointBorderColor: z.string().nullish(),\n  pointBorderWidth: z.number().nullish(),\n  pointBorderStyle: z.union([z.enum(['solid', 'dashed', 'dotted'])]).nullish(),\n})\n","import { z } from 'zod'\nimport { zSelector, zSelectors, type Selector, type Selectors } from '../../dataSelector'\n\nexport type LineStyle = {\n  /**\n   * 数据选择器\n   * @description\n   * 若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector 共四类数据匹配能力\n   * 若未配置selector, 则样式全局生效.\n   * @type {Selector | Selectors}\n   * @example 数值选择器\n   * selector = \"tool\"\n   * selector = [\"tool\", \"book\"]\n   * selector = 100\n   * selector = [100, 200]\n   * @example 局部数据选择器\n   * selector = { profit: 100 }\n   * selector = [{ profit: 100 }, { profit: 200 }]\n   * @example 条件维度选择器\n   * selector = {\n   *  field: 'category',\n   *  operator: 'in',\n   *  value: 'tool'\n   * }\n   * selector = {\n   *  field: 'category',\n   *  operator: 'not in',\n   *  value: 'book'\n   * }\n   * @example 条件指标选择器\n   * selector = {\n   *  field: 'profit',\n   *  operator: '>=',\n   *  value: 100\n   * }\n   * selector = {\n   *  field: 'profit',\n   *  operator: 'between'\n   *  value: [100, 300]\n   * }\n   */\n  selector?: Selector | Selectors\n\n  /**\n   * 折线图是否平滑\n   * @description 折线图是否平滑\n   * @type {boolean}\n   */\n  lineSmooth?: boolean\n\n  /**\n   * 柱状图颜色\n   * @description 柱状图颜色\n   * @type {string}\n   */\n  lineColor?: string\n  /**\n   * 柱状图颜色透明度\n   * @description 柱状图颜色透明度\n   * @type {number}\n   */\n  lineColorOpacity?: number\n  /**\n   * 柱状图边框宽度\n   * @description 柱状图边框宽度\n   * @type {number}\n   */\n  lineWidth?: number\n  /**\n   * 柱状图边框样式\n   * @description 柱状图边框样式\n   * @type {number}\n   * @example solid\n   * @example dashed\n   * @example dotted\n   */\n  lineStyle?: 'solid' | 'dashed' | 'dotted'\n}\n\nexport const zLineStyle = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  lineSmooth: z.boolean().nullish(),\n  lineColor: z.string().nullish(),\n  lineColorOpacity: z.number().nullish(),\n  lineWidth: z.number().nullish(),\n  lineStyle: z.union([z.enum(['solid', 'dashed', 'dotted'])]).nullish(),\n})\n","import { z } from 'zod'\nimport { zSelector, zSelectors, type Selector, type Selectors } from '../../dataSelector'\n\nexport type AreaStyle = {\n  /**\n   * 数据选择器\n   * @description\n   * 若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector 共四类数据匹配能力\n   * 若未配置selector, 则样式全局生效.\n   * @type {Selector | Selectors}\n   * @example 数值选择器\n   * selector = \"tool\"\n   * selector = [\"tool\", \"book\"]\n   * selector = 100\n   * selector = [100, 200]\n   * @example 局部数据选择器\n   * selector = { profit: 100 }\n   * selector = [{ profit: 100 }, { profit: 200 }]\n   * @example 条件维度选择器\n   * selector = {\n   *  field: 'category',\n   *  operator: 'in',\n   *  value: 'tool'\n   * }\n   * selector = {\n   *  field: 'category',\n   *  operator: 'not in',\n   *  value: 'book'\n   * }\n   * @example 条件指标选择器\n   * selector = {\n   *  field: 'profit',\n   *  operator: '>=',\n   *  value: 100\n   * }\n   * selector = {\n   *  field: 'profit',\n   *  operator: 'between'\n   *  value: [100, 300]\n   * }\n   */\n  selector?: Selector | Selectors\n\n  /**\n   * 面积图元的颜色\n   * @description 面积图元的颜色\n   * @type {string}\n   */\n  areaColor?: string\n  /**\n   * 面积图元的颜色透明度\n   * @description 面积图元的颜色透明度\n   * @type {number}\n   */\n  areaColorOpacity?: number\n}\n\nexport const zAreaStyle = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  areaColor: z.string().nullish(),\n  areaColorOpacity: z.number().nullish(),\n})\n","import { z } from 'zod'\nimport { zBarStyle } from './barStyle'\nimport { zPointStyle } from './pointStyle'\nimport { zLineStyle } from './lineStyle'\nimport { zAreaStyle } from './areaStyle'\n\nexport const zMarkStyle = z.object({\n  barStyle: zBarStyle.or(z.array(zBarStyle)).nullish(),\n  pointStyle: zPointStyle.or(z.array(zPointStyle)).nullish(),\n  lineStyle: zLineStyle.or(z.array(zLineStyle)).nullish(),\n  areaStyle: zAreaStyle.or(z.array(zAreaStyle)).nullish(),\n})\n\nexport type MarkStyle = z.infer<typeof zMarkStyle>\n","import { zSelector, zSelectors } from '../../dataSelector'\nimport { z } from 'zod'\n\nexport const zAnnotationPoint = z.object({\n  selector: z.union([zSelector, zSelectors]),\n  text: z.string().or(z.array(z.string())).nullish(),\n  textColor: z.string().default('#ffffff').nullish(),\n  textFontSize: z.number().default(12).nullish(),\n  textFontWeight: z.number().default(400).nullish(),\n  textAlign: z.enum(['left', 'right', 'center']).default('center').nullish(),\n  textBaseline: z.enum(['top', 'middle', 'bottom']).default('middle').nullish(),\n  textBackgroundVisible: z.boolean().default(true).nullish(),\n  textBackgroundColor: z.string().default('#212121').nullish(),\n  textBackgroundBorderColor: z.string().nullish(),\n  textBackgroundBorderWidth: z.number().default(1).nullish(),\n  textBackgroundBorderRadius: z.number().default(4).nullish(),\n  textBackgroundPadding: z.number().nullish(),\n\n  offsetY: z.number().default(0).nullish(),\n  offsetX: z.number().default(0).nullish(),\n})\n","import { zSelector, zSelectors } from '../../dataSelector'\nimport { z } from 'zod'\n\nexport const zAnnotationVerticalLine = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  xValue: z.union([z.number(), z.string(), z.array(z.union([z.number(), z.string()]))]).nullish(),\n  text: z.string().or(z.array(z.string())).nullish(),\n  textPosition: z\n    .enum(['outsideStart', 'outsideEnd', 'outsideMiddle', 'insideStart', 'insideMiddle', 'insideEnd'])\n    .default('insideEnd')\n    .nullish(),\n  textColor: z.string().default('#ffffff').nullish(),\n  textFontSize: z.number().default(12).nullish(),\n  textFontWeight: z.number().default(400).nullish(),\n  textAlign: z.enum(['left', 'right', 'center']).default('right').nullish(),\n  textBaseline: z.enum(['top', 'middle', 'bottom']).default('top').nullish(),\n\n  textBackgroundVisible: z.boolean().default(true).nullish(),\n  textBackgroundColor: z.string().default('#212121').nullish(),\n  textBackgroundBorderColor: z.string().default('#212121').nullish(),\n  textBackgroundBorderRadius: z.number().default(4).nullish(),\n  textBackgroundBorderWidth: z.number().default(1).nullish(),\n  textBackgroundPadding: z.number().default(2).nullish(),\n\n  lineVisible: z.boolean().default(true).nullish(),\n  lineColor: z.string().default('#212121').nullish(),\n  lineWidth: z.number().default(1).nullish(),\n  lineStyle: z\n    .union([z.literal('solid'), z.literal('dashed'), z.literal('dotted')])\n    .default('dashed')\n    .nullish(),\n})\n","import { zSelector, zSelectors } from '../../dataSelector'\nimport { z } from 'zod'\n\nexport const zAnnotationHorizontalLine = z.object({\n  selector: z.union([zSelector, zSelectors]).nullish(),\n  yValue: z.union([z.number(), z.string(), z.array(z.union([z.number(), z.string()]))]).nullish(),\n  text: z.string().or(z.array(z.string())).nullish(),\n  textPosition: z\n    .enum(['outsideStart', 'outsideEnd', 'outsideMiddle', 'insideStart', 'insideMiddle', 'insideEnd'])\n    .default('insideEnd')\n    .nullish(),\n  textColor: z.string().default('#ffffff').nullish(),\n  textFontSize: z.number().default(12).nullish(),\n  textFontWeight: z.number().default(400).nullish(),\n  textAlign: z.enum(['left', 'right', 'center']).default('right').nullish(),\n  textBaseline: z.enum(['top', 'middle', 'bottom']).default('top').nullish(),\n\n  lineVisible: z.boolean().default(true).nullish(),\n  lineColor: z.string().default('#212121').nullish(),\n  lineWidth: z.number().default(1).nullish(),\n  lineStyle: z\n    .union([z.literal('solid'), z.literal('dashed'), z.literal('dotted')])\n    .default('dashed')\n    .nullish(),\n\n  textBackgroundVisible: z.boolean().default(true).nullish(),\n  textBackgroundColor: z.string().default('#212121').nullish(),\n  textBackgroundBorderColor: z.string().default('#212121').nullish(),\n  textBackgroundBorderRadius: z.number().default(4).nullish(),\n  textBackgroundBorderWidth: z.number().default(1).nullish(),\n  textBackgroundPadding: z.number().default(2).nullish(),\n})\n","import { zSelector, zSelectors } from '../../dataSelector'\nimport { z } from 'zod'\n\nexport const zAnnotationArea = z.object({\n  selector: z.union([zSelector, zSelectors]),\n  textPosition: z\n    .enum(['top', 'topRight', 'topLeft', 'bottom', 'bottomLeft', 'bottomRight', 'left', 'right'])\n    .default('top')\n    .nullish(),\n  text: z.string().or(z.array(z.string())).nullish(),\n  textColor: z.string().default('#ffffff').nullish(),\n  textFontSize: z.number().default(12).nullish(),\n  textFontWeight: z.number().default(400).nullish(),\n  textAlign: z.enum(['left', 'right', 'center']).default('center').nullish(),\n  textBaseline: z.enum(['top', 'middle', 'bottom']).default('top').nullish(),\n\n  textBackgroundVisible: z.boolean().default(true).nullish(),\n  textBackgroundColor: z.string().default('#191d24').nullish(),\n  textBackgroundBorderColor: z.string().default('#191d24').nullish(),\n  textBackgroundBorderWidth: z.number().default(1).nullish(),\n  textBackgroundBorderRadius: z.number().default(4).nullish(),\n  textBackgroundPadding: z.number().default(4).nullish(),\n\n  areaColor: z.string().default('#888888').nullish(),\n  areaColorOpacity: z.number().default(0.15).nullish(),\n  areaBorderColor: z.string().default('#888888').nullish(),\n  areaBorderWidth: z.number().default(1).nullish(),\n  areaBorderRadius: z.number().default(4).nullish(),\n\n  outerPadding: z.number().default(4).nullish(),\n})\n","import { z } from 'zod'\nimport { zAnnotationPoint } from './zAnnotationPoint'\nimport { zAnnotationVerticalLine } from './zAnnotationVerticalLine'\nimport { zAnnotationHorizontalLine } from './zAnnotationHorizontalLine'\nimport { zAnnotationArea } from './zAnnotationArea'\n\n\nexport const zAnnotation = z.object({\n  annotationPoint: zAnnotationPoint.or(z.array(zAnnotationPoint)).nullish(),\n  annotationVerticalLine: zAnnotationVerticalLine.or(z.array(zAnnotationVerticalLine)).nullish(),\n  annotationHorizontalLine: zAnnotationHorizontalLine.or(z.array(zAnnotationHorizontalLine)).nullish(),\n  annotationArea: zAnnotationArea.or(z.array(zAnnotationArea)).nullish(),\n})\n\nexport type Annotation = z.infer<typeof zAnnotation>\n","import { z } from 'zod'\n\nexport const zSort = z.object({\n  order: z.enum(['asc', 'desc']).default('asc'),\n  orderBy: z.string().nullish(),\n  customOrder: z.array(z.any()).nullish(),\n})\n\n/**\n * @description 类目轴排序配置, 支持根据维度或指标排序, 以及自定义排序顺序\n * @default {}\n * @example \n * - order:'asc'\n * - orderBy:'date'\n * 或\n * - customOrder:['2019', '2020', '2021']\n */\nexport type Sort = {\n  /**\n   * @description 排序顺序, 可选值为 'asc' 或 'desc'\n   * @enum ['asc', 'desc']\n   * @example order:'asc'\n   */\n  order?: 'asc' | 'desc'\n\n  /**\n   * @description 排序依赖的字段, 可以是维度id或指标id\n   * @example \n   * - orderBy:'date'\n   * - orderBy:'profit'\n   */\n  orderBy?: string\n\n  /**\n   * @description 自定义排序顺序, 该顺序将直接应用至类目轴\n   */\n  customOrder?: string[]\n}\n","import { z } from 'zod'\n\nexport const zSortLegend = z.object({\n  order: z.enum(['asc', 'desc']).default('asc'),\n  orderBy: z.string().nullish(),\n  customOrder: z.array(z.any()).nullish(),\n})\n\n/**\n * @description 图例排序配置, 支持根据维度或指标排序, 以及自定义排序顺序; 排序数组遵循从左到右或从上到下的顺序\n * @default {}\n * @example \n * - order:'asc'\n * - orderBy:'date'\n * 或\n * - customOrder:['2019', '2020', '2021']\n */\nexport type SortLegend = {\n  /**\n   * @description 排序顺序, 可选值为 'asc' 或 'desc'\n   * @default 'asc'\n   * @enum ['asc', 'desc']\n   * @example order:'asc'\n   */\n  order?: 'asc' | 'desc'\n  /**\n   * @description 排序依赖的字段, 可以是维度id或指标id\n   * @example \n   * - orderBy:'date'\n   * - orderBy:'profit'\n   */\n  orderBy?: string\n  /**\n   * @description 自定义排序顺序, 该顺序将直接应用至图例, 升序从左到右或从上到下, 降序从右到左或从下到上\n   */\n  customOrder?: string[]\n}\n","import { z } from 'zod'\n\nexport const zAnalysis = z.object({\n  orderMapping: z.record(z.string(), z.array(z.string())).nullish(),\n})\n","import { z } from 'zod'\n\nexport type Locale = 'zh-CN' | 'en-US'\n\nexport type TranslateRecordType = Record<string, { [local in Locale]: string }>\n\nexport const zLocale = z.enum(['zh-CN', 'en-US']).default('zh-CN')\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport { zBackgroundColor, zDataset, zDimensions, zMeasureTree, zTheme } from '../../properties'\n\nexport const zTable = z.object({\n  chartType: z.literal('table'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n\n  backgroundColor: zBackgroundColor.nullish(),\n  borderColor: z.string().nullish(),\n  bodyFontSize: z.number().nullish(),\n  bodyFontColor: z.string().nullish(),\n  bodyBackgroundColor: z.string().nullish(),\n  hoverBodyBackgroundColor: z.string().nullish(),\n  hoverBodyInlineBackgroundColor: z.string().nullish(),\n  headerFontSize: z.number().nullish(),\n  headerFontColor: z.string().nullish(),\n  headerBackgroundColor: z.string().nullish(),\n  hoverHeaderBackgroundColor: z.string().nullish(),\n  hoverHeaderInlineBackgroundColor: z.string().nullish(),\n  selectedBorderColor: z.string().nullish(),\n  selectedBackgroundColor: z.string().nullish(),\n\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport { zBackgroundColor, zDataset, zDimensions, zTheme, zMeasures } from '../../properties'\n\nexport const zPivotTable = z.object({\n  chartType: z.literal('pivotTable'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasures.nullish(),\n\n  backgroundColor: zBackgroundColor.nullish(),\n  borderColor: z.string().nullish(),\n  bodyFontSize: z.number().nullish(),\n  bodyFontColor: z.string().nullish(),\n  bodyBackgroundColor: z.string().nullish(),\n  hoverBodyBackgroundColor: z.string().nullish(),\n  hoverBodyInlineBackgroundColor: z.string().nullish(),\n  headerFontSize: z.number().nullish(),\n  headerFontColor: z.string().nullish(),\n  headerBackgroundColor: z.string().nullish(),\n  hoverHeaderBackgroundColor: z.string().nullish(),\n  hoverHeaderInlineBackgroundColor: z.string().nullish(),\n  selectedBorderColor: z.string().nullish(),\n  selectedBackgroundColor: z.string().nullish(),\n\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zColor,\n  zCrosshairLine,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zLineStyle,\n  zMeasureTree,\n  zPointStyle,\n  zSort,\n  zSortLegend,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nimport { z } from 'zod'\n\nexport const zLine = z.object({\n  chartType: z.literal('line'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n  sort: zSort.nullish(),\n  sortLegend: zSortLegend.nullish(),\n  theme: zTheme.nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  lineStyle: z.array(zLineStyle).or(zLineStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\nimport { z } from 'zod'\n\nexport const zColumn = z.object({\n  chartType: z.literal('column'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nimport { z } from 'zod'\n\nexport const zColumnParallel = z.object({\n  chartType: z.literal('columnParallel'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nimport { z } from 'zod'\n\nexport const zColumnPercent = z.object({\n  chartType: z.literal('columnPercent'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXLinearAxis,\n  zYBandAxis,\n} from '../../properties'\n\nimport { z } from 'zod'\n\nexport const zBar = z.object({\n  chartType: z.literal('bar'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYBandAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXLinearAxis,\n  zYBandAxis,\n} from '../../properties'\n\nexport const zBarParallel = z.object({\n  chartType: z.literal('barParallel'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYBandAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zStackCornerRadius,\n  zTheme,\n  zTooltip,\n  zXLinearAxis,\n  zYBandAxis,\n} from '../../properties'\n\nexport const zBarPercent = z.object({\n  chartType: z.literal('barPercent'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYBandAxis.nullish(),\n  crosshairRect: zCrosshairRect.nullish(),\n  stackCornerRadius: zStackCornerRadius.nullish(),\n  theme: zTheme.nullish(),\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zAreaStyle,\n  zBackgroundColor,\n  zColor,\n  zCrosshairLine,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zLineStyle,\n  zMeasureTree,\n  zPointStyle,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nexport const zArea = z.object({\n  chartType: z.literal('area'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n  theme: zTheme.nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  lineStyle: z.array(zLineStyle).or(zLineStyle).nullish(),\n  areaStyle: z.array(zAreaStyle).or(zAreaStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zAreaStyle,\n  zBackgroundColor,\n  zColor,\n  zCrosshairLine,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zLineStyle,\n  zMeasureTree,\n  zPointStyle,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nimport { z } from 'zod'\n\nexport const zAreaPercent = z.object({\n  chartType: z.literal('areaPercent'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n  theme: zTheme.nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  lineStyle: z.array(zLineStyle).or(zLineStyle).nullish(),\n  areaStyle: z.array(zAreaStyle).or(zAreaStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\n\nimport { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zAreaStyle,\n  zBackgroundColor,\n  zCrosshairLine,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLineStyle,\n  zMeasureTree,\n  zPointStyle,\n  zTheme,\n  zXBandAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nexport const zAreaRange = z.object({\n  chartType: z.literal('areaRange'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  label: zLabel.nullish(),\n  xAxis: zXBandAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n  theme: zTheme.nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  lineStyle: z.array(zLineStyle).or(zLineStyle).nullish(),\n  areaStyle: z.array(zAreaStyle).or(zAreaStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zBackgroundColor,\n  zColor,\n  zCrosshairLine,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zPointStyle,\n  zTheme,\n  zTooltip,\n  zXLinearAxis,\n  zYLinearAxis,\n} from '../../properties'\n\nexport const zScatter = z.object({\n  chartType: z.literal('scatter'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  xAxis: zXLinearAxis.nullish(),\n  yAxis: zYLinearAxis.nullish(),\n  crosshairLine: zCrosshairLine.nullish(),\n  theme: zTheme.nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from 'src/types/i18n'\nimport {\n  zAnnotationArea,\n  zAnnotationHorizontalLine,\n  zAnnotationPoint,\n  zAnnotationVerticalLine,\n  zAreaStyle,\n  zBackgroundColor,\n  zBarStyle,\n  zColor,\n  zCrosshairRect,\n  zDataset,\n  zDimensions,\n  zDualChartType,\n  zDualMeasures,\n  zLabel,\n  zLegend,\n  zLineStyle,\n  zMeasureTree,\n  zPointStyle,\n  zSort,\n  zSortLegend,\n  zTheme,\n  zTooltip,\n  zXBandAxis,\n  zYLinearAxis,\n} from 'src/types/properties'\n\nexport const zDualAxis = z.object({\n  chartType: z.literal('dualAxis'),\n\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  dualMeasures: zDualMeasures.nullish(),\n\n  dualChartType: z.array(zDualChartType).or(zDualChartType).nullish(),\n\n  primaryYAxis: z.array(zYLinearAxis).or(zYLinearAxis).nullish(),\n  secondaryYAxis: z.array(zYLinearAxis).or(zYLinearAxis).nullish(),\n  xAxis: zXBandAxis.nullish(),\n\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n\n  crosshairRect: zCrosshairRect.nullish(),\n  sort: zSort.nullish(),\n  sortLegend: zSortLegend.nullish(),\n  theme: zTheme.nullish(),\n\n  barStyle: z.array(zBarStyle).or(zBarStyle).nullish(),\n  pointStyle: z.array(zPointStyle).or(zPointStyle).nullish(),\n  lineStyle: z.array(zLineStyle).or(zLineStyle).nullish(),\n  areaStyle: z.array(zAreaStyle).or(zAreaStyle).nullish(),\n\n  annotationPoint: z.array(zAnnotationPoint).or(zAnnotationPoint).nullish(),\n  annotationVerticalLine: z.array(zAnnotationVerticalLine).or(zAnnotationVerticalLine).nullish(),\n  annotationHorizontalLine: z.array(zAnnotationHorizontalLine).or(zAnnotationHorizontalLine).nullish(),\n  annotationArea: z.array(zAnnotationArea).or(zAnnotationArea).nullish(),\n\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\n\nimport {\n  zBackgroundColor,\n  zColor,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zRose = z.object({\n  chartType: z.literal('rose'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zBackgroundColor,\n  zColor,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zRoseParallel = z.object({\n  chartType: z.literal('roseParallel'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zBackgroundColor,\n  zColor,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zPie = z.object({\n  chartType: z.literal('pie'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\n\nimport {\n  zBackgroundColor,\n  zColor,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zDonut = z.object({\n  chartType: z.literal('donut'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\n\nimport {\n  zBackgroundColor,\n  zColor,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLegend,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zRadar = z.object({\n  chartType: z.literal('radar'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\nimport {\n  zBackgroundColor,\n  zColorLegend,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLinearColor,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zFunnel = z.object({\n  chartType: z.literal('funnel'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zLinearColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zColorLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\nimport { zLocale } from '../../i18n'\n\nimport {\n  zBackgroundColor,\n  zColorLegend,\n  zDataset,\n  zDimensions,\n  zLabel,\n  zLinearColor,\n  zMeasureTree,\n  zTheme,\n  zTooltip,\n} from '../../properties'\n\nexport const zHeatmap = z.object({\n  chartType: z.literal('heatmap'),\n  dataset: zDataset.nullish(),\n  dimensions: zDimensions.nullish(),\n  measures: zMeasureTree.nullish(),\n  backgroundColor: zBackgroundColor.nullish(),\n  color: zLinearColor.nullish(),\n  label: zLabel.nullish(),\n  legend: zColorLegend.nullish(),\n  tooltip: zTooltip.nullish(),\n  theme: zTheme.nullish(),\n  locale: zLocale.nullish(),\n})\n","import { z } from 'zod'\n\nimport { zBar, type Bar } from './chartType/bar'\nimport { zBarParallel, type BarParallel } from './chartType/barParallel'\nimport { zColumn, type Column } from './chartType/column'\nimport { zColumnParallel, type ColumnParallel } from './chartType/columnParallel'\nimport { zColumnPercent, type ColumnPercent } from './chartType/columnPercent'\nimport { zLine, type Line } from './chartType/line'\nimport type { Table } from './chartType/table'\nimport { zRose, type Rose } from './chartType/rose'\nimport { zBarPercent, type BarPercent } from './chartType/barPercent'\nimport type { PivotTable } from './chartType/pivotTable'\nimport { zPie, type Pie } from './chartType/pie'\nimport { zDonut, type Donut } from './chartType/donut'\nimport type { DualAxis } from './chartType/dualAxis'\nimport { zArea, type Area } from './chartType/area'\nimport { zAreaPercent, type AreaPercent } from './chartType/areaPercent'\nimport type { AreaRange, Heatmap, Radar } from './chartType'\nimport {\n  zAreaRange,\n  zDualAxis,\n  zFunnel,\n  zHeatmap,\n  zPivotTable,\n  zRadar,\n  zRoseParallel,\n  zScatter,\n  zTable,\n  type Funnel,\n  type RoseParallel,\n  type Scatter,\n} from './chartType'\n\nexport type VSeed =\n  // table\n  | Table\n  | PivotTable\n\n  // cartesian\n  | Line\n  | Column\n  | ColumnParallel\n  | ColumnPercent\n  | Bar\n  | BarParallel\n  | BarPercent\n  | Area\n  | AreaPercent\n  | AreaRange\n  | Scatter\n  | DualAxis\n\n  // polar\n  | Rose\n  | RoseParallel\n  | Pie\n  | Donut\n  | Radar\n\n  // other\n  | Funnel\n  | Heatmap\n\nexport const zVSeed = z.discriminatedUnion('chartType', [\n  zTable,\n  zPivotTable,\n  // cartesian\n  zLine,\n  zColumn,\n  zColumnParallel,\n  zColumnPercent,\n  zBar,\n  zBarParallel,\n  zBarPercent,\n  zArea,\n  zAreaPercent,\n  zAreaRange,\n  zScatter,\n  zDualAxis,\n  // polar\n  zPie,\n  zDonut,\n  zRose,\n  zRoseParallel,\n  zRadar,\n  // other\n  zFunnel,\n  zHeatmap,\n])\n","import { z } from 'zod'\nimport { zChartType } from './properties/chartType'\nimport { zDataset } from './properties/dataset'\nimport { zDimensionTree } from './properties/dimensions'\nimport { zMeasureTree } from './properties/measures'\nimport { zEncoding } from './properties/encoding/encoding'\nimport { zDatasetReshapeInfo } from './properties/datasetReshapeInfo/datasetReshapeInfo'\nimport { zTheme, zCustomThemeConfig } from './properties/theme'\nimport { zConfig } from './properties/config'\nimport { zAnalysis, zAnnotation, zMarkStyle } from './properties'\nimport { zLocale } from './i18n'\n\nexport const zAdvancedVSeed = z.object({\n  chartType: zChartType,\n  dataset: zDataset,\n  datasetReshapeInfo: zDatasetReshapeInfo,\n  dimensions: zDimensionTree,\n  measures: zMeasureTree,\n  encoding: zEncoding,\n  config: zConfig,\n  analysis: zAnalysis,\n  theme: zTheme,\n  markStyle: zMarkStyle,\n  customTheme: zCustomThemeConfig,\n  annotation: zAnnotation,\n  locale: zLocale,\n})\n\nexport type AdvancedVSeed = z.infer<typeof zAdvancedVSeed>\n"],"names":["AggregationType","SortType","execPipeline","pipeline","context","initialValue","prev","cur","Intl","translateMap","value","segments","values","text","segment","index","translatedText","isNullish","console","locale","intl","i18n","Builder","vseed","build","builder","advancedVSeed","Error","spec","advanced","buildSpec","start","performance","Date","chartType","e","end","buildAdvanced","getColorItems","datasetReshapeInfo","colorItems","unique","d","colorIdMap","getColorIdMap","customPipe","themeKey","initAdvancedVSeed","preorderTraverse","tree","callback","stack","node","children","i","child","findMeasureById","result","measures","id","findFirstMeasure","findAllMeasures","records","dataset","theme","customTheme","chartConfigTheme","chartConfig","mergedConfig","mergeDeep","clone","_k","Array","mergeArray","chartCustomTheme","arr","themeItem","isString","isNumber","isObjectType","item","merge","tableAdvancedPipeline","top100dataset","Object","key","undefined","measure","dimensions","dim","config","pick","isMeasure","isMeasureGroup","isMeasures","treeTreeToColumns","field","groupNode","title","props","createNumFormatter","format","type","ratio","symbol","thousandSeparator","prefix","suffix","fractionDigits","significantDigits","roundingMode","roundingPriority","numFormatterOptions","numFormatter","num","Number","typeSymbol","String","numStr","parts","autoNumFormatter","createFormatter","autoFormatter","bodyStyle","themeConfig","borderColor","backgroundColor","fontColor","fontSize","hoverCellBgColor","hoverInlineColor","headerStyle","themConfig","frameStyle","selectionStyle","tableSpecPipeline","columns","datum","autoFormat","isEmpty","formatter","registerTable","findDimensionById","findFirstDimension","findAllDimensions","pivotTableAdvancedPipeline","newDimensions","sample","pivotTableSpecPipeline","rows","hoverCellColor","aggregationRules","registerPivotTable","measureDepth","depth","Math","isTable","isPivotTable","isVTable","isVChart","isPivotChart","hasRowOrColumnDimension","dimension","hasMeasureGroup","autoMeasures","autoMeasureGroup","newMeasures","currentGroup","createEmptyMeasureGroup","measureGroups","autoDimensions","pivotAdapter","pivotPipeline","FoldMeasureName","FoldMeasureId","FoldMeasureValue","FoldPrimaryMeasureValue","FoldSecondaryMeasureValue","UnfoldDimensionGroup","UnfoldDimensionGroupId","Separator","ORIGINAL_DATA","foldMeasures","measureId","measureName","measureValue","foldInfo","ids","j","omit","alias","unfoldDimensions","unfoldStartIndex","unfoldGroupName","unfoldGroupId","foldMeasureId","dimensionsSeparator","dimensionsToBeUnfolded","unfoldInfo","colorMap","colorName","generateDimGroupName","colorId","dimensionsToBeGrouped","unfoldZeroDimensions","emptyReshapeResult","dataReshapeFor2D1M0Name","options","foldMeasureName","foldMeasureValue","unfoldDimensionGroup","unfoldDimensionGroupId","foldedDataset","finalDataset","onlyOneMeasure","onlyOneDimension","dims","reshapeTo2D1M0Name","newDatasets","pivotReshapeTo2D1M0Name","commonDimensions","measureGroup","groupId","newSubDataset","encodingXY","xDimension","isZeroDimension","encoding","x","y","group","color","sortXBandAxis","sortAxis","xField","axisOrderResult","calcOrder","sortYBandAxis","yField","sortLegend","groupField","nameMap","pre","orderRes","itemNameOrId","sortConfig","order","orderBy","res","sort","a","b","aValue","bValue","lineConfig","columnConfig","pieConfig","markStyle","annotation","lineAdvancedPipeline","initLine","baseConfig","colorScheme","colorMapping","mappingList","_","v","datasetXY","analysis","orderMapping","angle","fields","progressive","xBand","visible","label","tick","grid","line","labelAutoHide","labelAutoHideGap","labelAutoLimit","labelAutoLimitLength","labelAutoRotate","labelAutoRotateAngleRange","bandAxis","sampling","yLinear","zero","nice","inverse","max","min","log","logBase","linearAxis","enable","formatValue","tooltip","groupName","verticalCrosshairLine","lineColor","labelColor","labelVisible","labelBackgroundColor","crosshair","discreteLegend","legend","position","labelFontColor","labelFontSize","labelFontWeight","maxSize","border","shapeType","orient","items","selector","vchartDatum","vchartKeys","k","selectors","isValueSelector","isMeasureSelector","op","selectorValueArr","isDimensionSelector","isPartialDatumSelector","pointStyle","customMap","pointStyles","style","pointBorderColor","pointBorderStyle","pointBorderWidth","pointColor","pointColorOpacity","pointSize","pointStateDimensionHover","point","pointStateHover","lineStyle","lineStyles","lineGroups","groupBy","lineColorOpacity","lineSmooth","lineWidth","dashSegment","dashGap","isSubset","sub","obj","annotationPoint","markPoint","annotationPointList","selectorPoint","textColor","textFontSize","textFontWeight","textAlign","textBaseline","textBackgroundBorderColor","textBackgroundBorderRadius","textBackgroundBorderWidth","textBackgroundColor","textBackgroundPadding","textBackgroundVisible","offsetX","offsetY","selectedData","data","targetDatum","annotationVerticalLine","annotationVerticalLineList","positionMap","markLine","xValue","textPosition","lineVisible","generateOneMarkLine","isArray","xValueArr","newMarkLine","annotationHorizontalLine","yValue","yValueArr","annotationArea","annotationAreaList","markArea","areaColor","areaColorOpacity","areaBorderColor","areaBorderRadius","areaBorderWidth","outerPadding","labelPosition","isBottom","xyList","positionData","yAxisHelper","xAxisHelper","yScale","minX","maxX","minY","maxY","t","xScale","initPivot","pivotGridStyle","transparent","hoverBackgroundColor","pivotIndicators","chartPipeline","indicators","reshapeInfo","newEncoding","newDatasetReshapeInfo","chartSpec","pivotIndicatorsAsRow","pivotIndicatorsAsCol","datasetPivot","pivotRowDimensions","rowDimensions","pivotColumnDimensions","columnDimensions","pivotDiscreteLegend","legends","c","lineSpecPipeline","registerLine","dataReshapeFor2D1M","reshapeTo2D1M","pivotReshapeTo2D1M","columnAdvancedPipeline","initColumn","stackCornerRadius","stackInverse","verticalCrosshairRect","rectColor","barStyle","showStroke","barStyles","barBorderColor","barBorderStyle","barBorderWidth","barColor","barColorOpacity","barRadius","annotationAreaBand","xBandWidth","yBandWidth","columnSpecPipeline","registerColumn","columnParallelAdvancedPipeline","initColumnParallel","columnParallelSpecPipeline","registerColumnParallel","columnPercentAdvancedPipeline","percent","columnPercentSpecPipeline","registerColumnPercent","encodingYX","yDimension","barAdvancedPipeline","initBar","datasetYX","xLinear","yBand","horizontalCrosshairRect","barSpecPipeline","registerBar","barParallelAdvancedPipeline","initBarParallel","barParallelSpecPipeline","registerBarParallel","barPercentAdvancedPipeline","barPercentSpecPipeline","registerBarPercent","areaAdvancedPipeline","initArea","areaStyle","areaStyles","areaSpecPipeline","registerArea","areaPercentAdvancedPipeline","areaPercentSpecPipeline","registerAreaPercent","auto2M1Group","allMeasures","groups","singleMeasures","dataReshapeFor1D","areaRangeAdvancedPipeline","m1","m2","series","args","seriesDualAxis","createDualContext","initAreaRange","initAreaRangeLine1","initAreaRangeLine2","tooltipDisable","tooltipAreaRange","areaRangeSpecPipeline","registerAreaRange","dataReshapeFor1D2M","scatterAdvancedPipeline","firstMeasure","initScatter","horizontalCrosshairLine","scatterSpecPipeline","registerScatter","dualAxisAdvancedPipeline","dualMeasures","dualMeasuresToMeasureTree","measureTree","primaryMeasures","secondaryMeasures","groupChildren","arrPrimaryMeasures","arrSecondaryMeasures","datasets","foldInfoList","unfoldInfoList","datasetList","initDualAxisPrimary","initDualAxisSecondary","dualChartTypePrimary","primary","columnSpec","dualChartTypeSecondary","secondary","datasetPrimary","datasetSecondary","labelPrimary","labelSecondary","tooltipPrimary","tooltipSecondary","yLinearPrimary","primaryYAxis","seriesId","yLinearSecondary","secondaryYAxis","dualAxisSpecPipeline","dataReshapeFor1D1M","reshapeTo1D1M","pivotReshapeTo1D1M","encodingPie","radius","pieAdvancedPipeline","initPie","pieSpecPipeline","registerPie","donutAdvancedPipeline","initDonut","donutSpecPipeline","registerDonut","encodingRose","angleDimension","is1D1M","roseAdvancedPipeline","initRose","hasNegativeValue","radiusAxis","is0D","is1M1D","showAxis","angleAxis","roseSpecPipeline","registerRose","roseParallelAdvancedPipeline","initRoseParallel","roseParallelSpecPipeline","registerRoseParallel","radarAdvancedPipeline","initRadar","radarAngleAxis","radarRadiusAxis","radarSpecPipeline","registerRadar","funnelAdvancedPipeline","size","initFunnel","linearColor","colorLegend","funnelSpecPipeline","registerFunnel","heatmapAdvancedPipeline","labelColorInversion","initHeatmap","heatmapSpecPipeline","registerHeatmap","lightTheme","barBandAxis","crosshairLine","crosshairRect","tableConfig","darkTheme","registerCustomTheme","registerLightTheme","registerDarkTheme","registerAll","updateAdvanced","advancedPipe","updateSpec","specPipe","isDimension","isDimensionGroup","isDimensions","zChartType","z","zDualChartType","zDatum","zDataset","zDimension","zDimensionGroup","zDimensions","zDimensionTree","zNumFormat","zMeasure","zMeasureGroup","zMeasures","zMeasureTree","zDualMeasure","zDualMeasures","zFoldInfo","zUnfoldInfo","zDatasetReshapeInfo","zEncoding","zXBandAxis","zYBandAxis","zXLinearAxis","zYLinearAxis","zCrosshairLine","zCrosshairRect","zStackCornerRadius","zBackgroundColor","zColor","zLinearColor","zLabel","zLegend","zColorLegend","zTooltip","zTableConfig","zPivotTableConfig","zLineConfig","zColumnConfig","zColumnParallelConfig","zColumnPercentConfig","zBarConfig","zBarParallelConfig","zBarPercentConfig","zAreaConfig","zAreaPercentConfig","zAreaRangeConfig","zDualAxisConfig","zScatterConfig","zRoseConfig","zRoseParallelConfig","zPieConfig","zDonutConfig","zRadarConfig","zFunnelConfig","zHeatmapConfig","zConfig","zAxis","zCustomThemeConfig","zCustomTheme","zTheme","zSelector","zSelectors","zBarStyle","zPointStyle","zLineStyle","zAreaStyle","zMarkStyle","zAnnotationPoint","zAnnotationVerticalLine","zAnnotationHorizontalLine","zAnnotationArea","zAnnotation","zSort","zSortLegend","zAnalysis","zLocale","zTable","zPivotTable","zLine","zColumn","zColumnParallel","zColumnPercent","zBar","zBarParallel","zBarPercent","zArea","zAreaPercent","zAreaRange","zScatter","zDualAxis","zRose","zRoseParallel","zPie","zDonut","zRadar","zFunnel","zHeatmap","zVSeed","zAdvancedVSeed"],"mappings":"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"}