"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["68"],{9987:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var t=r(31549),s=r(6603),i=r(89956);function l(e){return(0,t.jsx)(i.Z,{code:"const Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      {\n        人效提升: 45,\n        季度: 'Q1',\n      },\n      {\n        人效提升: 90,\n        季度: 'Q2',\n      },\n      {\n        人效提升: 141.55,\n        季度: 'Q3',\n      },\n      {\n        人效提升: 170,\n        季度: 'Q4(预测)',\n      },\n      {\n        人效提升: 195,\n        季度: 'Q1(预测)',\n      },\n      {\n        人效提升: 215,\n        季度: 'Q2(预测)',\n      },\n    ],\n    dimensions: [\n      {\n        id: '季度',\n        alias: '季度时间',\n      },\n    ],\n    measures: [\n      {\n        id: '人效提升',\n        alias: '写接口diff&函数diff人效提升',\n      },\n    ],\n    annotationVerticalLine: {\n      xValue: ['Q3', 'Q4(预测)'],\n      text: '实际 | 预测',\n      textPosition: 'outsideEnd',\n      textColor: '#666666',\n      textFontSize: 12,\n      textFontWeight: 400,\n      textAlign: 'center',\n      textBaseline: 'top',\n      offsetY: 0,\n      offsetX: 0,\n      lineVisible: true,\n      lineColor: 'gray',\n      lineWidth: 1,\n      lineStyle: 'dashed',\n      backgroundVisible: false,\n    },\n    label: {\n      enable: true,\n    },\n    yAxis: {\n      grid: {\n        visible: true,\n        gridColor: 'rgba(54, 65, 89, 0.15)',\n        gridWidth: 0.5,\n      },\n    },\n    legend: {\n      enable: true,\n    },\n    lineStyle: {\n      selector: {\n        field: '季度',\n        operator: 'in',\n        value: ['Q4(预测)', 'Q1(预测)', 'Q2(预测)'],\n      },\n      lineColor: 'blue',\n      lineStyle: 'dashed',\n    },\n    pointStyle: {\n      selector: {\n        field: '季度',\n        operator: '==',\n        value: 'Q3',\n      },\n      pointColor: 'red',\n    },\n    locale: 'zh-CN',\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect } from 'react'\nimport { useDark } from 'rspress/runtime'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable, PivotChart, register } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isPivotTable, isTable, zVSeed } from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n    console.log('builder', builder)\n    console.log('builder performance', builder.performance)\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    ></div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"",editorPosition:"left"})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(l,e)})):l(e)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["zh-CN%2Fplayground%2Findex.mdx"]={toc:[],title:"标题",headingTitle:"",frontmatter:{title:"标题",playgroundDirection:"horizontal",pageType:"custom"}}}}]);
//# sourceMappingURL=68.b1863bb7.js.map