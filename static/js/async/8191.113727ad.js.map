{"version":3,"file":"static/js/async/8191.113727ad.js","sources":["webpack://website/./components/render/Chart.tsx","webpack://website/./components/render/PivotChart.tsx","webpack://website/./components/render/Table.tsx","webpack://website/./components/render/PivotTable.tsx","webpack://website/./components/gallery/chartType/table.tsx","webpack://website/./components/gallery/chartType/pivotTable.tsx","webpack://website/./components/gallery/chartType/line.tsx","webpack://website/./components/gallery/chartType/column.tsx","webpack://website/./components/gallery/chartType/columnParallel.tsx","webpack://website/./components/gallery/chartType/columnPercent.tsx","webpack://website/./components/gallery/chartType/bar.tsx","webpack://website/./components/gallery/chartType/barParallel.tsx","webpack://website/./components/gallery/chartType/barPercent.tsx","webpack://website/./components/gallery/chartType/area.tsx","webpack://website/./components/gallery/chartType/areaPercent.tsx","webpack://website/./components/gallery/chartType/areaRange.tsx","webpack://website/./components/gallery/chartType/scatter.tsx","webpack://website/./components/gallery/chartType/pie.tsx","webpack://website/./components/gallery/chartType/donut.tsx","webpack://website/./components/gallery/chartType/radar.tsx","webpack://website/./components/gallery/chartType/rose.tsx","webpack://website/./components/gallery/chartType/roseParallel.tsx","webpack://website/./components/gallery/chartType/heatmap.tsx","webpack://website/./components/gallery/chartType/funnel.tsx","webpack://website/./components/gallery/dataset/dataset.tsx","webpack://website/./components/gallery/dataset/autoDataset.tsx","webpack://website/./components/gallery/dataset/dataset3M0D.tsx","webpack://website/./components/gallery/dataset/dataset3M1D.tsx","webpack://website/./components/gallery/dataset/dataset3M3D.tsx","webpack://website/./components/gallery/dataset/dataset1M0D.tsx","webpack://website/./components/gallery/dataset/dataset1M1D.tsx","webpack://website/./components/gallery/dataset/dataset1M3D.tsx","webpack://website/./components/gallery/measures/measureGroups.tsx","webpack://website/./components/gallery/measures/measures.tsx","webpack://website/./components/gallery/dimensions/Dimensions.tsx","webpack://website/./components/gallery/dimensions/ColumnDimensions.tsx","webpack://website/./components/gallery/dimensions/RowDimensions.tsx","webpack://website/./components/gallery/dimensions/PivotDimensions.tsx","webpack://website/./components/gallery/baseConfig/color.tsx","webpack://website/./components/gallery/baseConfig/backgroundColor.tsx","webpack://website/./components/gallery/baseConfig/label.tsx","webpack://website/./components/gallery/baseConfig/legend.tsx","webpack://website/./components/gallery/baseConfig/tooltip.tsx","webpack://website/./components/gallery/chartConfig/line/yAxis.tsx","webpack://website/./components/gallery/chartConfig/line/xAxis.tsx","webpack://website/./components/gallery/chartConfig/column/yAxis.tsx","webpack://website/./components/gallery/chartConfig/column/xAxis.tsx","webpack://website/./components/gallery/chartConfig/columnPercent/yAxis.tsx","webpack://website/./components/gallery/chartConfig/columnPercent/xAxis.tsx","webpack://website/./components/gallery/chartConfig/columnParallel/yAxis.tsx","webpack://website/./components/gallery/chartConfig/columnParallel/xAxis.tsx","webpack://website/./components/gallery/chartConfig/bar/xAxis.tsx","webpack://website/./components/gallery/chartConfig/bar/yAxis.tsx","webpack://website/./components/gallery/chartConfig/barPercent/xAxis.tsx","webpack://website/./components/gallery/chartConfig/barPercent/yAxis.tsx","webpack://website/./components/gallery/chartConfig/barParallel/xAxis.tsx","webpack://website/./components/gallery/chartConfig/barParallel/yAxis.tsx","webpack://website/./components/gallery/chartConfig/area/yAxis.tsx","webpack://website/./components/gallery/chartConfig/area/xAxis.tsx","webpack://website/./components/gallery/chartConfig/areaPercent/yAxis.tsx","webpack://website/./components/gallery/chartConfig/areaPercent/xAxis.tsx","webpack://website/./components/gallery/markStyle/barStyle.tsx","webpack://website/./components/gallery/markStyle/pointStyle.tsx","webpack://website/./components/gallery/markStyle/areaStyle.tsx","webpack://website/./components/gallery/markStyle/lineStyle.tsx","webpack://website/./components/gallery/annotation/annotationPoint.tsx","webpack://website/./components/gallery/annotation/annotationVerticalLine.tsx","webpack://website/./components/gallery/annotation/annotationHorizontalLine.tsx","webpack://website/./components/gallery/annotation/annotationArea.tsx","webpack://website/./components/gallery/theme/ThemeDark.tsx","webpack://website/./components/gallery/theme/ThemeLight.tsx","webpack://website/./components/gallery/analysis/sortAxis.tsx","webpack://website/./components/gallery/analysis/sortLegend.tsx"],"sourcesContent":["import { useDark } from 'rspress/runtime'\n\nimport { useRef, useEffect, memo } from 'react'\nimport VChart, { ISpec } from '@visactor/vchart'\nimport { registerAll, VSeed, Builder } from '@visactor/vseed'\nregisterAll()\n\nexport const VChartRender = memo((props: { vseed: VSeed }) => {\n  const {\n    vseed = {\n      chartType: 'column',\n      dataset: [\n        { date: '2019', type: 'A', profit: 10, sales: 100 },\n        { date: '2020', type: 'A', profit: 30, sales: 3200 },\n        { date: '2021', type: 'A', profit: 30, sales: 300 },\n        { date: '2022', type: 'A', profit: 50, sales: 2400 },\n        { date: '2023', type: 'A', profit: 40, sales: 500 },\n\n        { date: '2019', type: 'B', profit: 10, sales: 100 },\n        { date: '2020', type: 'B', profit: 30, sales: 3200 },\n        { date: '2021', type: 'B', profit: 30, sales: 300 },\n        { date: '2022', type: 'B', profit: 50, sales: 2400 },\n        { date: '2023', type: 'B', profit: 40, sales: 500 },\n      ],\n      dimensions: [\n        {\n          id: 'date',\n          alias: '日期',\n          location: 'dimension',\n        },\n        {\n          id: 'type',\n          alias: '类型',\n          location: 'dimension',\n        },\n      ],\n      measures: [\n        { id: 'profit', alias: '利润' },\n        { id: 'sales', alias: '销售额' },\n      ],\n    },\n  } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>(\n    Builder.from({\n      chartType: 'line',\n      dataset: [],\n    }),\n  )\n\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const builder = Builder.from({ ...vseed, theme: dark ? 'dark' : 'light' })\n    builderRef.current = builder\n\n    const spec = builder.build() as ISpec\n    const vchart = new VChart(spec, { dom: ref.current })\n\n    vchart.renderSync()\n\n    return () => vchart.release()\n  }, [dark])\n\n  return (\n    <div\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n      style={{\n        padding: '1rem 1.25rem',\n        height: 300,\n        width: '100%',\n        border: '1px solid var(--rp-c-divider-light)',\n        borderRadius: '1rem',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        ref={ref}\n        style={{\n          height: '100%',\n          width: '100%',\n        }}\n      ></div>\n    </div>\n  )\n})\n","import { useRef, useEffect, memo } from 'react'\nimport VChart from '@visactor/vchart'\nimport { register, PivotChart as VTablePivotChart, PivotChartConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroupId } from '@visactor/vseed'\nimport { useDark } from 'rspress/runtime'\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nexport const PivotChart = memo((props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>(\n    Builder.from({\n      chartType: 'line',\n      dataset: [],\n    }),\n  )\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const builder = Builder.from({ ...vseed, theme: dark ? 'dark' : 'light' })\n    builderRef.current = builder\n\n    const spec = builder.build() as PivotChartConstructorOptions\n    const tableInstance = new VTablePivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  }, [dark])\n\n  return (\n    <div\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n      style={{\n        padding: '1rem 1.25rem',\n        height: 400,\n        width: '100%',\n        border: '1px solid var(--rp-c-divider-light)',\n        borderRadius: '1rem',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        ref={ref}\n        style={{\n          height: '100%',\n          width: '100%',\n        }}\n      ></div>\n    </div>\n  )\n})\n","import { useRef, useEffect, memo } from 'react'\nimport { ListTable as VTableListTable, ListTableConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroupId } from '@visactor/vseed'\nimport { useDark } from 'rspress/runtime'\n\nregisterAll()\n\nexport const Table = memo((props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>(\n    Builder.from({\n      chartType: 'line',\n      dataset: [],\n    }),\n  )\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const builder = Builder.from({ ...vseed, theme: dark ? 'dark' : 'light' })\n    builderRef.current = builder\n\n    const spec = builder.build() as ListTableConstructorOptions\n    const tableInstance = new VTableListTable(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  }, [dark])\n\n  return (\n    <div\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n      style={{\n        padding: '1rem 1.25rem',\n        height: 400,\n        width: '100%',\n        border: '1px solid var(--rp-c-divider-light)',\n        borderRadius: '1rem',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        ref={ref}\n        style={{\n          height: '100%',\n          width: '100%',\n        }}\n      ></div>\n    </div>\n  )\n})\n","import { useRef, useEffect, memo } from 'react'\nimport { PivotTable as VTablePivotTable, PivotTableConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroupId } from '@visactor/vseed'\nimport { useDark } from 'rspress/runtime'\n\nregisterAll()\n\nexport const PivotTable = memo((props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>(\n    Builder.from({\n      chartType: 'line',\n      dataset: [],\n    }),\n  )\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const builder = Builder.from({ ...vseed, theme: dark ? 'dark' : 'light' })\n    builderRef.current = builder\n\n    const spec = builder.build() as PivotTableConstructorOptions\n    const tableInstance = new VTablePivotTable(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  }, [dark])\n\n  return (\n    <div\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n      style={{\n        padding: '1rem 1.25rem',\n        height: 400,\n        width: '100%',\n        border: '1px solid var(--rp-c-divider-light)',\n        borderRadius: '1rem',\n        overflow: 'hidden',\n      }}\n    >\n      <div\n        ref={ref}\n        style={{\n          height: '100%',\n          width: '100%',\n        }}\n      ></div>\n    </div>\n  )\n})\n","import { VSeed } from '@visactor/vseed'\nimport { Table as VTableTable } from 'components/render'\nimport { memo } from 'react'\n\nexport const TableAuto = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n  }\n  return <VTableTable vseed={vseed} />\n})\n\nexport const TableBasic = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n      },\n    ],\n  }\n  return <VTableTable vseed={vseed} />\n})\n\nexport const TableGroup = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'table',\n        alias: '销售指标',\n        children: [\n          {\n            id: 'countInfo',\n            alias: '数量信息',\n            children: [\n              {\n                id: 'leftCount',\n                alias: '遗留数量',\n              },\n              {\n                id: 'salesCount',\n                alias: '销售数',\n              },\n            ],\n          },\n          {\n            id: 'saleInfo',\n            alias: '销售信息',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售量',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    dimensions: [\n      {\n        id: 'dimensionGroup',\n        alias: '维度组',\n        children: [\n          {\n            id: 'date',\n            alias: '日期',\n          },\n          {\n            id: 'type',\n            alias: '类型',\n          },\n        ],\n      },\n    ],\n  }\n  return <VTableTable vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { PivotTable as VTablePivotTable } from 'components/render'\nimport { memo } from 'react'\n\nexport const PivotTableAuto = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n  }\n  return <VTablePivotTable vseed={vseed} />\n})\n\nexport const PivotTableRowDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'rowDimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'rowDimension',\n      },\n    ],\n  }\n  return <VTablePivotTable vseed={vseed} />\n})\n\nexport const PivotTableColumnDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'columnDimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'columnDimension',\n      },\n    ],\n  }\n  return <VTablePivotTable vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const LineChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationLineChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotLineChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const ColumnChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationColumnChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotColumnChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const ColumnParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationColumnParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotColumnParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const ColumnPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationColumnPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotColumnPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const BarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationBarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotBarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const BarParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationBarParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotBarParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const BarPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationBarPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotBarPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const AreaChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationAreaChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotAreaChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const AreaPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationAreaPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotAreaPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const AreaRangeChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaRange',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationAreaRangeChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaRange',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotAreaRangeChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaRange',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const ScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 200, sales: 80 },\n    ],\n    measures: [\n      {\n        id: 'sales',\n        alias: '销售额',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    label: {\n      enable: false,\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 200, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 200 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const PieChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pie',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationPieChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pie',\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotPieChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pie',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const DonutChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'donut',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationDonutChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'donut',\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotDonutChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'donut',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const RadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dataset: [{ profit: 10, sales: 20, count: 50, rateOfReturn: 1 }],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationRadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotRadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2021', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2021', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2021', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2021', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2021', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2021', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2021', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const RoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2023', profit: 40 },\n      { date: '2022', profit: 50 },\n      { date: '2021', profit: 25 },\n      { date: '2020', profit: 30 },\n      { date: '2019', profit: 10 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const RoseChartOnlyMeasures = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [{ profit: 40, sales: 100, goalSales: 200, count: 20 }],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const StackedRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const RoseParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'roseParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationRoseParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'roseParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotRoseParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'roseParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const HeatmapChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dataset: [\n      {\n        type: 'A',\n        subType: 'a',\n        value: 98,\n      },\n      {\n        type: 'A',\n        subType: 'b',\n        value: 71,\n      },\n      {\n        type: 'A',\n        subType: 'c',\n        value: 22,\n      },\n      {\n        type: 'A',\n        subType: 'd',\n        value: 49,\n      },\n      {\n        type: 'A',\n        subType: 'e',\n        value: 92,\n      },\n      {\n        type: 'B',\n        subType: 'a',\n        value: 85,\n      },\n      {\n        type: 'B',\n        subType: 'b',\n        value: 45,\n      },\n      {\n        type: 'B',\n        subType: 'c',\n        value: 19,\n      },\n      {\n        type: 'B',\n        subType: 'd',\n        value: 58,\n      },\n      {\n        type: 'B',\n        subType: 'e',\n        value: 26,\n      },\n      {\n        type: 'C',\n        subType: 'a',\n        value: 44,\n      },\n      {\n        type: 'C',\n        subType: 'b',\n        value: 23,\n      },\n      {\n        type: 'C',\n        subType: 'c',\n        value: 6,\n      },\n      {\n        type: 'C',\n        subType: 'd',\n        value: 42,\n      },\n      {\n        type: 'C',\n        subType: 'e',\n        value: 27,\n      },\n      {\n        type: 'D',\n        subType: 'a',\n        value: 79,\n      },\n      {\n        type: 'D',\n        subType: 'b',\n        value: 89,\n      },\n      {\n        type: 'D',\n        subType: 'c',\n        value: 65,\n      },\n      {\n        type: 'D',\n        subType: 'd',\n        value: 56,\n      },\n      {\n        type: 'D',\n        subType: 'e',\n        value: 1,\n      },\n      {\n        type: 'E',\n        subType: 'a',\n        value: 59,\n      },\n      {\n        type: 'E',\n        subType: 'b',\n        value: 94,\n      },\n      {\n        type: 'E',\n        subType: 'c',\n        value: 45,\n      },\n      {\n        type: 'E',\n        subType: 'd',\n        value: 80,\n      },\n      {\n        type: 'E',\n        subType: 'e',\n        value: 47,\n      },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationHeatmapChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotHeatmapChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { memo } from 'react'\nimport { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { PivotChart } from '../../render/PivotChart'\n\nexport const FunnelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'funnel',\n    dataset: [\n      { date: '2022', profit: 100, sales: 100 },\n      { date: '2023', profit: 80, sales: 80 },\n      { date: '2020', profit: 60, sales: 60 },\n      { date: '2021', profit: 40, sales: 40 },\n      { date: '2019', profit: 20, sales: 20 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const CombinationFunnelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'funnel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const PivotFunnelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'funnel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售量' },\n    ],\n    dimensions: [\n      { id: 'date', alias: '日期', location: 'dimension' },\n      { id: 'region', alias: '区域', location: 'dimension' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', profit: 10, sales: 20 },\n      { date: '2020', region: 'east', profit: 30, sales: 60 },\n      { date: '2021', region: 'east', profit: 30, sales: 60 },\n      { date: '2022', region: 'east', profit: 50, sales: 100 },\n      { date: '2023', region: 'east', profit: 40, sales: 80 },\n\n      { date: '2019', region: 'north of east', profit: 10, sales: 20 },\n      { date: '2020', region: 'north of east', profit: 30, sales: 60 },\n      { date: '2021', region: 'north of east', profit: 30, sales: 60 },\n      { date: '2022', region: 'north of east', profit: 50, sales: 100 },\n      { date: '2023', region: 'north of east', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const AutoDataset = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', region: 'east', profit: 10, sales: 20 },\n      { date: '2020', region: 'east', profit: 30, sales: 60 },\n      { date: '2021', region: 'east', profit: 30, sales: 60 },\n      { date: '2022', region: 'east', profit: 50, sales: 100 },\n      { date: '2023', region: 'east', profit: 40, sales: 80 },\n\n      { date: '2019', region: 'north of east', profit: 10, sales: 20 },\n      { date: '2020', region: 'north of east', profit: 30, sales: 60 },\n      { date: '2021', region: 'north of east', profit: 30, sales: 60 },\n      { date: '2022', region: 'north of east', profit: 50, sales: 100 },\n      { date: '2023', region: 'north of east', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset3M0D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [{ profit: 1, sales: 2, discount: 0.1 }],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset3M1D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, discount: 0.1 },\n      { date: '2020', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2021', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2022', profit: 50, sales: 100, discount: 0.1 },\n      { date: '2023', profit: 40, sales: 80, discount: 0.1 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset3M3D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n\n      { date: '2020', region: 'north of east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset1M0D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [{ profit: 10 }],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset1M1D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10 },\n      { date: '2020', profit: 30 },\n      { date: '2021', profit: 30 },\n      { date: '2022', profit: 50 },\n      { date: '2023', profit: 40 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dataset1M3D = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 10 },\n      { date: '2019', region: 'east', city: 'B', profit: 30 },\n      { date: '2019', region: 'east', city: 'C', profit: 30 },\n      { date: '2019', region: 'east', city: 'D', profit: 50 },\n      { date: '2019', region: 'east', city: 'E', profit: 40 },\n\n      { date: '2020', region: 'north of east', city: 'A', profit: 10 },\n      { date: '2020', region: 'north of east', city: 'B', profit: 30 },\n      { date: '2020', region: 'north of east', city: 'C', profit: 30 },\n      { date: '2020', region: 'north of east', city: 'D', profit: 50 },\n      { date: '2020', region: 'north of east', city: 'E', profit: 40 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { PivotChart } from 'components/render'\nimport { memo } from 'react'\n\nexport const MeasureGroups = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    measures: [\n      {\n        id: 'group1',\n        alias: '分组1',\n        children: [\n          { id: 'profit', alias: '利润' },\n          { id: 'sales', alias: '销售额' },\n        ],\n      },\n      {\n        id: 'group2',\n        alias: '分组2',\n        children: [{ id: 'discount', alias: '折扣' }],\n      },\n      { id: 'rateOfReturn', alias: '回报率' },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, discount: 0.5, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, discount: 0.2, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, discount: 0.4, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, discount: 0.2, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, discount: 0.05, rateOfReturn: 0.5 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Measures = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'discount', alias: '折扣' },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, discount: 0.1 },\n      { date: '2020', profit: 30, sales: 60, discount: 0.2 },\n      { date: '2021', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2022', profit: 50, sales: 100, discount: 0.2 },\n      { date: '2023', profit: 40, sales: 80, discount: 0.3 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const Dimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'dimension' },\n      { id: 'region', alias: '区域', location: 'dimension' },\n    ],\n    measures: [{ id: 'profit', alias: '利润' }],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { PivotChart } from 'components/render'\n\nimport { memo } from 'react'\n\nexport const ColumnDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'columnDimension' },\n    ],\n    measures: [{ id: 'profit', alias: '利润' }],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { memo } from 'react'\nimport { PivotChart } from 'components/render'\n\nexport const RowDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'rowDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [{ id: 'profit', alias: '利润' }],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { PivotChart } from 'components/render'\nimport { memo } from 'react'\n\nexport const PivotDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [{ id: 'profit', alias: '利润' }],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40 },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const BaseConfigColorScheme = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    color: {\n      colorScheme: ['#cdb4db', '#ffc8dd', '#ffafcc', '#bde0fe', '#a2d2ff'],\n    },\n    dataset: [\n      { date: '2019', type: 'A', profit: 10, sales: 20 },\n      { date: '2019', type: 'B', profit: 30, sales: 60 },\n      { date: '2019', type: 'C', profit: 30, sales: 60 },\n      { date: '2019', type: 'D', profit: 50, sales: 100 },\n      { date: '2019', type: 'E', profit: 40, sales: 80 },\n\n      { date: '2020', type: 'A', profit: 10, sales: 20 },\n      { date: '2020', type: 'B', profit: 30, sales: 60 },\n      { date: '2020', type: 'C', profit: 30, sales: 60 },\n      { date: '2020', type: 'D', profit: 50, sales: 100 },\n      { date: '2020', type: 'E', profit: 40, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BaseConfigColorMapping = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    color: {\n      colorMapping: {\n        利润: 'yellow',\n        E: 'green',\n        'E-销售额': 'red',\n      },\n    },\n    dataset: [\n      { date: '2019', type: 'A', profit: 10, sales: 20 },\n      { date: '2019', type: 'B', profit: 30, sales: 60 },\n      { date: '2019', type: 'C', profit: 30, sales: 60 },\n      { date: '2019', type: 'D', profit: 50, sales: 100 },\n      { date: '2019', type: 'E', profit: 40, sales: 80 },\n\n      { date: '2020', type: 'A', profit: 10, sales: 20 },\n      { date: '2020', type: 'B', profit: 30, sales: 60 },\n      { date: '2020', type: 'C', profit: 30, sales: 60 },\n      { date: '2020', type: 'D', profit: 50, sales: 100 },\n      { date: '2020', type: 'E', profit: 40, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const BaseConfigBackgroundColor = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    backgroundColor: 'lightyellow',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const BaseConfigLabel = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const BaseConfigLegend = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BaseConfigLegendPosition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'bl',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BaseConfigLegendMaxSize = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      maxSize: 2,\n    },\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n\n      { date: '2020', region: 'north of east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BaseConfigLegendLabel = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      labelFontSize: 12,\n      labelFontColor: '#000',\n      labelFontWeight: 'bold',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BaseConfigLegendBorder = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      border: false,\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\nimport { ColumnParallel } from '@visactor/vseed'\n\nexport const BaseConfigTooltip = memo(() => {\n  const vseed: ColumnParallel = {\n    chartType: 'columnParallel',\n    tooltip: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const LineYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const LineYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const LineXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const LineXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const ColumnYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const ColumnXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const ColumnPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const ColumnPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const ColumnParallelYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnParallelYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const ColumnParallelXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const ColumnParallelXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const BarXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const BarYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const BarPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const BarPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const BarParallelXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarParallelXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const BarParallelYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const BarParallelYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const AreaYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AreaYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const AreaXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AreaXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\nimport type { VSeed } from '@visactor/vseed'\n\nexport const AreaPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AreaPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../../render/Chart'\nimport { memo } from 'react'\n\nexport const AreaPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AreaPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 100,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const SelectorBarValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: ['2019', '2020'],\n      barColor: 'lightpink',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightpink',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorBarPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [{ date: '2019' }, { sales: 60 }],\n      barColor: 'lightblue',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightblue',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorBarDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      barColor: 'gray',\n      barColorOpacity: 0.8,\n      barBorderColor: 'gray',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorBarMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      barColor: 'lightgreen',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightgreen',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const MultiBarStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: [\n      {\n        barColorOpacity: 0.8,\n        barRadius: 10,\n      },\n      {\n        selector: [100, 40],\n        barColor: 'lightgreen',\n        barColorOpacity: 0.8,\n      },\n      {\n        selector: [100, 80],\n        barColor: 'red',\n        barColorOpacity: 0.8,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const SelectorPointValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: [\n      {\n        selector: '2019',\n        pointSize: 20,\n        pointBorderColor: '#000000',\n        pointBorderWidth: 2,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorPointPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: [{ date: '2019' }, { sales: 60 }],\n      pointSize: 20,\n      pointColor: 'lightblue',\n      pointColorOpacity: 0.8,\n      pointBorderColor: 'blue',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorPointDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      pointSize: 20,\n      pointColor: 'gray',\n      pointColorOpacity: 0.8,\n      pointBorderColor: 'gray',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorPointMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      pointSize: 20,\n      pointColor: 'lightgreen',\n      pointColorOpacity: 0.8,\n      pointBorderColor: '#000000',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const MultiPointStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: [\n      {\n        pointSize: 20,\n        pointColor: 'lightgreen',\n        pointColorOpacity: 0.8,\n      },\n      {\n        selector: [100, 80],\n        pointSize: 20,\n        pointColor: 'red',\n        pointColorOpacity: 0.8,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const SelectorAreaValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    areaStyle: [\n      {\n        selector: '2019',\n        areaColorOpacity: 0.05,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorAreaPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    areaStyle: {\n      selector: [{ date: '2019' }, { sales: 60 }],\n      areaColor: 'red',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorAreaDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    areaStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      areaColorOpacity: 0.8,\n    },\n    lineStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorAreaMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    areaStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      areaColorOpacity: 1,\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const MultiAreaStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    areaStyle: [\n      {\n        areaColor: 'red',\n        areaColorOpacity: 0.5,\n      },\n      {\n        selector: [100, 80],\n        areaColorOpacity: 0.05,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const SelectorLineValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    lineStyle: [\n      {\n        selector: [40, 80],\n        lineColor: 'red',\n        lineWidth: 2,\n        lineStyle: 'solid',\n        lineSmooth: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorLinePartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    lineStyle: {\n      selector: [{ date: '2019' }, { sales: 60 }],\n      lineColor: 'red',\n      lineWidth: 2,\n      lineStyle: 'solid',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorLineDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    lineStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019'],\n        },\n      ],\n      lineColor: 'red',\n      lineWidth: 2,\n      lineStyle: 'solid',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SelectorLineMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    lineStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      lineColor: 'red',\n      lineWidth: 2,\n      lineStyle: 'solid',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const MultiLineStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    lineStyle: [\n      {\n        lineColor: 'red',\n        lineWidth: 2,\n        lineStyle: 'solid',\n      },\n      {\n        selector: [100, 80],\n        lineColor: 'blue',\n        lineWidth: 2,\n        lineStyle: 'dashed',\n        lineSmooth: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const AnnotationPointValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: {\n      selector: 10,\n      text: '最小值',\n      textFontWeight: 600,\n      textBaseline: 'bottom',\n      textAlign: 'center',\n      textColor: '#fff',\n      backgroundColor: 'gray',\n      backgroundBorderRadius: 10,\n      backgroundPadding: 10,\n      offsetY: -5,\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationPointPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: [\n      {\n        selector: [\n          {\n            sales: 20,\n          },\n        ],\n        text: ['销售额', '最小值 20'],\n        textAlign: 'right',\n        offsetX: -15,\n      },\n      {\n        selector: [100],\n        text: ['销售额', '最大值 100'],\n        textAlign: 'right',\n        offsetY: 15,\n        offsetX: -20,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationPointCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: [\n      {\n        selector: [\n          {\n            field: 'sales',\n            operator: '<=',\n            value: 80,\n          },\n        ],\n        text: '销售额<=80',\n        textAlign: 'right',\n        offsetX: -15,\n      },\n      {\n        selector: [\n          {\n            field: 'date',\n            operator: 'in',\n            value: '2023',\n          },\n        ],\n        text: '2023 年',\n        textAlign: 'left',\n        offsetX: 0,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const AnnotationVerticalLineSelector = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationVerticalLine: {\n      selector: {\n        field: 'date',\n        operator: 'not in',\n        value: ['2019'],\n      },\n      text: '下降趋势',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationVerticalLineValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationVerticalLine: {\n      xValue: '2022',\n      text: '下降开始',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const AnnotationHorizontalLineSelector = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationHorizontalLine: {\n      selector: 200,\n      text: '销售额最大值',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationHorizontalLineValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationHorizontalLine: [\n      {\n        yValue: 220.5,\n        text: `数值 ${220.5}`,\n      },\n      {\n        yValue: [300, 30],\n        text: `参考线`,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const AnnotationAreaSelectorVertical = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2019', '2021'],\n      text: '区域',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationAreaSelectorHorizontal = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2019', '2021'],\n      text: '区域',\n      textPosition: 'topRight',\n      textAlign: 'right',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const AnnotationAreaSelectorLine = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2019', '2021'],\n      text: '区域',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const ThemeDark = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    theme: 'dark',\n    backgroundColor: 'rgb(25, 29, 36)',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\n\nexport const ThemeLight = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    theme: 'light',\n    backgroundColor: 'rgb(255, 255, 255)',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\nimport { PivotChart } from 'components/render'\n\nexport const SortAxisByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sortAxis: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const SortAxisByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortAxis: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SortAxisByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortAxis: {\n      customOrder: ['2022', '2023', '2021', '2020', '2019'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n","import { VSeed } from '@visactor/vseed'\nimport { VChartRender } from '../../render/Chart'\nimport { memo } from 'react'\nimport { PivotChart } from 'components/render'\n\nexport const SortLegendBySelf = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'profit', alias: '利润' },\n    ],\n    sortLegend: {\n      order: 'desc',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SortLegendByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return <PivotChart vseed={vseed} />\n})\n\nexport const SortLegendByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SortLegendByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['销售额', '数量', '利润'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n\nexport const SortLegendByCustomId = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['数量-count', '销售额-sales', '利润-profit'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"],"names":["registerAll","VChartRender","memo","props","vseed","ref","useRef","builderRef","Builder","dark","useDark","useEffect","builder","spec","vchart","VChart","console","register","PivotChart","tableInstance","VTablePivotChart","args","UnfoldDimensionGroupId","Table","VTableListTable","PivotTable","VTablePivotTable","TableAuto","VTableTable","TableBasic","TableGroup","PivotTableAuto","PivotTableRowDimensions","PivotTableColumnDimensions","LineChart","CombinationLineChart","PivotLineChart","ColumnChart","CombinationColumnChart","PivotColumnChart","ColumnParallelChart","CombinationColumnParallelChart","PivotColumnParallelChart","ColumnPercentChart","CombinationColumnPercentChart","PivotColumnPercentChart","BarChart","CombinationBarChart","PivotBarChart","BarParallelChart","CombinationBarParallelChart","PivotBarParallelChart","BarPercentChart","CombinationBarPercentChart","PivotBarPercentChart","AreaChart","CombinationAreaChart","PivotAreaChart","AreaPercentChart","CombinationAreaPercentChart","PivotAreaPercentChart","AreaRangeChart","ScatterChart","CombinationScatterChart","PivotScatterChart","PieChart","CombinationPieChart","PivotPieChart","DonutChart","CombinationDonutChart","PivotDonutChart","RadarChart","CombinationRadarChart","PivotRadarChart","RoseChart","RoseChartOnlyMeasures","StackedRoseChart","CombinationRoseChart","PivotRoseChart","RoseParallelChart","CombinationRoseParallelChart","PivotRoseParallelChart","HeatmapChart","FunnelChart","Dataset","AutoDataset","Dataset3M0D","Dataset3M1D","Dataset3M3D","Dataset1M0D","Dataset1M1D","Dataset1M3D","MeasureGroups","Measures","Dimensions","ColumnDimensions","RowDimensions","PivotDimensions","BaseConfigColorScheme","BaseConfigColorMapping","BaseConfigBackgroundColor","BaseConfigLabel","BaseConfigLegend","BaseConfigLegendPosition","BaseConfigLegendMaxSize","BaseConfigLegendLabel","BaseConfigLegendBorder","BaseConfigTooltip","LineYAxis","LineYAxisEnable","undefined","LineXAxis","LineXAxisEnable","ColumnYAxis","ColumnYAxisEnable","ColumnXAxis","ColumnXAxisEnable","ColumnPercentYAxis","ColumnPercentYAxisEnable","ColumnPercentXAxis","ColumnPercentXAxisEnable","ColumnParallelYAxis","ColumnParallelYAxisEnable","ColumnParallelXAxis","ColumnParallelXAxisEnable","BarXAxis","BarXAxisEnable","BarYAxis","BarYAxisEnable","BarPercentXAxis","BarPercentXAxisEnable","BarPercentYAxis","BarPercentYAxisEnable","BarParallelXAxis","BarParallelXAxisEnable","BarParallelYAxis","BarParallelYAxisEnable","AreaYAxis","AreaYAxisEnable","AreaXAxis","AreaXAxisEnable","AreaPercentYAxis","AreaPercentYAxisEnable","AreaPercentXAxis","AreaPercentXAxisEnable","SelectorBarValue","SelectorBarPartialDatum","SelectorBarDimensionCondition","SelectorBarMeasureCondition","MultiBarStyle","SelectorPointValue","SelectorPointPartialDatum","SelectorPointDimensionCondition","SelectorPointMeasureCondition","MultiPointStyle","SelectorAreaValue","SelectorAreaPartialDatum","SelectorAreaDimensionCondition","SelectorAreaMeasureCondition","MultiAreaStyle","SelectorLineValue","SelectorLinePartialDatum","SelectorLineDimensionCondition","SelectorLineMeasureCondition","MultiLineStyle","AnnotationPointValue","AnnotationPointPartialDatum","AnnotationPointCondition","AnnotationVerticalLineSelector","AnnotationVerticalLineValue","AnnotationHorizontalLineSelector","AnnotationHorizontalLineValue","AnnotationAreaSelectorVertical","AnnotationAreaSelectorHorizontal","AnnotationAreaSelectorLine","ThemeDark","ThemeLight","SortAxisByMeasure","SortAxisByDimension","SortAxisByCustom","SortLegendBySelf","SortLegendByMeasure","SortLegendByDimension","SortLegendByCustom","SortLegendByCustomId"],"mappings":"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AO,GAAI,EAC9E,AACH,C,ICpGWgE,GAAehF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAmIxB,UAACD,EAAYA,CAAC,MAlIA,CACnB,UAAW,UACX,QAAS,CACP,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,CACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,CACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACA,CACE,KAAM,IACN,QAAS,IACT,MAAO,EACT,EACD,AACH,C,IClIWkF,GAAcjF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAWvB,UAACD,EAAYA,CAAC,MAVA,CACnB,UAAW,SACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,IAAK,MAAO,GAAI,EACxC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,AACH,C,ICXWmF,GAAUlF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyBnB,UAACD,EAAYA,CAAC,MAxBA,CACnB,UAAW,iBACX,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,CACD,WAAY,CACV,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,WAAY,EACjD,CAAE,GAAI,SAAU,MAAO,KAAM,SAAU,WAAY,EACpD,CACD,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EAEtD,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,GAAI,EAChE,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAChE,AACH,C,ICxBWoF,GAAcnF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiBvB,UAACD,EAAYA,CAAC,MAhBA,CACnB,UAAW,iBACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,OAAQ,GAAI,MAAO,EAAG,EAEtD,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,GAAI,EAChE,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,OAAQ,GAAI,MAAO,EAAG,EAChE,AACH,C,IChBWqF,GAAcpF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAKvB,UAACD,EAAYA,CAAC,MAJA,CACnB,UAAW,iBACX,QAAS,CAAC,CAAE,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAAE,AACnD,C,ICJWsF,GAAcrF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAWvB,UAACD,EAAYA,CAAC,MAVA,CACnB,UAAW,iBACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,IAAK,SAAU,EAAI,EACtD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACtD,AACH,C,ICVWuF,GAActF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiBvB,UAACD,EAAYA,CAAC,MAhBA,CACnB,UAAW,iBACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,GAAI,SAAU,EAAI,EAC/E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAE9E,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,GAAI,SAAU,EAAI,EACxF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACxF,AACH,C,IChBWwF,GAAcvF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAKvB,UAACD,EAAYA,CAAC,MAJA,CACnB,UAAW,iBACX,QAAS,CAAC,CAAE,OAAQ,EAAG,EAAE,AAC3B,C,ICJWyF,GAAcxF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAWvB,UAACD,EAAYA,CAAC,MAVA,CACnB,UAAW,iBACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,EAAG,EAC3B,CAAE,KAAM,OAAQ,OAAQ,EAAG,EAC3B,CAAE,KAAM,OAAQ,OAAQ,EAAG,EAC3B,CAAE,KAAM,OAAQ,OAAQ,EAAG,EAC3B,CAAE,KAAM,OAAQ,OAAQ,EAAG,EAC5B,AACH,C,ICVW0F,GAAczF,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiBvB,UAACD,EAAYA,CAAC,MAhBA,CACnB,UAAW,iBACX,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,EACtD,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,EAEtD,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,EAC/D,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,EAChE,AACH,C,IChBW2F,GAAgB1F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA4BzB,UAACgB,EAAUA,CAAC,MA3BE,CACnB,UAAW,SACX,SAAU,CACR,CACE,GAAI,SACJ,MAAO,MACP,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,EACA,CACE,GAAI,SACJ,MAAO,MACP,SAAU,CAAC,CAAE,GAAI,WAAY,MAAO,IAAK,EAAE,AAC7C,EACA,CAAE,GAAI,eAAgB,MAAO,KAAM,EACpC,CACD,WAAY,CAAC,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,WAAY,EAAE,CAChE,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,GAAK,aAAc,EAAI,EACxE,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,GAAK,aAAc,EAAI,EACxE,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,GAAK,aAAc,EAAI,EACxE,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,GAAK,aAAc,EAAI,EACxE,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,IAAK,SAAU,IAAM,aAAc,EAAI,EAC3E,AACH,C,IC3BW2E,GAAW3F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiBpB,UAACD,EAAYA,CAAC,MAhBA,CACnB,UAAW,iBACX,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC5B,CAAE,GAAI,WAAY,MAAO,IAAK,EAC/B,CACD,WAAY,CAAC,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,WAAY,EAAE,CAChE,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACrD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,IAAK,SAAU,EAAI,EACtD,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,SAAU,EAAI,EACtD,AACH,C,IChBW6F,GAAa5F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiCtB,UAACD,EAAYA,CAAC,MAhCA,CACnB,UAAW,iBACX,WAAY,CACV,CAAE,GAAI,WAAY,MAAO,KAAM,SAAU,WAAY,EACrD,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,WAAY,EACjD,CAAE,GAAI,SAAU,MAAO,KAAM,SAAU,WAAY,EACpD,CACD,SAAU,CAAC,CAAE,GAAI,SAAU,MAAO,IAAK,EAAE,CACzC,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAEjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAClE,AACH,C,IC/BW8F,GAAmB7F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiC5B,UAACgB,EAAUA,CAAC,MAhCE,CACnB,UAAW,iBACX,WAAY,CACV,CAAE,GAAI,WAAY,MAAO,KAAM,SAAU,WAAY,EACrD,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,iBAAkB,EACvD,CAAE,GAAI,SAAU,MAAO,KAAM,SAAU,iBAAkB,EAC1D,CACD,SAAU,CAAC,CAAE,GAAI,SAAU,MAAO,IAAK,EAAE,CACzC,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAEjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAClE,AACH,C,ICjCW8E,GAAgB9F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiCzB,UAACgB,EAAUA,CAAC,MAhCE,CACnB,UAAW,iBACX,WAAY,CACV,CAAE,GAAI,WAAY,MAAO,KAAM,SAAU,WAAY,EACrD,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,cAAe,EACpD,CAAE,GAAI,SAAU,MAAO,KAAM,SAAU,cAAe,EACvD,CACD,SAAU,CAAC,CAAE,GAAI,SAAU,MAAO,IAAK,EAAE,CACzC,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAEjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAClE,AACH,C,IChCW+E,GAAkB/F,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAiC3B,UAACgB,EAAUA,CAAC,MAhCE,CACnB,UAAW,iBACX,WAAY,CACV,CAAE,GAAI,WAAY,MAAO,KAAM,SAAU,WAAY,EACrD,CAAE,GAAI,OAAQ,MAAO,KAAM,SAAU,iBAAkB,EACvD,CAAE,GAAI,SAAU,MAAO,KAAM,SAAU,cAAe,EACvD,CACD,SAAU,CAAC,CAAE,GAAI,SAAU,MAAO,IAAK,EAAE,CACzC,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAEjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EACjE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,UAAW,OAAQ,EAAG,EAChE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,EAAG,EAC9D,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,EAAG,EAClE,CAAE,KAAM,OAAQ,OAAQ,OAAQ,SAAU,WAAY,OAAQ,EAAG,EAClE,AACH,C,IChCWgF,GAAwBhG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAoCjC,UAACD,EAAYA,CAAC,MAnCA,CACnB,UAAW,iBACX,MAAO,CACL,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAU,AACtE,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,GAAI,EAClD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EAEjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,GAAI,EAClD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EAClD,CACD,WAAY,CACV,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACA,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACD,CACD,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,C,IAIWkG,GAAyBjG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwClC,UAACD,EAAYA,CAAC,MAvCA,CACnB,UAAW,iBACX,MAAO,CACL,aAAc,CACZ,GAAI,SACJ,EAAG,QACH,QAAS,KACX,CACF,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,GAAI,EAClD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EAEjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EACjD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,GAAI,EAClD,CAAE,KAAM,OAAQ,KAAM,IAAK,OAAQ,GAAI,MAAO,EAAG,EAClD,CACD,WAAY,CACV,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACA,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACD,CACD,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,C,IC9EWmG,GAA4BlG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAuBrC,UAACD,EAAYA,CAAC,MAtBA,CACnB,UAAW,MACX,gBAAiB,cACjB,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,CACD,WAAY,CACV,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACD,CACD,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,C,ICtBWoG,GAAkBnG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyB3B,UAACD,EAAYA,CAAC,MAxBA,CACnB,UAAW,iBACX,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,CACD,WAAY,CACV,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACD,CACD,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,C,ICxBWqG,GAAmBpG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAc5B,UAACD,EAAYA,CAAC,MAbA,CACnB,UAAW,iBACX,OAAQ,CACN,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,AACH,C,IAIWsG,GAA2BrG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAepC,UAACD,EAAYA,CAAC,MAdA,CACnB,UAAW,iBACX,OAAQ,CACN,OAAQ,GACR,SAAU,IACZ,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,AACH,C,IAIWuG,GAA0BtG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAsBnC,UAACD,EAAYA,CAAC,MArBA,CACnB,UAAW,iBACX,OAAQ,CACN,OAAQ,GACR,SAAU,KACV,QAAS,CACX,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAC9E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,GAAI,SAAU,EAAI,EAC/E,CAAE,KAAM,OAAQ,OAAQ,OAAQ,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EAE9E,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACvF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,GAAI,SAAU,EAAI,EACxF,CAAE,KAAM,OAAQ,OAAQ,gBAAiB,KAAM,IAAK,OAAQ,EAAG,MAAO,EAAG,SAAU,EAAI,EACxF,AACH,C,IAIWwG,GAAwBvG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAkBjC,UAACD,EAAYA,CAAC,MAjBA,CACnB,UAAW,iBACX,OAAQ,CACN,OAAQ,GACR,SAAU,KACV,cAAe,GACf,eAAgB,OAChB,gBAAiB,MACnB,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,AACH,C,IAIWyG,GAAyBxG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAgBlC,UAACD,EAAYA,CAAC,MAfA,CACnB,UAAW,iBACX,OAAQ,CACN,OAAQ,GACR,SAAU,KACV,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,AACH,C,IChGW0G,GAAoBzG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyB7B,UAACD,EAAYA,CAAC,MAxBS,CAC5B,UAAW,iBACX,QAAS,CACP,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACtC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,GAAI,EACvC,CAAE,KAAM,OAAQ,OAAQ,GAAI,MAAO,EAAG,EACvC,CACD,WAAY,CACV,CACE,GAAI,OACJ,MAAO,KACP,SAAU,WACZ,EACD,CACD,SAAU,CACR,CAAE,GAAI,SAAU,MAAO,IAAK,EAC5B,CAAE,GAAI,QAAS,MAAO,KAAM,EAC7B,AACH,C,ICxBW2G,GAAY1G,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyFrB,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,OACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5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EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICnMWC,GAAY7G,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA2FrB,UAACD,EAAYA,CAAC,MA1FA,CACnB,UAAW,OACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,EACtB,0BAA2B,EAAE,CAC7B,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIW+G,GAAkB9G,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA0G3B,UAACD,EAAYA,CAAC,MAzGA,CACnB,UAAW,OACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,IACtB,0BAA2B,CAAC,EAAG,IAAK,IAAI,CACxC,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,M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AQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWiH,GAAoBhH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwG7B,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,SACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICnMWK,GAAcjH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA2FvB,UAACD,EAAYA,CAAC,MA1FA,CACnB,UAAW,SACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,EACtB,0BAA2B,EAAE,CAC7B,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAA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,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMWoH,GAAqBnH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyF9B,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,gBACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,EACL,IAAK,EACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWqH,GAA2BpH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwGpC,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,gBACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C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AG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWuH,GAA2BtH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA0GpC,UAACD,EAAYA,CAAC,MAzGA,CACnB,UAAW,gBACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,IACtB,0BAA2B,CAAC,EAAG,IAAK,IAAI,CACxC,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAA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AQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWyH,GAA4BxH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwGrC,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,iBACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICnMWa,GAAsBzH,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA2F/B,UAACD,EAAYA,CAAC,MA1FA,CACnB,UAAW,iBACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,EACtB,0BAA2B,EAAE,CAC7B,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,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CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMW4H,GAAW3H,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyFpB,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,MACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIW6H,GAAiB5H,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwG1B,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,MACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5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AG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIW+H,GAAiB9H,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA0G1B,UAACD,EAAYA,CAAC,MAzGA,CACnB,UAAW,MACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,IACtB,0BAA2B,CAAC,EAAG,IAAK,IAAI,CACxC,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMWgI,GAAkB/H,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyF3B,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,aACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,EACL,IAAK,EACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ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OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICnMWqB,GAAkBjI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA2F3B,UAACD,EAAYA,CAAC,MA1FA,CACnB,UAAW,aACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,EACtB,0BAA2B,EAAE,CAC7B,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAA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,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMWoI,GAAmBnI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyF5B,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,cACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWqI,GAAyBpI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwGlC,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,cACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,C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,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWuI,GAAyBtI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA0GlC,UAACD,EAAYA,CAAC,MAzGA,CACnB,UAAW,cACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,IACtB,0BAA2B,CAAC,EAAG,IAAK,IAAI,CACxC,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMWwI,GAAYvI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyFrB,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,OACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIWyI,GAAkBxI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwG3B,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,OACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICnMW6B,GAAYzI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA2FrB,UAACD,EAAYA,CAAC,MA1FA,CACnB,UAAW,OACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,EACtB,0BAA2B,EAAE,CAC7B,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GA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M,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,ICvMW4I,GAAmB3I,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAyF5B,UAACD,EAAYA,CAAC,MAxFA,CACnB,UAAW,cACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK,EACL,IAAK,EACL,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,KAAM,CACJ,QAAS,EACX,EACA,MAAO,CACL,QAAS,EACX,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIW6I,GAAyB5I,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IAwGlC,UAACD,EAAYA,CAAC,MAvGA,CACnB,UAAW,cACX,MAAO,CACL,KAAM,GACN,KAAM,GACN,IAAK6G,OACL,IAAKA,OACL,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,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5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC9C,AACH,C,IAIW+I,GAAyB9I,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAK,IA0GlC,UAACD,EAAYA,CAAC,MAzGA,CACnB,UAAW,cACX,MAAO,CACL,cAAe,GACf,eAAgB,GAChB,gBAAiB,GACjB,iBAAkB,EAClB,qBAAsB,IACtB,0BAA2B,CAAC,EAAG,IAAK,IAAI,CACxC,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,MAAO,CACL,QAAS,GACT,WAAY,UACZ,cAAe,GACf,gBAAiB,IACjB,WAAY,CACd,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,UAAW,CACb,EACA,KAAM,CACJ,QAAS,GACT,UAAW,UACX,WAAY,GACZ,SAAU,EACZ,EACA,MAAO,CACL,QAAS,GACT,UAAW,KACX,WAAY,UACZ,cAAe,GACf,gBAAiB,GACnB,CACF,EACA,MAAO,CACL,OAAQ,EACV,EACA,QAAS,CACP,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,GAAI,EAC7C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,EAC5C,CAAE,KAAM,aAAc,OAAQ,GAAI,MAAO,EAAG,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"}