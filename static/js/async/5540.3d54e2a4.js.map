{"version":3,"file":"static/js/async/5540.3d54e2a4.js","sources":["webpack://website/./docs/zh-CN/guide/intro/dataFormat.mdx"],"sourcesContent":["import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@2.0.0-beta.28_@rspress+core@2.0.0-beta.28_@types+react@18.0._14204da554bdf4e8a5f87668605eca92/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h1: \"h1\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"数值格式\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#数值格式\",\n        children: \"#\"\n      }), \"数值格式\"]\n    }), \"\\n\", _jsx(Playground, {\n      code: \"import { useDark } from '@rspress/core/runtime'\\n\\nimport { useRef, useEffect } from 'react'\\nimport VChart from '@visactor/vchart'\\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isVTable } from '@visactor/vseed'\\nimport { ListTable, PivotChart, register } from '@visactor/vtable'\\n\\nregisterAll()\\nregister.chartModule('vchart', VChart)\\n\\nconst Demo = () => {\\n  const vseed: VSeed = {\\n    chartType: 'columnParallel',\\n    measures: [\\n      {\\n        id: 'profit',\\n        alias: '利润',\\n        autoFormat: false,\\n        format: {\\n          type: 'number',\\n          ratio: 1000,\\n          thousandSeparator: true,\\n          decimalPlaces: 0,\\n          symbol: '千',\\n          prefix: '利润',\\n          suffix: '$',\\n        },\\n      },\\n      {\\n        id: 'sales',\\n        alias: '销售额',\\n        autoFormat: true,\\n      },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    dataset: [\\n      { date: '2019', profit: 10000, sales: 200000, discount: 0.5, rateOfReturn: 0.001 },\\n      { date: '2020', profit: 20000, sales: 400000, discount: 0.2, rateOfReturn: 0.002 },\\n      { date: '2021', profit: 30000, sales: 600000, discount: 0.4, rateOfReturn: 0.003 },\\n      { date: '2022', profit: 40000, sales: 800000, discount: 0.2, rateOfReturn: 0.004 },\\n      { date: '2023', profit: 50000, sales: 1000000, discount: 0.05, rateOfReturn: 0.005 },\\n    ],\\n  }\\n\\n  return <SimpleVSeedRender vseed={vseed} />\\n}\\n\\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\\n  const { vseed } = props\\n  const ref = useRef<HTMLDivElement>(null)\\n  const dark = useDark()\\n  useEffect(() => {\\n    if (!ref.current) {\\n      return\\n    }\\n    const theme = dark ? 'dark' : 'light'\\n    const spec = Builder.from({ ...vseed, theme }).build()\\n\\n    if (isPivotChart(vseed)) {\\n      const tableInstance = new PivotChart(ref.current, spec)\\n      return () => tableInstance.release()\\n    } else if (isVChart(vseed)) {\\n      const vchart = new VChart(spec, { dom: ref.current })\\n      vchart.renderSync()\\n      return () => vchart.release()\\n    } else if (isVTable(vseed)) {\\n      const tableInstance = new ListTable(ref.current, spec)\\n      return () => tableInstance.release()\\n    }\\n  }, [vseed, dark])\\n\\n  return <div ref={ref} style={{ height: 300, width: '100%' }}></div>\\n}\\n\\nexport default Demo\",\n      language: \"tsx\",\n      direction: \"vertical\",\n      editorPosition: \"left\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\nMDXContent.__RSPRESS_PAGE_META = {};\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fguide%2Fintro%2FdataFormat.mdx\"] = {\"toc\":[],\"title\":\"数值格式\",\"headingTitle\":\"数值格式\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Playground","MDXContent","MDXLayout"],"mappings":"6KAGA,SAASA,EAAkBC,CAAK,EAC9B,IAAMC,EAAc,CAClB,EAAG,IACH,GAAI,KACJ,GAAGC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,GAAoB,CACvB,GAAGF,EAAM,UAAU,AACrB,EACA,MAAOG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMC,EAAAA,QAASA,CAAE,CACtB,SAAU,CAACD,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMF,EAAY,EAAE,CAAE,CAC/B,GAAI,OACJ,SAAU,CAACI,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKJ,EAAY,CAAC,CAAE,CAC7B,UAAW,gBACX,cAAe,OACf,KAAM,QACN,SAAU,GACZ,GAAI,OAAO,AACb,GAAI,KAAMI,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKC,EAAAA,CAAUA,CAAE,CACzB,KAAM,o0EACN,SAAU,MACV,UAAW,WACX,eAAgB,MAClB,GAAG,AACL,EACF,CACe,SAASC,I,IAAWP,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,AAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAQ,CAAC,EACpC,CAAC,QAASQ,CAAS,CAAC,CAAG,CAC3B,GAAGN,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,GAAoB,CACvB,GAAGF,EAAM,UAAU,AACrB,EACA,OAAOQ,EAAYH,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKG,EAAW,CACjC,GAAGR,CAAK,CACR,SAAUK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKN,EAAmB,CAChC,GAAGC,CAAK,AACV,EACF,GAAKD,EAAkBC,EACzB,CAGAO,EAAW,mBAAmB,CAAG,CAAC,EAClCA,EAAW,mBAAmB,CAAC,yCAAyC,CAAG,CAAC,IAAM,EAAE,CAAC,MAAQ,OAAO,aAAe,OAAO,YAAc,CAAC,SAAW,KAAK,CAAC,C"}