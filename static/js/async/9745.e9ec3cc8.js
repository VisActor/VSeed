"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["9745"],{60307:function(e,n,t){t.r(n),t.d(n,{default:()=>i});var s=t(31549),r=t(6603),l=t(89956);function a(e){return(0,s.jsx)(l.Z,{code:'const Demo = () => {\n  const vseed: VSeed = {\n    "color": {\n      "colorScheme": [\n        "#1664FF",\n        "#1AC6FF",\n        "#FF8A00",\n        "#3CC780",\n        "#7442D4",\n        "#FFC400",\n        "#304D77",\n        "#B48DEB",\n        "#009488",\n        "#FF7DDA",\n        "#2A488C",\n        "#749EFF",\n        "#FCC18F",\n        "#3FB9B8",\n        "#7A94BF",\n        "#FCE286",\n        "#4363AE",\n        "#685BA6",\n        "#DE5A98",\n        "#7FB2B2"\n      ]\n    },\n    "legend": {\n      "position": "bottom",\n      "maxSize": 2\n    },\n    "chartType": "area",\n    "dataset": [\n      {\n        "type": "android",\n        "locale": "zh_cn",\n        "test_value": 67\n      },\n      {\n        "type": "android",\n        "locale": "zh",\n        "test_value": 73\n      },\n      {\n        "type": "android",\n        "locale": "en_us",\n        "test_value": 72\n      },\n      {\n        "type": "android",\n        "locale": "en",\n        "test_value": 57\n      },\n      {\n        "type": "ios",\n        "locale": "zh_cn",\n        "test_value": 47\n      },\n      {\n        "type": "ios",\n        "locale": "en_us",\n        "test_value": 86\n      },\n      {\n        "type": "ios",\n        "locale": "en",\n        "test_value": 78\n      },\n      {\n        "type": "ios",\n        "locale": "zh",\n        "test_value": 49\n      },\n      {\n        "type": "mac",\n        "locale": "zh",\n        "test_value": 55\n      },\n      {\n        "type": "mac",\n        "locale": "en",\n        "test_value": 51\n      },\n      {\n        "type": "mac",\n        "locale": "zh_cn",\n        "test_value": 65\n      },\n      {\n        "type": "mac",\n        "locale": "en_us",\n        "test_value": 75\n      },\n      {\n        "type": "windows",\n        "locale": "en_us",\n        "test_value": 71\n      },\n      {\n        "type": "windows",\n        "locale": "zh",\n        "test_value": 51\n      },\n      {\n        "type": "windows",\n        "locale": "zh_cn",\n        "test_value": 57\n      },\n      {\n        "type": "windows",\n        "locale": "en",\n        "test_value": 46\n      }\n    ],\n    "dimensions": [\n      {\n        "id": "type",\n        "format": {\n          "type": "digit",\n          "precision": 0\n        },\n        "alias": "name"\n      },\n      {\n        "id": "locale",\n        "format": {\n          "type": "digit",\n          "precision": 0\n        },\n        "alias": "language"\n      }\n    ],\n    "measures": [\n      {\n        "index": 0,\n        "format": {\n          "type": "digit",\n          "precision": 0\n        },\n        "id": "test_value",\n        "alias": "value"\n      }\n    ],\n    "locale": "zh-CN"\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log(\'zVSeed parse success!!!\')\n  } else {\n    console.error(\'zVSeed parse error!!!\')\n  }\n\n  return <SimpleVSeedRender vseed={ vseed } />\n}\n\nimport { useRef, useEffect } from \'react\'\nimport { useDark } from \'rspress/runtime\'\nimport VChart from \'@visactor/vchart\'\nimport { ListTable, PivotTable, PivotChart, register } from \'@visactor/vtable\'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isPivotTable, isTable, zVSeed } from \'@visactor/vseed\'\n\nregisterAll()\nregister.chartModule(\'vchart\', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? \'dark\' : \'light\'\n    const builder = Builder.from({ ...vseed, theme })\n    console.log(\'builder\', builder)\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref= { ref }\n  style = {{ height: 300, width: \'100%\' }\n}\nonClick = {() => {\n  console.group(`selected ${vseed.chartType}`)\n  console.log(\'builder\', builderRef.current)\n  console.log(\'spec\', builderRef.current.spec)\n  console.log(\'vseed\', builderRef.current.vseed)\n  console.log(\'advancedVSeed\', builderRef.current.advancedVSeed)\n  console.groupEnd()\n}}\n    > </div>\n  )\n}\n\nexport default Demo',language:"tsx",direction:"",editorPosition:"left"})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(a,e)})):a(e)}let i=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["en-US%2Fdevelopment%2Ftests%2Farea.mdx"]={toc:[],title:"",headingTitle:"",frontmatter:{}}}}]);
//# sourceMappingURL=9745.e9ec3cc8.js.map