"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["135"],{5720:function(n,e,r){r.r(e),r.d(e,{default:()=>i});var t=r(31549),o=r(6603),s=r(96311);function a(n){return(0,t.jsx)(s.Z,{code:"const Demo = () => {\n  const MeasureNames = '__MeaName__'\n\n  const vseed: VSeed = {\n    color: {\n      colorScheme: [\n        '#8D72F6',\n        '#5766EC',\n        '#66A3FE',\n        '#51D5E6',\n        '#4EC0B3',\n        '#F9DF90',\n        '#F9AD71',\n        '#ED8888',\n        '#E9A0C3',\n        '#D77DD3',\n      ],\n    },\n    legend: {\n      enable: true,\n      position: 'rightTop',\n      maxSize: 1,\n      labelFontSize: 12,\n      labelFontColor: '#6F6F6F',\n    },\n    label: {\n      enable: false,\n      labelColor: '#212121',\n    },\n    lineStyle: [],\n    barStyle: [],\n    pointStyle: [],\n    areaStyle: [],\n    annotationPoint: [],\n    annotationHorizontalLine: [],\n    annotationVerticalLine: [],\n    annotationArea: [],\n    measures: [\n      {\n        id: 'co_20250922180024_3362',\n        alias: 'sum(discount)',\n        encoding: 'yAxis',\n        format: {\n          auto: false,\n          significantDigits: 4,\n          thousandSeparator: true,\n          type: 'number',\n        },\n        autoFormat: false,\n      },\n      {\n        id: 'co_20250922192138_fc99',\n        alias: 'sum(discount)',\n        encoding: 'color',\n        format: {\n          auto: false,\n          significantDigits: 4,\n          thousandSeparator: true,\n          type: 'number',\n        },\n        autoFormat: false,\n      },\n    ],\n    dimensions: [\n      {\n        id: 'yA_20250922174436_92f4',\n        alias: 'product_type',\n        encoding: 'xAxis',\n        autoFormat: true,\n      },\n    ],\n    chartType: 'column',\n    dataset: [\n      {\n        co_20250922180024_3362: '483.99999999999267',\n        co_20250922192138_fc99: '483.99999999999267',\n        yA_20250922174436_92f4: '办公用品',\n      },\n      {\n        co_20250922180024_3362: '325.0999999999991',\n        co_20250922192138_fc99: '325.0999999999991',\n        yA_20250922174436_92f4: '家具',\n      },\n      {\n        co_20250922180024_3362: '250.60000000000227',\n        co_20250922192138_fc99: '250.60000000000227',\n        yA_20250922174436_92f4: '技术',\n      },\n    ],\n  }\n  const parseRes = zVSeed.safeParse(vseed)\n  if (parseRes.success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!', parseRes)\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect } from 'react'\nimport { useDark } from 'rspress/runtime'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable, PivotChart, register } from '@visactor/vtable'\nimport {\n  registerAll,\n  VSeed,\n  Builder,\n  isPivotChart,\n  isVChart,\n  isPivotTable,\n  isTable,\n  zVSeed,\n  ColorIdEncoding,\n} from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n    console.log('builder', builder)\n    console.log('builder performance', builder.performance)\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n\n      tableInstance.on('legend_item_click', (args) => {\n        console.log('LEGEND_ITEM_CLICK', args)\n        tableInstance.updateFilterRules([\n          {\n            filterKey: ColorIdEncoding,\n            filteredValues: args.value,\n          },\n        ])\n      })\n\n      tableInstance.on('legend_change', (args) => {\n        const maxValue = args.value[1]\n        const minValue = args.value[0]\n        tableInstance.updateFilterRules([\n          {\n            filterFunc: (record) => {\n              const value = record[record[ColorIdEncoding]]\n              if (value >= minValue && value <= maxValue) {\n                return true\n              }\n              return false\n            },\n          },\n        ])\n      })\n\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      {' '}\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"",editorPosition:"left"})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(a,n)})):a(n)}let i=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh-CN%2Fplayground%2Findex.mdx"]={toc:[],title:"标题",headingTitle:"",frontmatter:{title:"标题",playgroundDirection:"horizontal",pageType:"custom"}}}}]);
//# sourceMappingURL=135.348ed84e.js.map