"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["5968"],{57793:function(e,n,t){t.r(n),t.d(n,{default:()=>l});var r=t(31549),s=t(6603),a=t(95847);function o(e){let n=Object.assign({h1:"h1",a:"a"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"国际化",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#国际化",children:"#"}),"国际化"]}),"\n",(0,r.jsx)(a.Z,{code:"const Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000 },\n      { date: '2020', profit: 20000, sales: 400000 },\n      { date: '2021', profit: 30000, sales: 600000 },\n      { date: '2022', profit: 40000, sales: 800000 },\n      { date: '2023', profit: 50000, sales: 1000000 },\n      { date: '2024', profit: 500000, sales: 1000000 },\n      { date: '2025', profit: 5000000, sales: 100000000 },\n      { date: '2026', profit: 5000000, sales: 1000000000 },\n    ],\n    measures: [\n      { id: 'profit', autoFormat: true },\n      { id: 'sales', autoFormat: true },\n    ],\n    yAxis: {\n      log: true,\n    },\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect, useState } from 'react'\nimport { useDark } from 'rspress/runtime'\nimport VChart, { ISpec } from '@visactor/vchart'\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isVTable, zVSeed, Locale } from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n  const [locale, setLocale] = useState<Locale>('en-US')\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme, locale })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark, locale])\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      <div>\n        {['en-US', 'zh-CN'].map((d) => {\n          return (\n            <span key={d} style={{ margin: '0 2px' }}>\n              <button\n                onClick={() => setLocale(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              </button>\n            </span>\n          )\n        })}\n      </div>\n      <div ref={ref} style={{ height: 300, width: '100%' }}></div>\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2Finternationalization.mdx"]={toc:[],title:"国际化",headingTitle:"国际化",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=5968.f3d3bc90.js.map