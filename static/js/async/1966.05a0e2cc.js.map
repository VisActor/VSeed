{"version":3,"file":"static/js/async/1966.05a0e2cc.js","sources":["webpack://website/./docs/zh-CN/guide/intro/encoding.mdx"],"sourcesContent":["const frontmatter = {\"pageType\":\"doc\"};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@1.45.3_@rspress+core@2.0.0-beta.28_@types+react@18.0.0_acorn_f6d4f2a217c455639d7206d79af6fedc/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nimport {EncodingArea} from '@components';\nimport {EncodingAreaPercent} from '@components';\nimport {EncodingBar} from '@components';\nimport {EncodingBarParallel} from '@components';\nimport {EncodingBarPercent} from '@components';\nimport {EncodingColumn} from '@components';\nimport {EncodingColumnParallel} from '@components';\nimport {EncodingColumnPercent} from '@components';\nimport {EncodingDonut} from '@components';\nimport {EncodingDualAxis} from '@components';\nimport {EncodingFunnel} from '@components';\nimport {EncodingHeatmap} from '@components';\nimport {EncodingLine} from '@components';\nimport {EncodingPie} from '@components';\nimport {EncodingRadar} from '@components';\nimport {EncodingRose} from '@components';\nimport {EncodingRoseParallel} from '@components';\nimport {EncodingScatter} from '@components';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    h2: \"h2\",\n    p: \"p\",\n    strong: \"strong\",\n    div: \"div\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"编码映射\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#编码映射\",\n        children: \"#\"\n      }), \"编码映射\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"什么是编码映射\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#什么是编码映射\",\n        children: \"#\"\n      }), \"什么是编码映射\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"编码映射是一种将数据属性映射到视觉通道的机制，是数据可视化中的核心概念。通过编码映射，我们可以将抽象的数据转化为直观的视觉元素，如颜色、位置、大小等，从而帮助用户快速理解数据的分布、趋势和关系。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"在 VSeed 中，每种图表类型都支持一系列特定的视觉通道，用于展示不同维度的数据信息。下面将详细介绍各种图表类型及其支持的编码映射通道。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"column\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#column\",\n        children: \"#\"\n      }), \"column\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n柱状图使用垂直的条形来显示不同类别之间的比较。它是最常见的图表类型之一，非常适合用于类别名称较短的情况，或者当您想要强调数值随时间的变化时。X轴代表类别，Y轴代表数值。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在柱状图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示柱子的高度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"柱状图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示类别或时间。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingColumn, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"column\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"columnpercent\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#columnpercent\",\n        children: \"#\"\n      }), \"columnPercent\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n百分比柱状图是柱状图的一种变体，它将每个类别的值显示为总量的百分比。这使得比较不同类别在整体中的相对贡献变得容易。Y轴的范围总是从0%到100%。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在百分比柱状图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示柱子的高度。Y轴将以百分比的形式显示数据的占比关系。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"百分比柱状图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示类别或时间。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分并列的各个数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingColumnPercent, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"columnPercent\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\", \\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"columnparallel\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#columnparallel\",\n        children: \"#\"\n      }), \"columnParallel\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n并列柱状图在柱状图的基础上，将每个类别的多个数据系列并列显示。这使得在同一类别内直接比较不同系列的值变得非常方便。它常用于比较不同时间点、不同产品或不同组别的数据。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在并列柱状图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示柱子的高度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"并列柱状图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示类别或时间。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分并列的各个数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingColumnParallel, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"columnParallel\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"bar\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#bar\",\n        children: \"#\"\n      }), \"bar\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n条形图使用水平的条形来显示不同类别之间的比较。它非常适合用于类别名称较长的情况，或者当您想要强调排名时。Y轴代表类别，X轴代表数值。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在条形图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"X轴\"\n          }), \"上，用于表示条形的长度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"条形图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"y\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到Y轴的字段, 支持放入多个维度。通常表示类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingBar, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"bar\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"y\\\": [\\\"year\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"barpercent\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#barpercent\",\n        children: \"#\"\n      }), \"barPercent\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n百分比条形图是条形图的一种变体，它将每个类别的值显示为总量的百分比。这使得比较不同类别在整体中的相对贡献变得容易。X轴的范围总是从0%到100%。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在百分比条形图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"X轴\"\n          }), \"上，用于表示条形的长度。X轴将以百分比的形式显示数据的占比关系。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"百分比条形图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"y\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到Y轴的字段, 支持放入多个维度。通常表示类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分并列的各个数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingBarPercent, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"barPercent\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"y\\\": [\\\"year\\\", \\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"barparallel\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#barparallel\",\n        children: \"#\"\n      }), \"barParallel\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n并列条形图在条形图的基础上，将每个类别的多个数据系列并列显示。这使得在同一类别内直接比较不同系列的值变得非常方便。它常用于比较不同时间点、不同产品或不同组别的数据。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在并列条形图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"X轴\"\n          }), \"上，用于表示条形的长度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"并列条形图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"y\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到Y轴的字段, 支持放入多个维度。通常表示类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分并列的各个数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingBarParallel, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"barParallel\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"y\\\": [\\\"year\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"area\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#area\",\n        children: \"#\"\n      }), \"area\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n面积图是一种用于可视化定量数据随时间或其他连续变量变化的图表。它通过在数据点之间填充颜色来强调数量的多少，非常适合展示趋势和比较不同组别的数据。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在面积图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示面积的高度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"面积图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示时间或类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingArea, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"area\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\", \\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"areapercent\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#areapercent\",\n        children: \"#\"\n      }), \"areaPercent\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n百分比面积图是面积图的一种变体，它将每个类别的值显示为总量的百分比。这使得比较不同类别在整体中的相对贡献变得容易。Y轴的范围总是从0%到100%。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在百分比面积图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示面积的高度。Y轴将以百分比的形式显示数据的占比关系。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"百分比面积图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示时间或类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingAreaPercent, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"areaPercent\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\", \\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"scatter\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#scatter\",\n        children: \"#\"\n      }), \"scatter\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n散点图使用点来显示两个或多个变量之间的关系。每个点的位置由其在X轴和Y轴上的值决定。它非常适合用于发现数据中的模式、趋势和异常值，尤其是在分析两个连续变量之间的相关性时。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在散点图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 可以配置两个指标组。第一个指标组的指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"X轴\"\n          }), \" 上；第二个指标组的指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"散点图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列或表示第三个变量。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，详情映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingScatter, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"scatter\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" },\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Year\\\" }\\n  ],\\n  \\\"scatterMeasures\\\": [\\n    {\\n      \\\"xMeasures\\\": [{ \\\"id\\\": \\\"discount\\\" }],\\n      \\\"yMeasures\\\": [{ \\\"id\\\": \\\"profit\\\" }, { \\\"id\\\": \\\"sales\\\" }]\\n    }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"color\\\": [\\\"year\\\", \\\"month\\\", \\\"__MeaName__\\\"],\\n    \\\"detail\\\": []\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"roseparallel\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#roseparallel\",\n        children: \"#\"\n      }), \"roseParallel\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n分组玫瑰图是玫瑰图的一种变体，它在极坐标系下通过扇形的半径和角度来表示数据，并允许将数据分组显示。这使得在同一图表中比较不同组别的数据分布和趋势变得更加直观。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在分组玫瑰图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到扇形的 \", _jsx(_components.strong, {\n            children: \"半径\"\n          }), \"上，用于表示扇形的大小。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"分组玫瑰图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"angle\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到角度的字段, 支持放入多个维度。通常表示类别或时间。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，详情映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingRoseParallel, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"roseParallel\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"angle\\\": [\\\"year\\\", \\\"__MeaName__\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 210000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 220000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 230000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 340000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 450000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 560000, \\\"sales\\\": 1200000 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 110000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 320000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 430000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 540000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 250000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 610000, \\\"sales\\\": 1200000 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"rose\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#rose\",\n        children: \"#\"\n      }), \"rose\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n玫瑰图是一种极坐标下的柱状图，它通过扇形的半径和角度来表示数据。它非常适合用于展示周期性数据的分布和比较，例如一年中不同月份的销售额。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在玫瑰图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到扇形的 \", _jsx(_components.strong, {\n            children: \"半径\"\n          }), \"上，用于表示扇形的大小。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"玫瑰图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"angle\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到角度的字段, 支持放入多个维度。通常表示类别或时间。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，详情映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingRose, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"rose\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"angle\\\": [\\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"year\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 210000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 220000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 230000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 340000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 450000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 560000, \\\"sales\\\": 1200000 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 110000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 320000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 430000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 540000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 250000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 610000, \\\"sales\\\": 1200000 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"radar\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#radar\",\n        children: \"#\"\n      }), \"radar\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n雷达图，也称为蜘蛛图或星图，是一种用于比较多个定量变量的二维图表。它非常适合用于展示多维数据的综合表现，例如评估一个产品或一个团队在多个指标上的表现。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在雷达图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到雷达图的 \", _jsx(_components.strong, {\n            children: \"半径\"\n          }), \"上，用于表示数值的大小。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"雷达图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"angle\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到角度的字段, 支持放入多个维度。表示雷达图的各个轴。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingRadar, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"radar\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"angle\\\": [\\\"month\\\"],\\n    \\\"color\\\": [\\\"year\\\", \\\"__MeaName__\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 210000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 220000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 230000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 340000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 450000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 560000, \\\"sales\\\": 1200000 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 110000, \\\"sales\\\": 200000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 320000, \\\"sales\\\": 400000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 430000, \\\"sales\\\": 600000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 540000, \\\"sales\\\": 800000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 250000, \\\"sales\\\": 1000000 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 610000, \\\"sales\\\": 1200000 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"pie\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#pie\",\n        children: \"#\"\n      }), \"pie\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n饼图是一种圆形统计图，用于将数据划分为不同的扇区，每个扇区的大小与它所代表的数据量成比例。它非常适合展示单一维度数据的占比关系，尤其是在类别数量较少时。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在饼图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到扇形的 \", _jsx(_components.strong, {\n            children: \"角度\"\n          }), \"上，用于表示扇形的大小。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"饼图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的扇区。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingPie, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"pie\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"color\\\": [\\\"year\\\", \\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"line\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#line\",\n        children: \"#\"\n      }), \"line\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n折线图通过连接数据点来显示数据随时间或有序类别变化的趋势。它非常适合用于展示数据的变化趋势、比较多个数据系列的趋势，以及分析数据的增长或下降规律。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在折线图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"Y轴\"\n          }), \"上，用于表示折线的高度。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"折线图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示时间或有序类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingLine, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"line\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\", \\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"heatmap\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#heatmap\",\n        children: \"#\"\n      }), \"heatmap\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n热力图通过颜色的变化来表示二维矩阵中数值的大小。它非常适合用于展示数据的分布、密度和强度，尤其是在处理大量数据时。颜色越深，通常表示数值越大。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在热力图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"颜色\"\n          }), \"通道上，用于表示热力块的颜色深浅。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"热力图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，x轴映射通道, 支持放入多个维度。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"y\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，y轴映射通道, 支持放入多个维度。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于表示数值的大小。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingHeatmap, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"heatmap\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"year\\\", \\\"__MeaName__\\\"],\\n    \\\"y\\\": [\\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"funnel\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#funnel\",\n        children: \"#\"\n      }), \"funnel\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n漏斗图是一种特殊的图表，用于展示数据在不同阶段的转化或流失情况。它通常用于分析销售流程、网站访问流程等，通过梯形的宽度或高度来表示每个阶段的数量，从而直观地展示转化率。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在漏斗图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到漏斗图的 \", _jsx(_components.strong, {\n            children: \"高度\"\n          }), \" 或 \", _jsx(_components.strong, {\n            children: \"宽度\"\n          }), \"上，用于表示每个阶段的数量。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"漏斗图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的阶段。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingFunnel, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"funnel\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"color\\\": [\\\"year\\\", \\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"dualaxis\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#dualaxis\",\n        children: \"#\"\n      }), \"dualAxis\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n双轴图用于在同一个图表中展示两个具有不同单位或量级的指标。它通过使用主、次两个Y轴，将两个相关的指标进行对比，非常适合分析两个变量之间的关系，例如销售额和增长率。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在双轴图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 可以配置两个指标组。第一个指标组的指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"主Y轴\"\n          }), \" 上；第二个指标组的指标会自动合并，并映射到 \", _jsx(_components.strong, {\n            children: \"次Y轴\"\n          }), \"上。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"双轴图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"x\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，映射到X轴的字段, 支持放入多个维度。通常表示时间或类别。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的数据系列。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingDualAxis, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"dualAxis\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" },\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Year\\\" }\\n  ],\\n  \\\"dualMeasures\\\": [\\n    {\\n      \\\"primaryMeasures\\\": [{ \\\"id\\\": \\\"profit\\\" }, { \\\"id\\\": \\\"sales\\\" }],\\n      \\\"secondaryMeasures\\\": [{ \\\"id\\\": \\\"discount\\\" }]\\n    }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"x\\\": [\\\"month\\\"],\\n    \\\"color\\\": [\\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"year\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"donut\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#donut\",\n        children: \"#\"\n      }), \"donut\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"介绍\"\n      }), \"\\n:::info\\n环形图是一种特殊的饼图，中心有一个空白区域，通常用于显示总计或关键指标。它非常适合展示单一维度数据的占比关系，同时通过中心区域提供额外的信息。\\n:::\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Encoding\"\n      })\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n在环形图中, \", _jsx(_components.strong, {\n            children: \"measures\"\n          }), \" 中的所有指标会自动合并，并映射到扇形的 \", _jsx(_components.strong, {\n            children: \"半径\"\n          }), \"上，用于表示扇形的大小。\"]\n        })\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"环形图支持以下视觉通道:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"color\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，颜色映射通道, 支持放入多个维度或1个指标。用于区分不同的扇区。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"detail\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，细分映射通道, 支持放入多个维度。当需要在同一个颜色系列下展示更细粒度的数据时使用。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"label\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，标签映射通道, 支持放入多个维度或多个指标。用于在图表上直接显示数据值。\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"tooltip\"\n        }), \": \", _jsx(_components.strong, {\n          children: \"可选\"\n        }), \"，提示映射通道, 支持放入多个维度和多个指标。用于在鼠标悬停时显示详细信息。\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"示例\"\n      })\n    }), \"\\n\", _jsx(EncodingDonut, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"chartType\\\": \\\"donut\\\",\\n  \\\"measures\\\": [\\n    {\\n      \\\"id\\\": \\\"sales\\\",\\n      \\\"alias\\\": \\\"Sales\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"profit\\\",\\n      \\\"alias\\\": \\\"Profit\\\",\\n      \\\"autoFormat\\\": true\\n    },\\n    {\\n      \\\"id\\\": \\\"discount\\\",\\n      \\\"alias\\\": \\\"Discount\\\",\\n      \\\"autoFormat\\\": true\\n    }\\n  ],\\n  \\\"dimensions\\\": [\\n    { \\\"id\\\": \\\"year\\\", \\\"alias\\\": \\\"Yearn\\\" },\\n    { \\\"id\\\": \\\"month\\\", \\\"alias\\\": \\\"Month\\\" }\\n  ],\\n  \\\"encoding\\\": {\\n    \\\"color\\\": [\\\"year\\\", \\\"__MeaName__\\\"],\\n    \\\"detail\\\": [\\\"month\\\"]\\n  },\\n  \\\"dataset\\\": [\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2019\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 },\\n\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jan\\\", \\\"profit\\\": 10000, \\\"sales\\\": 200000, \\\"discount\\\": 0.5 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Feb\\\", \\\"profit\\\": 20000, \\\"sales\\\": 400000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Mar\\\", \\\"profit\\\": 30000, \\\"sales\\\": 600000, \\\"discount\\\": 0.4 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Apr\\\", \\\"profit\\\": 40000, \\\"sales\\\": 800000, \\\"discount\\\": 0.2 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"May\\\", \\\"profit\\\": 50000, \\\"sales\\\": 1000000, \\\"discount\\\": 0.05 },\\n    { \\\"year\\\": \\\"2020\\\", \\\"month\\\": \\\"Jun\\\", \\\"profit\\\": 60000, \\\"sales\\\": 1200000, \\\"discount\\\": 0.3 }\\n  ]\\n}\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\nMDXContent.__RSPRESS_PAGE_META = {};\n\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fguide%2Fintro%2Fencoding.mdx\"] = {\"toc\":[{\"id\":\"什么是编码映射\",\"text\":\"什么是编码映射\",\"depth\":2},{\"id\":\"column\",\"text\":\"column\",\"depth\":2},{\"id\":\"columnpercent\",\"text\":\"columnPercent\",\"depth\":2},{\"id\":\"columnparallel\",\"text\":\"columnParallel\",\"depth\":2},{\"id\":\"bar\",\"text\":\"bar\",\"depth\":2},{\"id\":\"barpercent\",\"text\":\"barPercent\",\"depth\":2},{\"id\":\"barparallel\",\"text\":\"barParallel\",\"depth\":2},{\"id\":\"area\",\"text\":\"area\",\"depth\":2},{\"id\":\"areapercent\",\"text\":\"areaPercent\",\"depth\":2},{\"id\":\"scatter\",\"text\":\"scatter\",\"depth\":2},{\"id\":\"roseparallel\",\"text\":\"roseParallel\",\"depth\":2},{\"id\":\"rose\",\"text\":\"rose\",\"depth\":2},{\"id\":\"radar\",\"text\":\"radar\",\"depth\":2},{\"id\":\"pie\",\"text\":\"pie\",\"depth\":2},{\"id\":\"line\",\"text\":\"line\",\"depth\":2},{\"id\":\"heatmap\",\"text\":\"heatmap\",\"depth\":2},{\"id\":\"funnel\",\"text\":\"funnel\",\"depth\":2},{\"id\":\"dualaxis\",\"text\":\"dualAxis\",\"depth\":2},{\"id\":\"donut\",\"text\":\"donut\",\"depth\":2}],\"title\":\"编码映射\",\"headingTitle\":\"编码映射\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","Object","_provideComponents","_jsxs","_Fragment","_jsx","EncodingColumn","EncodingColumnPercent","EncodingColumnParallel","EncodingBar","EncodingBarPercent","EncodingBarParallel","EncodingArea","EncodingAreaPercent","EncodingScatter","EncodingRoseParallel","EncodingRose","EncodingRadar","EncodingPie","EncodingLine","EncodingHeatmap","EncodingFunnel","EncodingDualAxis","EncodingDonut","MDXContent","MDXLayout"],"mappings":"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"}