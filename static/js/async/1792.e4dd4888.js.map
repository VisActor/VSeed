{"version":3,"file":"static/js/async/1792.e4dd4888.js","sources":["webpack://website/./docs/zh-CN/guide/intro/dataReshape.mdx"],"sourcesContent":["const frontmatter = {\"pageType\":\"doc\"};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@1.45.0_@rspress+core@1.45.0_webpack@5.101.0__monaco-editor@0_77af6e307fc0823c3fa3d293b9873930/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"数据重塑\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#数据重塑\",\n        children: \"#\"\n      }), \"数据重塑\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive info\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"INFO\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsx(_components.p, {\n          children: \"\\n数据和图表类型是完全解耦的, 无论有多少维度或指标, VSeed 都可以始终重塑它们. 代价可能是图表的语义不佳, 但这是值得的.\"\n        })\n      })]\n    }), \"\\n\", _jsx(Playground, {\n      code: \"import { useRef, useEffect, useState } from 'react'\\nimport VChart from '@visactor/vchart'\\nimport { ListTable, PivotTable } from '@visactor/vtable'\\nimport { registerAll, VSeed, Builder, isTable, isPivotTable } from '@visactor/vseed'\\n\\nconst Demo = () => {\\n  const ref = useRef<HTMLDivElement>(null)\\n  const datasetList = [\\n    // 单指标零维度\\n    [{ profit: 10 }],\\n    // 单指标单维度\\n    [\\n      { date: '2019', profit: 10 },\\n      { date: '2020', profit: 30 },\\n      { date: '2021', profit: 30 },\\n      { date: '2022', profit: 50 },\\n      { date: '2023', profit: 40 },\\n    ],\\n    // 单指标两维度\\n    [\\n      { date: '2019', region: 'A', profit: 1 },\\n      { date: '2019', region: 'B', profit: 2 },\\n      { date: '2019', region: 'C', profit: 3 },\\n      { date: '2019', region: 'D', profit: 4 },\\n      { date: '2019', region: 'E', profit: 5 },\\n\\n      { date: '2020', region: 'A', profit: 10 },\\n      { date: '2020', region: 'B', profit: 9 },\\n      { date: '2020', region: 'C', profit: 8 },\\n      { date: '2020', region: 'D', profit: 7 },\\n      { date: '2020', region: 'E', profit: 6 },\\n\\n      { date: '2021', region: 'A', profit: 11 },\\n      { date: '2021', region: 'B', profit: 12 },\\n      { date: '2021', region: 'C', profit: 13 },\\n      { date: '2021', region: 'D', profit: 14 },\\n      { date: '2021', region: 'E', profit: 15 },\\n    ],\\n    // 单指标多维度\\n    [\\n      { date: '2019', region: 'east', city: 'A', profit: 10 },\\n      { date: '2019', region: 'east', city: 'B', profit: 30 },\\n      { date: '2019', region: 'west', city: 'A', profit: 30 },\\n      { date: '2019', region: 'west', city: 'B', profit: 50 },\\n\\n      { date: '2020', region: 'east', city: 'A', profit: 15 },\\n      { date: '2020', region: 'east', city: 'B', profit: 35 },\\n      { date: '2020', region: 'west', city: 'A', profit: 35 },\\n      { date: '2020', region: 'west', city: 'B', profit: 55 },\\n\\n      { date: '2021', region: 'east', city: 'A', profit: 20 },\\n      { date: '2021', region: 'east', city: 'B', profit: 40 },\\n      { date: '2021', region: 'west', city: 'A', profit: 40 },\\n      { date: '2021', region: 'west', city: 'B', profit: 60 },\\n    ],\\n    // 多指标零维度\\n    [{ profit: 1, sales: 2, discount: 0.1 }],\\n    // 多指标单维度\\n    [\\n      { date: '2019', profit: 10, sales: 20, discount: 0.1 },\\n      { date: '2020', profit: 30, sales: 60, discount: 0.1 },\\n      { date: '2021', profit: 30, sales: 60, discount: 0.1 },\\n      { date: '2022', profit: 50, sales: 100, discount: 0.1 },\\n      { date: '2023', profit: 40, sales: 80, discount: 0.1 },\\n    ],\\n    // 多指标多维度\\n    [\\n      { date: '2019', region: 'east', city: 'A', profit: 10, sales: 100 },\\n      { date: '2019', region: 'east', city: 'B', profit: 30, sales: 200 },\\n      { date: '2019', region: 'west', city: 'A', profit: 30, sales: 300 },\\n      { date: '2019', region: 'west', city: 'B', profit: 50, sales: 500 },\\n\\n      { date: '2020', region: 'east', city: 'A', profit: 15, sales: 100 },\\n      { date: '2020', region: 'east', city: 'B', profit: 35, sales: 200 },\\n      { date: '2020', region: 'west', city: 'A', profit: 35, sales: 300 },\\n      { date: '2020', region: 'west', city: 'B', profit: 55, sales: 500 },\\n\\n      { date: '2021', region: 'east', city: 'A', profit: 20, sales: 100 },\\n      { date: '2021', region: 'east', city: 'B', profit: 40, sales: 200 },\\n      { date: '2021', region: 'west', city: 'A', profit: 40, sales: 300 },\\n      { date: '2021', region: 'west', city: 'B', profit: 60, sales: 500 },\\n    ],\\n  ]\\n\\n  const chartTypes = [\\n    'table',\\n    'pivotTable',\\n    // cartesian\\n    'line',\\n    'column',\\n    'columnPercent',\\n    'columnParallel',\\n    'bar',\\n    'barPercent',\\n    'barParallel',\\n    'area',\\n    'areaPercent',\\n    // polar\\n    'pie',\\n    'donut',\\n    'radar',\\n    'roseParallel',\\n    'rose',\\n    'scatter',\\n    // other\\n    'funnel',\\n    'heatmap',\\n  ]\\n\\n  const [chartType, setChartType] = useState('columnParallel')\\n  const [dataset, setDataset] = useState(datasetList[1])\\n  const builderRef = useRef(null)\\n  const changeDataset = (c) => () => {\\n    setDataset(c)\\n  }\\n\\n  const changeChartType = (c) => () => {\\n    setChartType(c)\\n  }\\n\\n  useEffect(() => {\\n    if (!ref.current) {\\n      return\\n    }\\n\\n    const vseed: VSeed = {\\n      chartType,\\n      dataset,\\n      legend: {\\n        position: 'bottom',\\n      },\\n    }\\n\\n    const builder = Builder.from(vseed)\\n    const spec = builder.build()\\n    builderRef.current = builder\\n    if (isTable(vseed)) {\\n      const tableInstance = new ListTable(ref.current, spec)\\n      return () => tableInstance.release()\\n    } else if (isPivotTable(vseed)) {\\n      const tableInstance = new PivotTable(ref.current, spec)\\n      return () => tableInstance.release()\\n    } else {\\n      const vchart = new VChart(spec, { dom: ref.current })\\n      vchart.renderSync()\\n      return () => vchart.release()\\n    }\\n  }, [dataset, chartType])\\n\\n  return (\\n    <div\\n      style={{ display: 'flex', flexDirection: 'column' }}\\n      onClick={() => {\\n        console.group(`selected ${chartType}`)\\n        console.log('builder', builderRef.current)\\n        console.log('spec', builderRef.current.spec)\\n        console.log('vseed', builderRef.current.vseed)\\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\\n        console.groupEnd()\\n      }}\\n    >\\n      <div>\\n        {datasetList.map((d, index) => {\\n          return (\\n            <span key={index} style={{ margin: '0 2px 0 0' }}>\\n              <button\\n                onClick={changeDataset(d)}\\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\\n              >\\n                {`dataset` + (index + 1)}\\n              </button>\\n            </span>\\n          )\\n        })}\\n      </div>\\n      <div>\\n        {chartTypes.map((d) => {\\n          return (\\n            <span key={d} style={{ margin: '0 2px 0 0' }}>\\n              <button\\n                onClick={changeChartType(d)}\\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\\n              >\\n                {d}\\n              </button>\\n            </span>\\n          )\\n        })}\\n      </div>\\n\\n      <div ref={ref} style={{ height: 260, width: '100%' }}></div>\\n    </div>\\n  )\\n}\\n\\nexport default Demo\",\n      language: \"tsx\",\n      direction: \"vertical\",\n      editorPosition: \"left\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\nMDXContent.__RSPRESS_PAGE_META = {};\n\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fguide%2Fintro%2FdataReshape.mdx\"] = {\"toc\":[],\"title\":\"数据重塑\",\"headingTitle\":\"数据重塑\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","Object","_provideComponents","_jsxs","_Fragment","_jsx","Playground","MDXContent","MDXLayout"],"mappings":"6KAKA,SAASA,EAAkBC,CAAK,EAC9B,IAAMC,EAAcC,OAAO,MAAM,CAAC,CAChC,GAAI,KACJ,EAAG,IACH,IAAK,MACL,EAAG,GACL,EAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAAsBH,EAAM,UAAU,EACzC,MAAOI,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMC,EAAAA,QAASA,CAAE,CACtB,SAAU,CAACD,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMH,EAAY,EAAE,CAAE,CAC/B,GAAI,OACJ,SAAU,CAACK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKL,EAAY,CAAC,CAAE,CAC7B,UAAW,gBACX,cAAe,OACf,KAAM,QACN,SAAU,GACZ,GAAI,OAAO,AACb,GAAI,KAAMG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMH,EAAY,GAAG,CAAE,CAC/B,UAAW,yBACX,SAAU,CAACK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKL,EAAY,GAAG,CAAE,CAC/B,UAAW,0BACX,SAAU,MACZ,GAAIK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKL,EAAY,GAAG,CAAE,CACxB,UAAW,4BACX,SAAUK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKL,EAAY,CAAC,CAAE,CAC5B,SAAU,qEACZ,EACF,GAAG,AACL,GAAI,KAAMK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKC,EAAAA,CAAUA,CAAE,CACzB,KAAM,stMACN,SAAU,MACV,UAAW,WACX,eAAgB,MAClB,GAAG,AACL,EACF,CACA,SAASC,I,IAAWR,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,AAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAQ,CAAC,EACrB,CAAC,QAASS,CAAS,CAAC,CAAGP,OAAO,MAAM,CAAC,CAAC,EAAGC,AAAAA,GAAAA,EAAAA,EAAAA,AAAAA,IAAsBH,EAAM,UAAU,EACrF,OAAOS,EAAYH,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKG,EAAWP,OAAO,MAAM,CAAC,CAAC,EAAGF,EAAO,CAC1D,SAAUM,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKP,EAAmBC,EACpC,IAAMD,EAAkBC,EAC1B,CACA,MAAeQ,CAEfA,CAAAA,EAAW,mBAAmB,CAAG,CAAC,EAElCA,EAAW,mBAAmB,CAAC,0CAA0C,CAAG,CAAC,IAAM,EAAE,CAAC,MAAQ,OAAO,aAAe,OAAO,YAAc,CAAC,SAAW,KAAK,CAAC,C"}