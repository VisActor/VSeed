"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["3677"],{3168:function(e,n,a){a.r(n),a.d(n,{default:()=>o});var r=a(31549),s=a(6603),t=a(42509);function i(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",h3:"h3",pre:"pre"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"barstyle",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#barstyle",children:"#"}),"barStyle"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive info",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"柱图样式"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,r.jsx)(n.p,{children:"全局样式或条件样式配置"}),"支持图表类型: ",(0,r.jsx)(n.code,{children:"bar"}),", ",(0,r.jsx)(n.code,{children:"barParallel"}),", ",(0,r.jsx)(n.code,{children:"barPercent"}),", ",(0,r.jsx)(n.code,{children:"column"}),", ",(0,r.jsx)(n.code,{children:"columnParallel"}),", ",(0,r.jsx)(n.code,{children:"columnPercent"})]})]}),"\n",(0,r.jsxs)(n.h2,{id:"selector",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#selector",children:"#"}),"selector"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"数据筛选器"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,r.jsxs)(n.p,{children:["若配置",(0,r.jsx)(n.code,{children:"selector"}),", 提供",(0,r.jsx)(n.code,{children:"数值 selector"}),", ",(0,r.jsx)(n.code,{children:"局部数据 selector"}),", ",(0,r.jsx)(n.code,{children:"条件维度 selector"}),", ",(0,r.jsx)(n.code,{children:"条件指标 selector"})," 共四类数据匹配能力"]}),(0,r.jsxs)(n.p,{children:["若未配置",(0,r.jsx)(n.code,{children:"selector"}),", 则样式全局生效."]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"value",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#value",children:"#"}),"value"]}),"\n",(0,r.jsx)(t.$K,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure {5-6,12}",children:"export const SelectorBarValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: ['2019', '2020'],\n      barColor: 'lightpink',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightpink',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"partial-datum",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#partial-datum",children:"#"}),"partial datum"]}),"\n",(0,r.jsx)(t.s5,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure {5,6,7,9,12}",children:"export const SelectorBarPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [{ date: '2019' }, { sales: 60 }],\n      barColor: 'lightblue',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightblue',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"dimension-condition",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dimension-condition",children:"#"}),"dimension condition"]}),"\n",(0,r.jsx)(t._N,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure {5,9,12-17}",children:"export const SelectorBarDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      barColor: 'gray',\n      barColorOpacity: 0.8,\n      barBorderColor: 'gray',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"measure-condition",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#measure-condition",children:"#"}),"measure condition"]}),"\n",(0,r.jsx)(t.CS,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tex",meta:"pure {6,7,9,12-16}",children:"export const SelectorBarMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      barColor: 'lightgreen',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightgreen',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n            { id: 'count', alias: '数量' },\n\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"barstyle-array",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#barstyle-array",children:"#"}),"barStyle array"]}),"\n",(0,r.jsx)(n.p,{children:"优先级顺序: 后者覆盖前者"}),"\n",(0,r.jsx)(t.Uq,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure {11-26}",children:"export const MultiBarStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: [\n      {\n        barColorOpacity: 0.8,\n        barRadius: 10,\n      },\n      {\n        selector: [100, 40],\n        barColor: 'lightgreen',\n        barColorOpacity: 0.8,\n      },\n      {\n        selector: [100, 80],\n        barColor: 'red',\n        barColorOpacity: 0.8,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}let o=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh-CN%2Fgalley%2FmarkStyle%2FbarStyle.mdx"]={toc:[{id:"selector",text:"selector",depth:2},{id:"value",text:"value",depth:3},{id:"partial-datum",text:"partial datum",depth:3},{id:"dimension-condition",text:"dimension condition",depth:3},{id:"measure-condition",text:"measure condition",depth:3},{id:"barstyle-array",text:"barStyle array",depth:2}],title:"barStyle",headingTitle:"barStyle",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=3677.f7a70952.js.map