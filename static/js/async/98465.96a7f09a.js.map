{"version":3,"file":"static/js/async/98465.96a7f09a.js","sources":["webpack://website/./docs/zh-CN/guide/intro/chartTypeSwitch.mdx"],"sourcesContent":["import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@2.0.0-beta.28_@rspress+core@2.0.0-beta.28_@types+react@18.0._14204da554bdf4e8a5f87668605eca92/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    h1: \"h1\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"图表类型\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#图表类型\",\n        children: \"#\"\n      }), \"图表类型\"]\n    }), \"\\n\", _jsx(Playground, {\n      code: \"import { useRef, useEffect, useState } from 'react'\\nimport VChart from '@visactor/vchart'\\nimport { ListTable, PivotTable } from '@visactor/vtable'\\nimport { registerAll, VSeed, Builder, isTable, isPivotTable } from '@visactor/vseed'\\nregisterAll()\\n\\nconst Demo = () => {\\n  const ref = useRef<HTMLDivElement>(null)\\n  const [chartType, setChartType] = useState('line')\\n  const chartTypes = [\\n    'table',\\n    'pivotTable',\\n    // cartesian\\n    'line',\\n    'column',\\n    'columnPercent',\\n    'columnParallel',\\n    'bar',\\n    'barPercent',\\n    'barParallel',\\n    'area',\\n    'areaPercent',\\n    // polar\\n    'pie',\\n    'donut',\\n    'radar',\\n    'roseParallel',\\n    'rose',\\n    'scatter',\\n    'dualAxis',\\n    // other\\n    'funnel',\\n    'heatmap',\\n  ]\\n\\n  const changeChartType = (c) => () => {\\n    setChartType(c)\\n  }\\n\\n  useEffect(() => {\\n    if (!ref.current) {\\n      return\\n    }\\n\\n    const vseed: VSeed = {\\n      chartType,\\n      dataset: [\\n        { date: '2019', profit: 10, sales: 100 },\\n        { date: '2020', profit: 30, sales: 200 },\\n        { date: '2021', profit: 30, sales: 300 },\\n        { date: '2022', profit: 50, sales: 400 },\\n        { date: '2023', profit: 40, sales: 500 },\\n      ],\\n    }\\n    const builder = Builder.from(vseed)\\n    const spec = builder.build()\\n\\n    if (isTable(vseed)) {\\n      const tableInstance = new ListTable(ref.current, spec)\\n      return () => tableInstance.release()\\n    } else if (isPivotTable(vseed)) {\\n      const tableInstance = new PivotTable(ref.current, spec)\\n      return () => tableInstance.release()\\n    } else {\\n      const vchart = new VChart(spec, { dom: ref.current })\\n      vchart.renderSync()\\n      return () => vchart.release()\\n    }\\n  }, [chartType])\\n\\n  return (\\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\\n      <div>\\n        {chartTypes.map((d) => {\\n          return (\\n            <span key={d} style={{ margin: '0 2px 0 0' }}>\\n              <button\\n                onClick={changeChartType(d)}\\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\\n              >\\n                {d}\\n              </button>\\n            </span>\\n          )\\n        })}\\n      </div>\\n      <div ref={ref} style={{ height: 260, width: '100%' }}></div>\\n    </div>\\n  )\\n}\\n\\nexport default Demo\",\n      language: \"tsx\",\n      direction: \"vertical\",\n      editorPosition: \"left\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n\n\nMDXContent.__RSPRESS_PAGE_META = {};\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fguide%2Fintro%2FchartTypeSwitch.mdx\"] = {\"toc\":[],\"title\":\"图表类型\",\"headingTitle\":\"图表类型\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Playground","MDXContent","MDXLayout"],"mappings":"+KAGA,SAASA,EAAkBC,CAAK,EAC9B,IAAMC,EAAc,CAClB,EAAG,IACH,GAAI,KACJ,GAAGC,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,GAAoB,CACvB,GAAGF,EAAM,UAAU,AACrB,EACA,MAAOG,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMC,EAAAA,QAASA,CAAE,CACtB,SAAU,CAACD,AAAAA,GAAAA,EAAAA,IAAAA,AAAAA,EAAMF,EAAY,EAAE,CAAE,CAC/B,GAAI,OACJ,SAAU,CAACI,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKJ,EAAY,CAAC,CAAE,CAC7B,UAAW,gBACX,cAAe,OACf,KAAM,QACN,SAAU,GACZ,GAAI,OAAO,AACb,GAAI,KAAMI,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKC,EAAAA,CAAUA,CAAE,CACzB,KAAM,q0EACN,SAAU,MACV,UAAW,WACX,eAAgB,MAClB,GAAG,AACL,EACF,CACe,SAASC,I,IAAWP,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,AAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAQ,CAAC,EACpC,CAAC,QAASQ,CAAS,CAAC,CAAG,CAC3B,GAAGN,AAAAA,GAAAA,EAAAA,CAAAA,AAAAA,GAAoB,CACvB,GAAGF,EAAM,UAAU,AACrB,EACA,OAAOQ,EAAYH,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKG,EAAW,CACjC,GAAGR,CAAK,CACR,SAAUK,AAAAA,GAAAA,EAAAA,GAAAA,AAAAA,EAAKN,EAAmB,CAChC,GAAGC,CAAK,AACV,EACF,GAAKD,EAAkBC,EACzB,CAGAO,EAAW,mBAAmB,CAAG,CAAC,EAClCA,EAAW,mBAAmB,CAAC,8CAA8C,CAAG,CAAC,IAAM,EAAE,CAAC,MAAQ,OAAO,aAAe,OAAO,YAAc,CAAC,SAAW,KAAK,CAAC,C"}