"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["2585"],{36254:function(e,n,t){t.r(n),t.d(n,{default:()=>l});var r=t(31549),s=t(6603),i=t(49474);function a(e){let n=Object.assign({h1:"h1",a:"a",pre:"pre",code:"code",h2:"h2",div:"div",p:"p"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"快速开始",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#快速开始",children:"#"}),"快速开始"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",meta:"title=install",children:"npm install @visactor/vseed\n\n# optional\nnpm install @visactor/vchart\n\n# optional\nnpm install @visactor/vtable\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"基本用法",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基本用法",children:"#"}),"基本用法"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",meta:"pure {14}",children:"import { registerAll, VSeed, Builder } from '@visactor/vseed'\n\nconst vseed: VSeed = {\n  chartType: 'line',\n  dataset: [\n    { date: '2019', profit: 10, sales: 100 },\n    { date: '2020', profit: 30, sales: 200 },\n    { date: '2021', profit: 30, sales: 300 },\n    { date: '2022', profit: 50, sales: 400 },\n    { date: '2023', profit: 40, sales: 500 },\n  ],\n}\n\nconst spec = Builder.from(vseed).build()\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"vchart-渲染",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vchart-渲染",children:"#"}),"VChart 渲染"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsx)(n.p,{children:"\n只需传入图表类型与数据, 即可直接出图"})})]}),"\n",(0,r.jsx)(i.Z,{code:"import { useRef, useEffect } from 'react'\nimport VChart from '@visactor/vchart'\nimport { registerAll, VSeed, Builder } from '@visactor/vseed'\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"}),"\n",(0,r.jsxs)(n.h2,{id:"pivotchart-渲染",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pivotchart-渲染",children:"#"}),"PivotChart 渲染"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsx)(n.p,{children:"\n配置measures分组, 或维度透视, 即可渲染出透视图表"})})]}),"\n",(0,r.jsx)(i.Z,{code:"import { useRef, useEffect, memo } from 'react'\nimport VChart from '@visactor/vchart'\nimport { register, PivotChart, PivotChartConstructorOptions } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, UnfoldDimensionGroup } from '@visactor/vseed'\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n      dimensions: [{ id: 'date', alias: '日期' }],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroup,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh-CN%2Fguide%2FquickStart.mdx"]={toc:[{id:"基本用法",text:"基本用法",depth:2},{id:"vchart-渲染",text:"VChart 渲染",depth:2},{id:"pivotchart-渲染",text:"PivotChart 渲染",depth:2}],title:"快速开始",headingTitle:"快速开始",frontmatter:{pageType:"doc"}}}}]);