"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["1792"],{14261:function(e,n,t){t.r(n),t.d(n,{default:()=>c});var r=t(31549),i=t(6603),a=t(89956);function o(e){let n=Object.assign({h1:"h1",a:"a"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"数据重塑",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数据重塑",children:"#"}),"数据重塑"]}),"\n",(0,r.jsx)(a.Z,{code:"import { useRef, useEffect, useState } from 'react'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, isTable, isPivotTable } from '@visactor/vseed'\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n  const datasetList = [\n    // 单指标零维度\n    [{ profit: 10 }],\n    // 单指标单维度\n    [\n      { date: '2019', profit: 10 },\n      { date: '2020', profit: 30 },\n      { date: '2021', profit: 30 },\n      { date: '2022', profit: 50 },\n      { date: '2023', profit: 40 },\n    ],\n    // 单指标两维度\n    [\n      { date: '2019', region: 'A', profit: 1 },\n      { date: '2019', region: 'B', profit: 2 },\n      { date: '2019', region: 'C', profit: 3 },\n      { date: '2019', region: 'D', profit: 4 },\n      { date: '2019', region: 'E', profit: 5 },\n\n      { date: '2020', region: 'A', profit: 10 },\n      { date: '2020', region: 'B', profit: 9 },\n      { date: '2020', region: 'C', profit: 8 },\n      { date: '2020', region: 'D', profit: 7 },\n      { date: '2020', region: 'E', profit: 6 },\n\n      { date: '2021', region: 'A', profit: 11 },\n      { date: '2021', region: 'B', profit: 12 },\n      { date: '2021', region: 'C', profit: 13 },\n      { date: '2021', region: 'D', profit: 14 },\n      { date: '2021', region: 'E', profit: 15 },\n    ],\n    // 单指标多维度\n    [\n      { date: '2019', region: 'east', city: 'A', profit: 10 },\n      { date: '2019', region: 'east', city: 'B', profit: 30 },\n      { date: '2019', region: 'west', city: 'A', profit: 30 },\n      { date: '2019', region: 'west', city: 'B', profit: 50 },\n\n      { date: '2020', region: 'east', city: 'A', profit: 15 },\n      { date: '2020', region: 'east', city: 'B', profit: 35 },\n      { date: '2020', region: 'west', city: 'A', profit: 35 },\n      { date: '2020', region: 'west', city: 'B', profit: 55 },\n\n      { date: '2021', region: 'east', city: 'A', profit: 20 },\n      { date: '2021', region: 'east', city: 'B', profit: 40 },\n      { date: '2021', region: 'west', city: 'A', profit: 40 },\n      { date: '2021', region: 'west', city: 'B', profit: 60 },\n    ],\n    // 多指标零维度\n    [{ profit: 1, sales: 2, discount: 0.1 }],\n    // 多指标单维度\n    [\n      { date: '2019', profit: 10, sales: 20, discount: 0.1 },\n      { date: '2020', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2021', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2022', profit: 50, sales: 100, discount: 0.1 },\n      { date: '2023', profit: 40, sales: 80, discount: 0.1 },\n    ],\n    // 多指标多维度\n    [\n      { date: '2019', region: 'east', city: 'A', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', city: 'B', profit: 30, sales: 200 },\n      { date: '2019', region: 'west', city: 'A', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', city: 'B', profit: 50, sales: 500 },\n\n      { date: '2020', region: 'east', city: 'A', profit: 15, sales: 100 },\n      { date: '2020', region: 'east', city: 'B', profit: 35, sales: 200 },\n      { date: '2020', region: 'west', city: 'A', profit: 35, sales: 300 },\n      { date: '2020', region: 'west', city: 'B', profit: 55, sales: 500 },\n\n      { date: '2021', region: 'east', city: 'A', profit: 20, sales: 100 },\n      { date: '2021', region: 'east', city: 'B', profit: 40, sales: 200 },\n      { date: '2021', region: 'west', city: 'A', profit: 40, sales: 300 },\n      { date: '2021', region: 'west', city: 'B', profit: 60, sales: 500 },\n    ],\n  ]\n\n  const chartTypes = [\n    'table',\n    'pivotTable',\n    // cartesian\n    'line',\n    'column',\n    'columnPercent',\n    'columnParallel',\n    'bar',\n    'barPercent',\n    'barParallel',\n    'area',\n    'areaPercent',\n    // polar\n    'pie',\n    'donut',\n    'radar',\n    'roseParallel',\n    'rose',\n    'scatter',\n    // other\n    'funnel',\n    'heatmap',\n  ]\n\n  const [chartType, setChartType] = useState('columnParallel')\n  const [dataset, setDataset] = useState(datasetList[1])\n  const builderRef = useRef(null)\n  const changeDataset = (c) => () => {\n    setDataset(c)\n  }\n\n  const changeChartType = (c) => () => {\n    setChartType(c)\n  }\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType,\n      dataset,\n      legend: {\n        position: 'bottom',\n      },\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n    builderRef.current = builder\n    if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    }\n  }, [dataset, chartType])\n\n  return (\n    <div\n      style={{ display: 'flex', flexDirection: 'column' }}\n      onClick={() => {\n        console.group(`selected ${chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      <div>\n        {datasetList.map((d, index) => {\n          return (\n            <span key={index} style={{ margin: '0 2px 0 0' }}>\n              <button\n                onClick={changeDataset(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {`dataset` + (index + 1)}\n              </button>\n            </span>\n          )\n        })}\n      </div>\n      <div>\n        {chartTypes.map((d) => {\n          return (\n            <span key={d} style={{ margin: '0 2px 0 0' }}>\n              <button\n                onClick={changeChartType(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              </button>\n            </span>\n          )\n        })}\n      </div>\n\n      <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}let c=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2FdataReshape.mdx"]={toc:[],title:"数据重塑",headingTitle:"数据重塑",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=1792.21f248ba.js.map