"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["135"],{5720:function(e,n,r){r.r(n),r.d(n,{default:()=>l});var t=r(31549),s=r(6603),o=r(95847);function a(e){return(0,t.jsx)(o.Z,{code:"const Demo = () => {\n  const MeasureNames = '__MeaName__'\n\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', type: 'A', profit: 10, profit2: 10, sales: 20 },\n      { date: '2019', type: 'B', profit: 30, profit2: 10, sales: 60 },\n      { date: '2019', type: 'C', profit: 30, profit2: 10, sales: 60 },\n      { date: '2019', type: 'D', profit: 50, profit2: 10, sales: 100 },\n      { date: '2019', type: 'E', profit: 40, profit2: 10, sales: 80 },\n\n      { date: '2020', type: 'A', profit: 10, profit2: 10, sales: 20 },\n      { date: '2020', type: 'B', profit: 30, profit2: 10, sales: 60 },\n      { date: '2020', type: 'C', profit: 30, profit2: 10, sales: 60 },\n      { date: '2020', type: 'D', profit: 50, profit2: 10, sales: 100 },\n      { date: '2020', type: 'E', profit: 40, profit2: 10, sales: 80 },\n    ],\n    dimensions: [\n      {\n        id: 'type',\n        alias: '类型',\n        encoding: 'angle',\n      },\n      {\n        id: 'date',\n        alias: '日期',\n        encoding: 'angle',\n      },\n    ],\n    measures: [\n      { id: 'profit', alias: '利润', encoding: 'radius', parentId: '1' },\n      { id: 'sales', alias: '销售额', encoding: 'radius', parentId: '1' },\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect } from 'react'\nimport { useDark } from 'rspress/runtime'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable, PivotChart, register } from '@visactor/vtable'\nimport {\n  registerAll,\n  VSeed,\n  Builder,\n  isPivotChart,\n  isVChart,\n  isPivotTable,\n  isTable,\n  zVSeed,\n  ColorIdEncoding,\n} from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n    console.log('builder', builder)\n    console.log('builder performance', builder.performance)\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      tableInstance.on('legend_item_click', (args) => {\n        console.log('LEGEND_ITEM_CLICK', args)\n        tableInstance.updateFilterRules([\n          {\n            filterKey: ColorIdEncoding,\n            filteredValues: args.value,\n          },\n        ])\n      })\n\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      {' '}\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"",editorPosition:"left"})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-CN%2Fplayground%2Findex.mdx"]={toc:[],title:"标题",headingTitle:"",frontmatter:{title:"标题",playgroundDirection:"horizontal",pageType:"custom"}}}}]);
//# sourceMappingURL=135.171bbb26.js.map