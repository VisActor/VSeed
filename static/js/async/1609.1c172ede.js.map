{"version":3,"file":"static/js/async/1609.1c172ede.js","sources":["webpack://website/./docs/zh-CN/galley/analysis/sort.mdx"],"sourcesContent":["const frontmatter = {\"pageType\":\"doc\"};\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport Playground from \"/home/runner/work/VSeed/VSeed/node_modules/.pnpm/@rspress+plugin-playground@1.45.0_@rspress+core@1.45.0_webpack@5.101.0__monaco-editor@0_77af6e307fc0823c3fa3d293b9873930/node_modules/@rspress/plugin-playground/static/global-components/Playground.tsx\";\nimport {SortAxisByMeasure, SortAxisByDimension, SortAxisByCustom, SortLegendByMeasure, SortLegendByDimension, SortLegendByCustom, SortLegendBySelf, SortLegendByCustomId} from '@components';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h1, {\n      id: \"sort\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#sort\",\n        children: \"#\"\n      }), \"sort\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive info\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"排序\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsx(_components.p, {\n          children: \"排序配置, 统计类图表, 可根据指标或维度对类目轴或图例排序, 或自定义顺序\"\n        })\n      })]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sortaxis\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#sortaxis\",\n        children: \"#\"\n      }), \"sortAXis\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"指标排序\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#指标排序\",\n        children: \"#\"\n      }), \"指标排序\"]\n    }), \"\\n\", _jsx(SortAxisByMeasure, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortAxisByMeasure = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 15 },\\n      { date: '2020', profit: 30, sales: 60, count: 33 },\\n      { date: '2021', profit: 30, sales: 60, count: 22 },\\n      { date: '2022', profit: 50, sales: 100, count: 14 },\\n      { date: '2023', profit: 40, sales: 80, count: 30 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'count', alias: '数量' },\\n      {\\n        id: 'group',\\n        alias: '分组',\\n        children: [\\n          { id: 'sales', alias: '销售额' },\\n          { id: 'profit', alias: '利润' },\\n        ],\\n      },\\n    ],\\n    sortAxis: {\\n      order: 'desc',\\n      orderBy: 'sales',\\n    },\\n  }\\n  return <PivotChart vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"维度排序\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#维度排序\",\n        children: \"#\"\n      }), \"维度排序\"]\n    }), \"\\n\", _jsx(SortAxisByDimension, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortAxisByDimension = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n    sortAxis: {\\n      order: 'desc',\\n      orderBy: 'date',\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"自定义排序\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#自定义排序\",\n        children: \"#\"\n      }), \"自定义排序\"]\n    }), \"\\n\", _jsx(SortAxisByCustom, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortAxisByCustom = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n    sortAxis: {\\n      customOrder: ['2022', '2023', '2021', '2020', '2019'],\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"sortlegend\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#sortlegend\",\n        children: \"#\"\n      }), \"sortLegend\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"图例自身排序\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#图例自身排序\",\n        children: \"#\"\n      }), \"图例自身排序\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [\"\\n仅传入 \", _jsx(_components.code, {\n            children: \"order\"\n          }), \", 则按图例自身的字符顺序排序\"]\n        })\n      })]\n    }), \"\\n\", _jsx(SortLegendBySelf, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortLegendBySelf = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'column',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 15 },\\n      { date: '2020', profit: 30, sales: 60, count: 33 },\\n      { date: '2021', profit: 30, sales: 60, count: 22 },\\n      { date: '2022', profit: 50, sales: 100, count: 14 },\\n      { date: '2023', profit: 40, sales: 80, count: 30 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'count', alias: '数量' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'profit', alias: '利润' },\\n    ],\\n    sortLegend: {\\n      order: 'desc',\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"指标排序-1\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#指标排序-1\",\n        children: \"#\"\n      }), \"指标排序\"]\n    }), \"\\n\", _jsx(SortLegendByMeasure, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortLegendByMeasure = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 15 },\\n      { date: '2020', profit: 30, sales: 60, count: 33 },\\n      { date: '2021', profit: 30, sales: 60, count: 22 },\\n      { date: '2022', profit: 50, sales: 100, count: 14 },\\n      { date: '2023', profit: 40, sales: 80, count: 30 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'count', alias: '数量' },\\n      {\\n        id: 'group',\\n        alias: '分组',\\n        children: [\\n          { id: 'sales', alias: '销售额' },\\n          { id: 'profit', alias: '利润' },\\n        ],\\n      },\\n    ],\\n    sortLegend: {\\n      order: 'desc',\\n      orderBy: 'sales',\\n    },\\n  }\\n  return <PivotChart vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"维度排序-1\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#维度排序-1\",\n        children: \"#\"\n      }), \"维度排序\"]\n    }), \"\\n\", _jsx(SortLegendByDimension, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortLegendByDimension = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n    sortLegend: {\\n      order: 'desc',\\n      orderBy: 'date',\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"自定义排序图例名称\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#自定义排序图例名称\",\n        children: \"#\"\n      }), \"自定义排序(图例名称)\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"builder.getColorItems()\"\n          }), \" 可获取到图例名称的数组\"]\n        })\n      })]\n    }), \"\\n\", _jsx(SortLegendByCustom, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortLegendByCustom = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'line',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n    sortLegend: {\\n      customOrder: ['销售额', '数量', '利润'],\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"自定义排序图例id\",\n      children: [_jsx(_components.a, {\n        className: \"header-anchor\",\n        \"aria-hidden\": \"true\",\n        href: \"#自定义排序图例id\",\n        children: \"#\"\n      }), \"自定义排序(图例Id)\"]\n    }), \"\\n\", _jsxs(_components.div, {\n      className: \"rspress-directive tip\",\n      children: [_jsx(_components.div, {\n        className: \"rspress-directive-title\",\n        children: \"TIP\"\n      }), _jsx(_components.div, {\n        className: \"rspress-directive-content\",\n        children: _jsxs(_components.p, {\n          children: [_jsx(_components.code, {\n            children: \"builder.getColorIdMap()\"\n          }), \" 可获取到图例id和名称的映射关系\"]\n        })\n      })]\n    }), \"\\n\", _jsx(SortLegendByCustomId, {}), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-tsx\",\n        meta: \"pure {}\",\n        children: \"export const SortLegendByCustomId = memo(() => {\\n  const vseed: VSeed = {\\n    chartType: 'columnParallel',\\n    dataset: [\\n      { date: '2019', profit: 10, sales: 20, count: 50 },\\n      { date: '2020', profit: 30, sales: 60, count: 50 },\\n      { date: '2021', profit: 30, sales: 60, count: 50 },\\n      { date: '2022', profit: 50, sales: 100, count: 50 },\\n      { date: '2023', profit: 40, sales: 80, count: 50 },\\n    ],\\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\\n    measures: [\\n      { id: 'profit', alias: '利润' },\\n      { id: 'sales', alias: '销售额' },\\n      { id: 'count', alias: '数量' },\\n    ],\\n    sortLegend: {\\n      customOrder: ['数量-count', '销售额-sales', '利润-profit'],\\n    },\\n  }\\n  return <VChartRender vseed={vseed} />\\n})\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n\nMDXContent.__RSPRESS_PAGE_META = {};\n\nMDXContent.__RSPRESS_PAGE_META[\"zh-CN%2Fgalley%2Fanalysis%2Fsort.mdx\"] = {\"toc\":[{\"id\":\"sortaxis\",\"text\":\"sortAXis\",\"depth\":2},{\"id\":\"指标排序\",\"text\":\"指标排序\",\"depth\":3},{\"id\":\"维度排序\",\"text\":\"维度排序\",\"depth\":3},{\"id\":\"自定义排序\",\"text\":\"自定义排序\",\"depth\":3},{\"id\":\"sortlegend\",\"text\":\"sortLegend\",\"depth\":2},{\"id\":\"图例自身排序\",\"text\":\"图例自身排序\",\"depth\":3},{\"id\":\"指标排序-1\",\"text\":\"指标排序\",\"depth\":3},{\"id\":\"维度排序-1\",\"text\":\"维度排序\",\"depth\":3},{\"id\":\"自定义排序图例名称\",\"text\":\"自定义排序(图例名称)\",\"depth\":3},{\"id\":\"自定义排序图例id\",\"text\":\"自定义排序(图例Id)\",\"depth\":3}],\"title\":\"sort\",\"headingTitle\":\"sort\",\"frontmatter\":{\"pageType\":\"doc\"}};\n"],"names":["_createMdxContent","props","_components","Object","_provideComponents","_jsxs","_Fragment","_jsx","SortAxisByMeasure","SortAxisByDimension","SortAxisByCustom","SortLegendBySelf","SortLegendByMeasure","SortLegendByDimension","SortLegendByCustom","SortLegendByCustomId","MDXContent","MDXLayout"],"mappings":"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"}