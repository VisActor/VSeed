"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["41705"],{67316:function(e,n,t){t.r(n),t.d(n,{default:()=>c});var r=t(31549),s=t(6603),a=t(95847);function d(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"跨平台渲染",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#跨平台渲染",children:"#"}),"跨平台渲染"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["\n",(0,r.jsx)(n.code,{children:"vseed"}),"支持无损序列化, 因此可以",(0,r.jsx)(n.code,{children:"跨平台传输"}),", ",(0,r.jsx)(n.code,{children:"复制粘贴"}),", 在Node环境、浏览器环境, 都可以直接通过",(0,r.jsx)(n.code,{children:"builder"}),"获取到完整的spec"]})})]}),"\n",(0,r.jsx)(a.Z,{code:"import { useRef, useEffect, useState } from 'react'\nimport VChart from '@visactor/vchart'\nimport { registerAll, VSeed, Builder } from '@visactor/vseed'\nregisterAll()\n\nconst Demo = () => {\n  const [vseed, setVSeed] = useState()\n  const ref = useRef()\n  const chartRef = useRef()\n  const vseed1: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 100 },\n      { date: '2020', profit: 30, sales: 200 },\n      { date: '2021', profit: 30, sales: 300 },\n      { date: '2022', profit: 50, sales: 400 },\n      { date: '2023', profit: 40, sales: 500 },\n    ],\n  }\n\n  const vseed2: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 100 },\n      { date: '2020', profit: 30, sales: 200 },\n      { date: '2021', profit: 30, sales: 300 },\n      { date: '2022', profit: 50, sales: 400 },\n      { date: '2023', profit: 40, sales: 500 },\n    ],\n  }\n\n  const copyVSeed1 = async () => {\n    await navigator.clipboard.writeText(JSON.stringify(vseed1))\n  }\n  const copyVSeed2 = async () => {\n    await navigator.clipboard.writeText(JSON.stringify(vseed2))\n  }\n\n  const paste = async () => {\n    try {\n      if (chartRef.current) {\n        chartRef.current.release()\n      }\n      const clipboardText = await navigator.clipboard.readText()\n      const parsedVSeed = JSON.parse(clipboardText)\n\n      const builder = Builder.from(parsedVSeed)\n      const advancedVSeed = builder.buildAdvanced()\n      const spec = builder.buildSpec(advancedVSeed)\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n\n      chartRef.current = vchart\n    } catch (error) {\n      console.log('debug', error)\n      alert('从剪切板读取内容时出错')\n    }\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ width: 100 }}>\n        <button onClick={copyVSeed1} style={{ width: 100, marginBottom: 4 }}>\n          copy demo1\n        </button>\n        <button onClick={copyVSeed2} style={{ width: 100, marginBottom: 4 }}>\n          copy demo2\n        </button>\n        <button onClick={paste} style={{ width: 100 }}>\n          paste\n        </button>\n      </div>\n\n      <div ref={ref} style={{ height: 260, width: 'calc(100% - 100px)' }}></div>\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(d,e)})):d(e)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2FcrossPlatformRender.mdx"]={toc:[],title:"跨平台渲染",headingTitle:"跨平台渲染",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=41705.33c3475b.js.map