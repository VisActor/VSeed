"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["68"],{9987:function(e,n,t){t.r(n),t.d(n,{default:()=>o});var r=t(31549),s=t(6603),u=t(89956);function a(e){return(0,r.jsx)(u.Z,{code:"const Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dataset: [\n      {\n        type: 'A',\n        subType: 'a',\n        value: 98,\n      },\n      {\n        type: 'A',\n        subType: 'b',\n        value: 71,\n      },\n      {\n        type: 'A',\n        subType: 'c',\n        value: 22,\n      },\n      {\n        type: 'A',\n        subType: 'd',\n        value: 49,\n      },\n      {\n        type: 'A',\n        subType: 'e',\n        value: 92,\n      },\n      {\n        type: 'B',\n        subType: 'a',\n        value: 85,\n      },\n      {\n        type: 'B',\n        subType: 'b',\n        value: 45,\n      },\n      {\n        type: 'B',\n        subType: 'c',\n        value: 19,\n      },\n      {\n        type: 'B',\n        subType: 'd',\n        value: 58,\n      },\n      {\n        type: 'B',\n        subType: 'e',\n        value: 26,\n      },\n      {\n        type: 'C',\n        subType: 'a',\n        value: 44,\n      },\n      {\n        type: 'C',\n        subType: 'b',\n        value: 23,\n      },\n      {\n        type: 'C',\n        subType: 'c',\n        value: 6,\n      },\n      {\n        type: 'C',\n        subType: 'd',\n        value: 42,\n      },\n      {\n        type: 'C',\n        subType: 'e',\n        value: 27,\n      },\n      {\n        type: 'D',\n        subType: 'a',\n        value: 79,\n      },\n      {\n        type: 'D',\n        subType: 'b',\n        value: 89,\n      },\n      {\n        type: 'D',\n        subType: 'c',\n        value: 65,\n      },\n      {\n        type: 'D',\n        subType: 'd',\n        value: 56,\n      },\n      {\n        type: 'D',\n        subType: 'e',\n        value: 1,\n      },\n      {\n        type: 'E',\n        subType: 'a',\n        value: 59,\n      },\n      {\n        type: 'E',\n        subType: 'b',\n        value: 94,\n      },\n      {\n        type: 'E',\n        subType: 'c',\n        value: 45,\n      },\n      {\n        type: 'E',\n        subType: 'd',\n        value: 80,\n      },\n      {\n        type: 'E',\n        subType: 'e',\n        value: 47,\n      },\n    ],\n    sortValue: {\n      order: 'desc',\n      orderBy: 'value',\n    },\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nimport { useRef, useEffect } from 'react'\nimport { useDark } from 'rspress/runtime'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable, PivotChart, register } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isPivotTable, isTable, zVSeed } from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    console.log('builder', builder)\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    ></div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"",editorPosition:"left"})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}let o=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh-CN%2Fplayground%2Findex.mdx"]={toc:[],title:"标题",headingTitle:"",frontmatter:{title:"标题",playgroundDirection:"horizontal",pageType:"custom"}}}}]);
//# sourceMappingURL=68.acaba387.js.map