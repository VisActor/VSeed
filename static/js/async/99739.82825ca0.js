"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["99739"],{92577:function(e,n,s){s.r(n),s.d(n,{default:()=>o});var a=s(31549),t=s(6603),d=s(28489);function r(e){let n=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code"},(0,t.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"sort",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sort",children:"#"}),"sort"]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive info",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"排序"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsx)(n.p,{children:"排序配置, 统计类图表, 可根据指标或维度对类目轴或图例排序, 或自定义顺序"})})]}),"\n",(0,a.jsxs)(n.h2,{id:"sortaxis",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sortaxis",children:"#"}),"sortAXis"]}),"\n",(0,a.jsxs)(n.h3,{id:"指标排序",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#指标排序",children:"#"}),"指标排序"]}),"\n",(0,a.jsx)(d.OE7,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortAxisByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sort: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return <PivotChart vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"维度排序",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#维度排序",children:"#"}),"维度排序"]}),"\n",(0,a.jsx)(d.igU,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortAxisByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sort: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"自定义排序",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义排序",children:"#"}),"自定义排序"]}),"\n",(0,a.jsx)(d.apy,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortAxisByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sort: {\n      customOrder: ['2022', '2023', '2021', '2020', '2019'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"sortlegend",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sortlegend",children:"#"}),"sortLegend"]}),"\n",(0,a.jsxs)(n.h3,{id:"图例自身排序",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#图例自身排序",children:"#"}),"图例自身排序"]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsxs)(n.p,{children:["\n仅传入 ",(0,a.jsx)(n.code,{children:"order"}),", 则按图例自身的字符顺序排序"]})})]}),"\n",(0,a.jsx)(d.JO2,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortLegendBySelf = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'profit', alias: '利润' },\n    ],\n    sortLegend: {\n      order: 'desc',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"指标排序-1",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#指标排序-1",children:"#"}),"指标排序"]}),"\n",(0,a.jsx)(d.dIL,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortLegendByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return <PivotChart vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"维度排序-1",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#维度排序-1",children:"#"}),"维度排序"]}),"\n",(0,a.jsx)(d.z0x,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortLegendByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"自定义排序图例名称",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义排序图例名称",children:"#"}),"自定义排序(图例名称)"]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"builder.getColorItems()"})," 可获取到图例名称的数组"]})})]}),"\n",(0,a.jsx)(d.Egl,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortLegendByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['销售额', '数量', '利润'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"自定义排序图例id",children:[(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义排序图例id",children:"#"}),"自定义排序(图例Id)"]}),"\n",(0,a.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,a.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,a.jsx)(n.div,{className:"rspress-directive-content",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"builder.getColorIdMap()"})," 可获取到图例id和名称的映射关系"]})})]}),"\n",(0,a.jsx)(d.b9B,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",meta:"pure {}",children:"export const SortLegendByCustomId = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['数量-count', '销售额-sales', '利润-profit'],\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(r,e)})):r(e)}let o=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-CN%2Fgalley%2Fanalysis%2Fsort.mdx"]={toc:[{id:"sortaxis",text:"sortAXis",depth:2},{id:"指标排序",text:"指标排序",depth:3},{id:"维度排序",text:"维度排序",depth:3},{id:"自定义排序",text:"自定义排序",depth:3},{id:"sortlegend",text:"sortLegend",depth:2},{id:"图例自身排序",text:"图例自身排序",depth:3},{id:"指标排序-1",text:"指标排序",depth:3},{id:"维度排序-1",text:"维度排序",depth:3},{id:"自定义排序图例名称",text:"自定义排序(图例名称)",depth:3},{id:"自定义排序图例id",text:"自定义排序(图例Id)",depth:3}],title:"sort",headingTitle:"sort",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=99739.82825ca0.js.map