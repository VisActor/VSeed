[{"title":"发布","content":"#\n\n要生成新的 changesets，请在仓库的根目录中执行 pnpm changeset。 .changeset 目录中生成的 markdown\n文件应被提交到存储库。\n\npnpm changeset\n\n\n指定版本，并更新变更日志文件。\n\npnpm changeset version\n\n\n更新依赖和lock file\n\npnpm install\n\n\n提交更改\n\ngit add .\ngit commit -m \"chore: release message\"\ngit push\n\n\nPR合入至main分支后, 会自动触发 changesets workflow, 进行打包与发布工作.","routePath":"/development/deployment/publish","lang":"zh-CN","toc":[],"frontmatter":{"title":"发布"},"version":""},{"title":"快速启动","content":"#\n\n\n环境准备#\n\nNode Install\n\nnvm install 20\nnvm use 20\n\n\nPnpm Install\n\n> package.json中配置packageManager为pnpm@10.13.1, corepack会自动安装该版本\n\ncorepack enable pnpm\n\n\n检查pnpm版本, 预期是10.13.1.\n\npnpm -v # expected 10.13.1\n\n\n\n启动项目#\n\n启动站点, 可同时开发调试vseed\n\npnpm install\n\npnpm dev\n\n\n构建\n\npnpm build \n\n\n使用 rsdoctor 分析产物\n\npnpm build:rsdoctor \n# or\npnpm dev:rsdoctor\n","routePath":"/development/","lang":"zh-CN","toc":[{"text":"环境准备","id":"环境准备","depth":2,"charIndex":3},{"text":"启动项目","id":"启动项目","depth":2,"charIndex":206}],"frontmatter":{},"version":""},{"title":"","content":"const Demo = () => {\n  const vseed: VSeed = {\n    \"color\": {\n      \"colorScheme\": [\n        \"#1664FF\",\n        \"#1AC6FF\",\n        \"#FF8A00\",\n        \"#3CC780\",\n        \"#7442D4\",\n        \"#FFC400\",\n        \"#304D77\",\n        \"#B48DEB\",\n        \"#009488\",\n        \"#FF7DDA\",\n        \"#2A488C\",\n        \"#749EFF\",\n        \"#FCC18F\",\n        \"#3FB9B8\",\n        \"#7A94BF\",\n        \"#FCE286\",\n        \"#4363AE\",\n        \"#685BA6\",\n        \"#DE5A98\",\n        \"#7FB2B2\"\n      ]\n    },\n    \"legend\": {\n      \"position\": \"bottom\",\n      \"maxSize\": 2\n    },\n    \"chartType\": \"area\",\n    \"dataset\": [\n      {\n        \"type\": \"android\",\n        \"locale\": \"zh_cn\",\n        \"test_value\": 67\n      },\n      {\n        \"type\": \"android\",\n        \"locale\": \"zh\",\n        \"test_value\": 73\n      },\n      {\n        \"type\": \"android\",\n        \"locale\": \"en_us\",\n        \"test_value\": 72\n      },\n      {\n        \"type\": \"android\",\n        \"locale\": \"en\",\n        \"test_value\": 57\n      },\n      {\n        \"type\": \"ios\",\n        \"locale\": \"zh_cn\",\n        \"test_value\": 47\n      },\n      {\n        \"type\": \"ios\",\n        \"locale\": \"en_us\",\n        \"test_value\": 86\n      },\n      {\n        \"type\": \"ios\",\n        \"locale\": \"en\",\n        \"test_value\": 78\n      },\n      {\n        \"type\": \"ios\",\n        \"locale\": \"zh\",\n        \"test_value\": 49\n      },\n      {\n        \"type\": \"mac\",\n        \"locale\": \"zh\",\n        \"test_value\": 55\n      },\n      {\n        \"type\": \"mac\",\n        \"locale\": \"en\",\n        \"test_value\": 51\n      },\n      {\n        \"type\": \"mac\",\n        \"locale\": \"zh_cn\",\n        \"test_value\": 65\n      },\n      {\n        \"type\": \"mac\",\n        \"locale\": \"en_us\",\n        \"test_value\": 75\n      },\n      {\n        \"type\": \"windows\",\n        \"locale\": \"en_us\",\n        \"test_value\": 71\n      },\n      {\n        \"type\": \"windows\",\n        \"locale\": \"zh\",\n        \"test_value\": 51\n      },\n      {\n        \"type\": \"windows\",\n        \"locale\": \"zh_cn\",\n        \"test_value\": 57\n      },\n      {\n        \"type\": \"windows\",\n        \"locale\": \"en\",\n        \"test_value\": 46\n      }\n    ],\n    \"dimensions\": [\n      {\n        \"id\": \"type\",\n        \"format\": {\n          \"type\": \"digit\",\n          \"precision\": 0\n        },\n        \"alias\": \"name\"\n      },\n      {\n        \"id\": \"locale\",\n        \"format\": {\n          \"type\": \"digit\",\n          \"precision\": 0\n        },\n        \"alias\": \"language\"\n      }\n    ],\n    \"measures\": [\n      {\n        \"index\": 0,\n        \"format\": {\n          \"type\": \"digit\",\n          \"precision\": 0\n        },\n        \"id\": \"test_value\",\n        \"alias\": \"value\"\n      }\n    ],\n    \"locale\": \"zh-CN\"\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={ vseed } />\n}\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    console.log('builder', builder)\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref= { ref }\n  style = {{ height: 300, width: '100%' }\n}\nonClick = {() => {\n  console.group(`selected ${vseed.chartType}`)\n  console.log('builder', builderRef.current)\n  console.log('spec', builderRef.current.spec)\n  console.log('vseed', builderRef.current.vseed)\n  console.log('advancedVSeed', builderRef.current.advancedVSeed)\n  console.groupEnd()\n}}\n    > </div>\n  )\n}\n\nexport default Demo\n","routePath":"/development/tests/area","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\n排序\n\n排序配置, 统计类图表, 可根据指标或维度对类目轴或图例排序, 或自定义顺序\n\n\nsortAXis#\n\n\n指标排序#\n\nexport const SortAxisByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sort: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return \n})\n\n\n\n维度排序#\n\nexport const SortAxisByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sort: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return \n})\n\n\n\n自定义排序#\n\nexport const SortAxisByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sort: {\n      customOrder: ['2022', '2023', '2021', '2020', '2019'],\n    },\n  }\n  return \n})\n\n\n\nsortLegend#\n\n\n图例自身排序#\n\nTIP\n\n仅传入 order , 则按图例自身的字符顺序排序\n\nexport const SortLegendBySelf = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'profit', alias: '利润' },\n    ],\n    sortLegend: {\n      order: 'desc',\n    },\n  }\n  return \n})\n\n\n\n指标排序#\n\nexport const SortLegendByMeasure = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 15 },\n      { date: '2020', profit: 30, sales: 60, count: 33 },\n      { date: '2021', profit: 30, sales: 60, count: 22 },\n      { date: '2022', profit: 50, sales: 100, count: 14 },\n      { date: '2023', profit: 40, sales: 80, count: 30 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'count', alias: '数量' },\n      {\n        id: 'group',\n        alias: '分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'sales',\n    },\n  }\n  return \n})\n\n\n\n维度排序#\n\nexport const SortLegendByDimension = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      order: 'desc',\n      orderBy: 'date',\n    },\n  }\n  return \n})\n\n\n\n自定义排序(图例名称)#\n\nTIP\n\nbuilder.getColorItems() 可获取到图例名称的数组\n\nexport const SortLegendByCustom = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['销售额', '数量', '利润'],\n    },\n  }\n  return \n})\n\n\n\n自定义排序(图例Id)#\n\nTIP\n\nbuilder.getColorIdMap() 可获取到图例id和名称的映射关系\n\nexport const SortLegendByCustomId = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n    sortLegend: {\n      customOrder: ['数量-count', '销售额-sales', '利润-profit'],\n    },\n  }\n  return \n})\n","routePath":"/galley/analysis/sort","lang":"zh-CN","toc":[{"text":"sortAXis","id":"sortaxis","depth":2,"charIndex":47},{"text":"指标排序","id":"指标排序","depth":3,"charIndex":59},{"text":"维度排序","id":"维度排序","depth":3,"charIndex":858},{"text":"自定义排序","id":"自定义排序","depth":3,"charIndex":1560},{"text":"sortLegend","id":"sortlegend","depth":2,"charIndex":2277},{"text":"图例自身排序","id":"图例自身排序","depth":3,"charIndex":2291},{"text":"指标排序","id":"指标排序-1","depth":3,"charIndex":3009},{"text":"维度排序","id":"维度排序-1","depth":3,"charIndex":3816},{"text":"自定义排序(图例名称)","id":"自定义排序图例名称","depth":3,"charIndex":4526},{"text":"自定义排序(图例Id)","id":"自定义排序图例id","depth":3,"charIndex":5278}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"annotationArea","content":"#\n\n\ncolumn#\n\nexport const AnnotationAreaSelectorVertical = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2021'],\n      text: '区域',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nbar#\n\nexport const AnnotationAreaSelectorHorizontal = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2021'],\n      text: '区域',\n      textPosition: 'topRight',\n      textAlign: 'right',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nline#\n\nexport const AnnotationAreaSelectorLine = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationArea: {\n      selector: ['2021'],\n      text: '区域',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/annotation/annotationArea","lang":"zh-CN","toc":[{"text":"column","id":"column","depth":2,"charIndex":3},{"text":"bar","id":"bar","depth":2,"charIndex":738},{"text":"line","id":"line","depth":2,"charIndex":1519}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"annotationHorizontalLine","content":"#\n\n\nselector#\n\nexport const AnnotationHorizontalLineSelector = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationHorizontalLine: {\n      selector: 200,\n      text: '销售额最大值',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nfixed y value#\n\nexport const AnnotationHorizontalLineValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationHorizontalLine: [\n      {\n        yValue: 220.5,\n        text: `数值 ${220.5}`,\n      },\n      {\n        yValue: [300, 30],\n        text: `参考线`,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/annotation/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":3},{"text":"fixed y value","id":"fixed-y-value","depth":2,"charIndex":744}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"annotationPoint","content":"#\n\n\nselector#\n\n\nvalue point#\n\nexport const AnnotationPointValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: {\n      selector: 10,\n      text: '最小值',\n      textFontWeight: 600,\n      textBaseline: 'bottom',\n      textAlign: 'center',\n      textColor: '#fff',\n      backgroundColor: 'gray',\n      backgroundBorderRadius: 10,\n      backgroundPadding: 10,\n      offsetY: -5,\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\npartial datum#\n\nexport const AnnotationPointPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: [\n      {\n        selector: [\n          {\n            sales: 20,\n          },\n        ],\n        text: ['销售额', '最小值 20'],\n        textAlign: 'right',\n        offsetX: -15,\n      },\n      {\n        selector: [100],\n        text: ['销售额', '最大值 100'],\n        textAlign: 'right',\n        offsetY: 15,\n        offsetX: -20,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\ncondition#\n\nexport const AnnotationPointCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationPoint: [\n      {\n        selector: [\n          {\n            field: 'sales',\n            operator: '<=',\n            value: 80,\n          },\n        ],\n        text: '销售额<=80',\n        textAlign: 'right',\n        offsetX: -15,\n      },\n      {\n        selector: [\n          {\n            field: 'date',\n            operator: 'in',\n            value: '2023',\n          },\n        ],\n        text: '2023 年',\n        textAlign: 'left',\n        offsetX: 0,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/annotation/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":3},{"text":"value point","id":"value-point","depth":3,"charIndex":15},{"text":"partial datum","id":"partial-datum","depth":3,"charIndex":955},{"text":"condition","id":"condition","depth":3,"charIndex":1967}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"annotationVerticalLine","content":"#\n\n\nselector#\n\nexport const AnnotationVerticalLineSelector = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationVerticalLine: {\n      selector: '2020',\n      text: '下降开始',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nfixed x value#\n\n固定的x值, 用于标注垂直线, 类目轴在x方向, 则可输入维值, 数值轴在x方向, 则可输入具体的数值\n\nexport const AnnotationVerticalLineValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 100, sales: 200, count: 500 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    annotationVerticalLine: {\n      xValue: '2020',\n      text: '下降开始',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/annotation/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":3},{"text":"fixed x value","id":"fixed-x-value","depth":2,"charIndex":741}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"updateSpec","content":"#\n\n\n分段面积图#\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'areaRange',\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 10, sales: 60 },\n      { date: '2019', region: 'east', city: 'B', profit: 30, sales: 60 },\n      { date: '2019', region: 'east', city: 'C', profit: 30, sales: 60 },\n      { date: '2019', region: 'east', city: 'D', profit: 50, sales: 60 },\n      { date: '2019', region: 'east', city: 'E', profit: 40, sales: 60 },\n      { date: '2020', region: 'east', city: 'A', profit: 100, sales: 60 },\n      { date: '2020', region: 'east', city: 'B', profit: 123, sales: 60 },\n      { date: '2020', region: 'east', city: 'C', profit: 134, sales: 60 },\n      { date: '2020', region: 'east', city: 'D', profit: 111, sales: 60 },\n      { date: '2020', region: 'east', city: 'E', profit: 210, sales: 60 },\n    ],\n    dimensions: [{ id: 'date' }, { id: 'city' }],\n    measures: [{ id: 'profit' }, { id: 'sales' }],\n    annotationHorizontalLine: {\n      yValue: 60,\n      text: 'text',\n      textAlign: 'left',\n      textPosition: 'insideStart',\n    },\n  }\n\n  updateSpec('areaRange', (spec, context) => {\n    const { vseed } = context\n\n    const maxValue = Math.max(...vseed.dataset.map((d) => d.profit))\n    const minValue = Math.min(...vseed.dataset.map((d) => d.profit))\n    const middle = 60\n    const percent = (maxValue - middle) / (maxValue - minValue)\n\n    spec.series[0].area = {\n      style: {\n        curveType: 'monotoneX',\n        fillOpacity: 0.15,\n        fill: {\n          gradient: 'linear',\n          x0: 0.5,\n          y0: 0,\n          x1: 0.5,\n          y1: 1,\n          stops: [\n            {\n              offset: 0,\n              color: '#5766EC',\n            },\n            {\n              offset: percent,\n              color: 'rgba(0,0,255,0)',\n            },\n            {\n              offset: percent,\n              color: 'rgba(0,0,255,0)',\n            },\n            {\n              offset: 1,\n              color: '#2ef1adff',\n            },\n          ],\n        },\n      },\n    }\n    spec.series[1].line = {\n      style: {\n        visible: true,\n        curveType: 'monotoneX',\n        stroke: {\n          gradient: 'linear',\n          x0: 0.5,\n          y0: 0,\n          x1: 0.5,\n          y1: 1,\n          stops: [\n            {\n              offset: 0,\n              color: '#5766EC',\n            },\n            {\n              offset: percent,\n              color: '#5766EC',\n            },\n            {\n              offset: percent,\n              color: '#2ef1adff',\n            },\n            {\n              offset: 1,\n              color: '#2ef1adff',\n            },\n          ],\n        },\n      },\n    }\n    spec.series[2].line = {\n      style: {\n        visible: false,\n        curveType: 'monotoneX',\n      },\n    }\n    spec.markLine[0].startSymbol = {\n      visible: true,\n      style: {\n        angle: 90,\n      },\n    }\n    spec.markLine[0].endSymbol = {\n      visible: false,\n    }\n    spec.tooltip.dimension.content = spec.tooltip.dimension.content.map((item) => {\n      return {\n        ...item,\n        shapeFill: (a) => {\n          console.log(a)\n          return '#5766EC'\n        },\n      }\n    })\n\n    return spec\n  })\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\n\n\n\n\nimport {\n  registerAll,\n  VSeed,\n  Builder,\n  isPivotChart,\n  isVChart,\n  isPivotTable,\n  isTable,\n  zVSeed,\n  updateSpec,\n} from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    ></div>\n  )\n}\n\nexport default Demo\n","routePath":"/galley/api/updateSpec","lang":"zh-CN","toc":[{"text":"分段面积图","id":"分段面积图","depth":2,"charIndex":3}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"通用配置","content":"#\n\n通用配置\n\n包含Chart 和 Table 两大类, 通用的配置项对所有图表类型均生效","routePath":"/galley/baseConfig","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"backgroundColor","content":"#\n\n{\n  \"chartType\": \"column\",\n  \"backgroundColor\": \"lightyellow\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n  ]\n}\n","routePath":"/galley/baseConfig/chart/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"color","content":"#\n\n\ncolorScheme#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"color\": {\n    \"colorScheme\": [\"#cdb4db\", \"#ffc8dd\", \"#ffafcc\", \"#bde0fe\", \"#a2d2ff\"]\n  },\n  \"dataset\": [\n    { \"date\": \"2019\", \"type\": \"A\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2019\", \"type\": \"B\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2019\", \"type\": \"C\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2019\", \"type\": \"D\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2019\", \"type\": \"E\", \"profit\": 40, \"sales\": 80 },\n\n    { \"date\": \"2020\", \"type\": \"A\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"type\": \"B\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2020\", \"type\": \"C\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2020\", \"type\": \"D\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2020\", \"type\": \"E\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    },\n    {\n      \"id\": \"type\",\n      \"alias\": \"类型\",\n      \"location\": \"dimension\"\n    }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n  ]\n}\n\n\n\ncolorMapping#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"color\": {\n    \"colorMapping\": {\n      \"利润\": \"yellow\",\n      \"E\": \"green\",\n      \"E-销售额\": \"red\"\n    }\n  },\n  \"dataset\": [\n    { \"date\": \"2019\", \"type\": \"A\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2019\", \"type\": \"B\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2019\", \"type\": \"C\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2019\", \"type\": \"D\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2019\", \"type\": \"E\", \"profit\": 40, \"sales\": 80 },\n\n    { \"date\": \"2020\", \"type\": \"A\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"type\": \"B\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2020\", \"type\": \"C\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2020\", \"type\": \"D\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2020\", \"type\": \"E\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    },\n    {\n      \"id\": \"type\",\n      \"alias\": \"类型\",\n      \"location\": \"dimension\"\n    }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n  ]\n}\n","routePath":"/galley/baseConfig/chart/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":3},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":1099}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"label","content":"#\n\n\nenable#\n\n{\n  \"chartType\": \"column\",\n  \"label\": {\n    \"enable\": false\n  },\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n  ]\n}\n","routePath":"/galley/baseConfig/chart/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":3}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"legend","content":"#\n\n\nenable#\n\nexport const BaseConfigLegend = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\nposition#\n\n{\n  position?:\n  | 'top'   | 'topLeft'   | 'topRight'    | 'tl' | 'tr'\n  | 'right' | 'rightTop'  | 'rightBottom' | 'rt' | 'rb'\n  | 'bottom'| 'bottomLeft'| 'bottomRight' | 'bl' | 'br'\n  | 'left'  | 'leftTop'   | 'leftBottom'  | 'lt' | 'lb'\n}\n\n\nexport const BaseConfigLegendPosition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'bl',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\nmaxSize#\n\nexport const BaseConfigLegendMaxSize = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      maxSize: 2,\n    },\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n\n      { date: '2020', region: 'north of east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n    ],\n  }\n  return \n})\n\n\n\nborder#\n\nexport const BaseConfigLegendMaxSize = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      border: false,\n      position: 'rt',\n      maxSize: 2,\n    },\n    dataset: [\n      { date: '2019', region: 'east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2019', region: 'east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n\n      { date: '2020', region: 'north of east', city: 'A', profit: 1, sales: 2, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'B', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'C', profit: 3, sales: 6, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'D', profit: 5, sales: 10, discount: 0.5 },\n      { date: '2020', region: 'north of east', city: 'E', profit: 4, sales: 8, discount: 0.5 },\n    ],\n  }\n  return \n})\n\n\n\nlabelFontSize#\n\nexport const BaseConfigLegendLabel = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      labelFontSize: 12,\n      labelFontColor: '#000',\n      labelFontWeight: 'bold',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\nlabelFontColor#\n\nexport const BaseConfigLegendLabel = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      labelFontSize: 12,\n      labelFontColor: '#000',\n      labelFontWeight: 'bold',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\nlabelFontWeight#\n\nexport const BaseConfigLegendLabel = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    legend: {\n      enable: true,\n      position: 'rt',\n      labelFontSize: 12,\n      labelFontColor: '#000',\n      labelFontWeight: 'bold',\n    },\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/baseConfig/chart/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":3},{"text":"position","id":"position","depth":2,"charIndex":435},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1141},{"text":"border","id":"border","depth":2,"charIndex":2302},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":3483},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":4034},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":4586}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"responsive","content":"#","routePath":"/galley/baseConfig/chart/responsive","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\n\nenable#\n\n{\n  \"chartType\": \"column\",\n  \"tooltip\": {\n    \"enable\": false,\n  },\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n  ]\n}\n","routePath":"/galley/baseConfig/chart/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":3}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"backgroundColor","content":"#","routePath":"/galley/baseConfig/table/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"responsive","content":"#","routePath":"/galley/baseConfig/table/responsive","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"图表配置","content":"#\n\n图表配置\n\n每类图表类型均有一套属于自己的配置, 只对当前图表类型生效","routePath":"/galley/chartConfig","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"堆叠面积图","content":"#","routePath":"/galley/chartConfig/area","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairLine: {\n      lineColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/area/crosshairLine","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const AreaXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const AreaXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/area/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3643}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const AreaYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const AreaYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/area/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3757}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"百分比面积图","content":"#","routePath":"/galley/chartConfig/areaPercent","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairLine: {\n      lineColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/areaPercent/crosshairLine","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const AreaPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const AreaPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/areaPercent/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3657}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const AreaPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n\n配置全开#\n\nexport const AreaPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/areaPercent/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3656}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"堆叠条形图","content":"#","routePath":"/galley/chartConfig/bar","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/bar/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/bar/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const BarXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/bar/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3641}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const BarYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/bar/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3755}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"并列条形图","content":"#","routePath":"/galley/chartConfig/barParallel","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/barParallel/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/barParallel/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const BarParallelXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarParallelXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/barParallel/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3657}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const BarParallelYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarParallelYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/barParallel/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3771}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"百分比条形图","content":"#","routePath":"/galley/chartConfig/barPercent","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/barPercent/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/barPercent/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const BarPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    xAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    xAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/barPercent/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3653}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const BarPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    yAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const BarPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    yAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/barPercent/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3769}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"堆叠柱状图","content":"#","routePath":"/galley/chartConfig/column","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/column/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/column/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/column/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3761}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/column/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3647}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"并列柱状图","content":"#","routePath":"/galley/chartConfig/columnParallel","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/columnParallel/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/columnParallel/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnParallelXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnParallelXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/columnParallel/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3777}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnParallelYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnParallelYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/columnParallel/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3663}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"百分比柱状图","content":"#","routePath":"/galley/chartConfig/columnPercent","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairRect: {\n      rectColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/columnPercent/crosshairRect","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"stackCornerRadius","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    // stackCornerRadius: 8,\n    stackCornerRadius: 0,\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/columnPercent/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnPercentXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnPercentXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/columnPercent/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3775}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const ColumnPercentYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 2,\n      min: 0,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const ColumnPercentYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/columnPercent/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3659}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"折线图","content":"#","routePath":"/galley/chartConfig/line","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"crosshairRect","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', sales: 100 },\n      { date: '2020', sales: 3200 },\n      { date: '2021', sales: 300 },\n      { date: '2022', sales: 2400 },\n      { date: '2023', sales: 500 },\n    ],\n    crosshairLine: {\n      lineColor: 'red',\n      labelColor: 'red',\n    },\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [{ id: 'sales', alias: '销售额' }],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/chartConfig/line/crosshairLine","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"xAxis","content":"#\n\n\n配置全关#\n\nexport const LineXAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    xAxis: {\n      labelAutoHide: false,\n      labelAutoLimit: false,\n      labelAutoRotate: false,\n      labelAutoHideGap: 0,\n      labelAutoLimitLength: 0,\n      labelAutoRotateAngleRange: [],\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const LineXAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    xAxis: {\n      labelAutoHide: true,\n      labelAutoLimit: true,\n      labelAutoRotate: true,\n      labelAutoHideGap: 5,\n      labelAutoLimitLength: 80,\n      labelAutoRotateAngleRange: [0, -45, -90],\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '日期',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/line/xAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3757}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"yAxis","content":"#\n\n\n配置全关#\n\nexport const LineYAxis = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    yAxis: {\n      nice: false,\n      zero: false,\n      max: 80,\n      min: 20,\n      line: {\n        visible: false,\n      },\n      label: {\n        visible: false,\n      },\n      grid: {\n        visible: false,\n      },\n      tick: {\n        visible: false,\n      },\n      title: {\n        visible: false,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n\n\n\n配置全开#\n\nexport const LineYAxisEnable = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    yAxis: {\n      nice: true,\n      zero: true,\n      max: undefined,\n      min: undefined,\n      line: {\n        visible: true,\n        lineColor: '#606773',\n        lineWidth: 2,\n      },\n      label: {\n        visible: true,\n        labelColor: '#606773',\n        labelFontSize: 12,\n        labelFontWeight: 500,\n        labelAngle: 0,\n      },\n      grid: {\n        visible: true,\n        gridColor: '#606773',\n        gridWidth: 2,\n      },\n      tick: {\n        visible: true,\n        tickColor: '#606773',\n        tickInside: true,\n        tickSize: 10,\n      },\n      title: {\n        visible: true,\n        titleText: '指标',\n        titleColor: '#606773',\n        titleFontSize: 12,\n        titleFontWeight: 500,\n      },\n    },\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019-01-01', profit: 10, sales: 20 },\n      { date: '2019-01-02', profit: 30, sales: 60 },\n      { date: '2019-01-03', profit: 30, sales: 60 },\n      { date: '2019-01-04', profit: 50, sales: 100 },\n      { date: '2019-01-05', profit: 40, sales: 80 },\n      { date: '2019-01-06', profit: 10, sales: 20 },\n      { date: '2019-01-07', profit: 30, sales: 60 },\n      { date: '2019-01-08', profit: 30, sales: 60 },\n      { date: '2019-01-09', profit: 50, sales: 100 },\n      { date: '2019-01-10', profit: 40, sales: 80 },\n      { date: '2019-01-11', profit: 10, sales: 20 },\n      { date: '2019-01-12', profit: 30, sales: 60 },\n      { date: '2019-01-13', profit: 30, sales: 60 },\n      { date: '2019-01-14', profit: 50, sales: 100 },\n      { date: '2019-01-15', profit: 40, sales: 80 },\n      { date: '2019-01-16', profit: 10, sales: 20 },\n      { date: '2019-01-17', profit: 30, sales: 60 },\n      { date: '2019-01-18', profit: 30, sales: 60 },\n      { date: '2019-01-19', profit: 50, sales: 100 },\n      { date: '2019-01-20', profit: 40, sales: 80 },\n      { date: '2019-01-21', profit: 10, sales: 20 },\n      { date: '2019-01-22', profit: 30, sales: 60 },\n      { date: '2019-01-23', profit: 30, sales: 60 },\n      { date: '2019-01-24', profit: 50, sales: 100 },\n      { date: '2019-01-25', profit: 40, sales: 80 },\n      { date: '2019-01-26', profit: 10, sales: 20 },\n      { date: '2019-01-27', profit: 30, sales: 60 },\n      { date: '2019-01-28', profit: 30, sales: 60 },\n      { date: '2019-01-29', profit: 50, sales: 100 },\n      { date: '2019-01-30', profit: 40, sales: 80 },\n      { date: '2019-01-31', profit: 10, sales: 20 },\n      { date: '2019-02-01', profit: 30, sales: 60 },\n      { date: '2019-02-02', profit: 30, sales: 60 },\n      { date: '2019-02-03', profit: 50, sales: 100 },\n      { date: '2019-02-04', profit: 40, sales: 80 },\n      { date: '2019-02-05', profit: 10, sales: 20 },\n      { date: '2019-02-06', profit: 30, sales: 60 },\n      { date: '2019-02-07', profit: 30, sales: 60 },\n      { date: '2019-02-08', profit: 50, sales: 100 },\n      { date: '2019-02-09', profit: 40, sales: 80 },\n      { date: '2019-02-10', profit: 10, sales: 20 },\n      { date: '2019-02-11', profit: 30, sales: 60 },\n      { date: '2019-02-12', profit: 30, sales: 60 },\n      { date: '2019-02-13', profit: 50, sales: 100 },\n      { date: '2019-02-14', profit: 40, sales: 80 },\n      { date: '2019-02-15', profit: 10, sales: 20 },\n      { date: '2019-02-16', profit: 30, sales: 60 },\n      { date: '2019-02-17', profit: 30, sales: 60 },\n      { date: '2019-02-18', profit: 50, sales: 100 },\n      { date: '2019-02-19', profit: 40, sales: 80 },\n      { date: '2019-02-20', profit: 10, sales: 20 },\n      { date: '2019-02-21', profit: 30, sales: 60 },\n      { date: '2019-02-22', profit: 30, sales: 60 },\n      { date: '2019-02-23', profit: 50, sales: 100 },\n      { date: '2019-02-24', profit: 40, sales: 80 },\n      { date: '2019-02-25', profit: 10, sales: 20 },\n      { date: '2019-02-26', profit: 30, sales: 60 },\n      { date: '2019-02-27', profit: 30, sales: 60 },\n      { date: '2019-02-28', profit: 50, sales: 100 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartConfig/line/yAxis","lang":"zh-CN","toc":[{"text":"配置全关","id":"配置全关","depth":2,"charIndex":3},{"text":"配置全开","id":"配置全开","depth":2,"charIndex":3643}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"饼图","content":"#","routePath":"/galley/chartConfig/pie","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"图表类型","content":"#\n\n图表类型\n\n按图表类型约定图表默认的配置, 使用约定优于配置的方法, 每一种图表类型有大量约定配置, 极大简化配置心智\n\n\nTable#\n\n\n表格#\n\n{\n  \"chartType\": \"table\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"type\": \"A\", \"goalProfit\": 10, \"profit\": 10, \"sales\": 100, \"leftCount\": 1, \"salesCount\": 100 },\n    { \"date\": \"2020\", \"type\": \"A\", \"goalProfit\": 30, \"profit\": 30, \"sales\": 320, \"leftCount\": 2, \"salesCount\": 200 },\n    { \"date\": \"2021\", \"type\": \"A\", \"goalProfit\": 30, \"profit\": 30, \"sales\": 300, \"leftCount\": 3, \"salesCount\": 300 },\n    { \"date\": \"2022\", \"type\": \"A\", \"goalProfit\": 50, \"profit\": 50, \"sales\": 240, \"leftCount\": 4, \"salesCount\": 400 },\n    { \"date\": \"2023\", \"type\": \"A\", \"goalProfit\": 40, \"profit\": 40, \"sales\": 500, \"leftCount\": 5, \"salesCount\": 500 }\n  ]\n}\n\n\n\n透视表#\n\n{\n  \"chartType\": \"pivotTable\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"type\": \"A\", \"goalProfit\": 10, \"profit\": 10, \"sales\": 100, \"leftCount\": 1, \"salesCount\": 100 },\n    { \"date\": \"2020\", \"type\": \"A\", \"goalProfit\": 30, \"profit\": 30, \"sales\": 320, \"leftCount\": 2, \"salesCount\": 200 },\n    { \"date\": \"2021\", \"type\": \"A\", \"goalProfit\": 30, \"profit\": 30, \"sales\": 300, \"leftCount\": 3, \"salesCount\": 300 },\n    { \"date\": \"2022\", \"type\": \"A\", \"goalProfit\": 50, \"profit\": 50, \"sales\": 240, \"leftCount\": 4, \"salesCount\": 400 },\n    { \"date\": \"2023\", \"type\": \"A\", \"goalProfit\": 40, \"profit\": 40, \"sales\": 500, \"leftCount\": 5, \"salesCount\": 500 }\n  ]\n}\n\n\n\nCartesian#\n\n\n折线图#\n\n{\n  \"chartType\": \"line\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n堆叠柱状图#\n\n{\n  \"chartType\": \"column\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n并列柱状图#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n百分比柱状图#\n\n{\n  \"chartType\": \"columnPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n条形图#\n\n{\n  \"chartType\": \"bar\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n并列条形图#\n\n{\n  \"chartType\": \"barParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n百分比条形图#\n\n{\n  \"chartType\": \"barPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n堆叠面积图#\n\n{\n  \"chartType\": \"area\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n百分比面积图#\n\n{\n  \"chartType\": \"areaPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n散点图#\n\nexport const ScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 200, sales: 80 },\n    ],\n    measures: [\n      {\n        id: 'sales',\n        alias: '销售额',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    label: {\n      enable: false,\n    },\n  }\n  return \n})\n\n\n\nPolar#\n\n\n饼图#\n\n{\n  \"chartType\": \"pie\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n环形图#\n\n{\n  \"chartType\": \"donut\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n玫瑰图#\n\nexport const RoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2023', profit: 40 },\n      { date: '2022', profit: 50 },\n      { date: '2021', profit: 25 },\n      { date: '2020', profit: 30 },\n      { date: '2019', profit: 10 },\n    ],\n  }\n  return \n})\n\n\n\n雷达图#\n\nexport const RadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dataset: [{ profit: 10, sales: 20, count: 50, rateOfReturn: 1 }],\n  }\n  return \n})\n\n\n\n堆叠玫瑰图#\n\nexport const StackedRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\n并列玫瑰图#\n\n{\n  \"chartType\": \"roseParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\nOther#\n\n\n热力图#\n\nexport const HeatmapChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dataset: [\n      {\n        type: 'A',\n        subType: 'a',\n        value: 98,\n      },\n      {\n        type: 'A',\n        subType: 'b',\n        value: 71,\n      },\n      {\n        type: 'A',\n        subType: 'c',\n        value: 22,\n      },\n      {\n        type: 'A',\n        subType: 'd',\n        value: 49,\n      },\n      {\n        type: 'A',\n        subType: 'e',\n        value: 92,\n      },\n      {\n        type: 'B',\n        subType: 'a',\n        value: 85,\n      },\n      {\n        type: 'B',\n        subType: 'b',\n        value: 45,\n      },\n      {\n        type: 'B',\n        subType: 'c',\n        value: 19,\n      },\n      {\n        type: 'B',\n        subType: 'd',\n        value: 58,\n      },\n      {\n        type: 'B',\n        subType: 'e',\n        value: 26,\n      },\n      {\n        type: 'C',\n        subType: 'a',\n        value: 44,\n      },\n      {\n        type: 'C',\n        subType: 'b',\n        value: 23,\n      },\n      {\n        type: 'C',\n        subType: 'c',\n        value: 6,\n      },\n      {\n        type: 'C',\n        subType: 'd',\n        value: 42,\n      },\n      {\n        type: 'C',\n        subType: 'e',\n        value: 27,\n      },\n      {\n        type: 'D',\n        subType: 'a',\n        value: 79,\n      },\n      {\n        type: 'D',\n        subType: 'b',\n        value: 89,\n      },\n      {\n        type: 'D',\n        subType: 'c',\n        value: 65,\n      },\n      {\n        type: 'D',\n        subType: 'd',\n        value: 56,\n      },\n      {\n        type: 'D',\n        subType: 'e',\n        value: 1,\n      },\n      {\n        type: 'E',\n        subType: 'a',\n        value: 59,\n      },\n      {\n        type: 'E',\n        subType: 'b',\n        value: 94,\n      },\n      {\n        type: 'E',\n        subType: 'c',\n        value: 45,\n      },\n      {\n        type: 'E',\n        subType: 'd',\n        value: 80,\n      },\n      {\n        type: 'E',\n        subType: 'e',\n        value: 47,\n      },\n    ],\n  }\n  return \n})\n\n\n\n漏斗图#\n\nexport const FunnelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'funnel',\n    dataset: [\n      { date: '2022', profit: 100, sales: 100 },\n      { date: '2023', profit: 80, sales: 80 },\n      { date: '2020', profit: 60, sales: 60 },\n      { date: '2021', profit: 40, sales: 40 },\n      { date: '2019', profit: 20, sales: 20 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType","lang":"zh-CN","toc":[{"text":"Table","id":"table","depth":2,"charIndex":64},{"text":"表格","id":"表格","depth":3,"charIndex":73},{"text":"透视表","id":"透视表","depth":3,"charIndex":717},{"text":"Cartesian","id":"cartesian","depth":2,"charIndex":1367},{"text":"折线图","id":"折线图","depth":3,"charIndex":1380},{"text":"堆叠柱状图","id":"堆叠柱状图","depth":3,"charIndex":1690},{"text":"并列柱状图","id":"并列柱状图","depth":3,"charIndex":2004},{"text":"百分比柱状图","id":"百分比柱状图","depth":3,"charIndex":2326},{"text":"条形图","id":"条形图","depth":3,"charIndex":2648},{"text":"并列条形图","id":"并列条形图","depth":3,"charIndex":2957},{"text":"百分比条形图","id":"百分比条形图","depth":3,"charIndex":3276},{"text":"堆叠面积图","id":"堆叠面积图","depth":3,"charIndex":3595},{"text":"百分比面积图","id":"百分比面积图","depth":3,"charIndex":3907},{"text":"散点图","id":"散点图","depth":3,"charIndex":4227},{"text":"Polar","id":"polar","depth":2,"charIndex":4902},{"text":"饼图","id":"饼图","depth":3,"charIndex":4911},{"text":"环形图","id":"环形图","depth":3,"charIndex":5219},{"text":"玫瑰图","id":"玫瑰图","depth":3,"charIndex":5530},{"text":"雷达图","id":"雷达图","depth":3,"charIndex":5844},{"text":"堆叠玫瑰图","id":"堆叠玫瑰图","depth":3,"charIndex":6028},{"text":"并列玫瑰图","id":"并列玫瑰图","depth":3,"charIndex":6407},{"text":"Other","id":"other","depth":2,"charIndex":6727},{"text":"热力图","id":"热力图","depth":3,"charIndex":6736},{"text":"漏斗图","id":"漏斗图","depth":3,"charIndex":8799}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"area","content":"#\n\n\n堆叠面积图#\n\n{\n  \"chartType\": \"area\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合堆叠面积图#\n\n{\n  \"chartType\": \"area\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合堆叠面积图#\n\nexport const PivotAreaChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/area","lang":"zh-CN","toc":[{"text":"堆叠面积图","id":"堆叠面积图","depth":2,"charIndex":3},{"text":"组合堆叠面积图","id":"组合堆叠面积图","depth":2,"charIndex":315},{"text":"透视组合堆叠面积图","id":"透视组合堆叠面积图","depth":2,"charIndex":1360}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"areaPercent","content":"#\n\n\n百分比面积图#\n\n{\n  \"chartType\": \"areaPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合百分比面积图#\n\n{\n  \"chartType\": \"areaPercent\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合百分比面积图#\n\nexport const PivotAreaPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/areaPercent","lang":"zh-CN","toc":[{"text":"百分比面积图","id":"百分比面积图","depth":2,"charIndex":3},{"text":"组合百分比面积图","id":"组合百分比面积图","depth":2,"charIndex":323},{"text":"透视组合百分比面积图","id":"透视组合百分比面积图","depth":2,"charIndex":1376}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"bar","content":"#\n\n\n堆叠条形图#\n\n{\n  \"chartType\": \"bar\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合堆叠条形图#\n\n{\n  \"chartType\": \"bar\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合堆叠条形图#\n\nexport const PivotBarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/bar","lang":"zh-CN","toc":[{"text":"堆叠条形图","id":"堆叠条形图","depth":2,"charIndex":3},{"text":"组合堆叠条形图","id":"组合堆叠条形图","depth":2,"charIndex":314},{"text":"透视组合堆叠条形图","id":"透视组合堆叠条形图","depth":2,"charIndex":1358}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"barParallel","content":"#\n\n\n并列条形图#\n\n{\n  \"chartType\": \"barParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合并列条形图#\n\n{\n  \"chartType\": \"barParallel\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合并列条形图#\n\nexport const PivotBarParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/barParallel","lang":"zh-CN","toc":[{"text":"并列条形图","id":"并列条形图","depth":2,"charIndex":3},{"text":"组合并列条形图","id":"组合并列条形图","depth":2,"charIndex":322},{"text":"透视组合并列条形图","id":"透视组合并列条形图","depth":2,"charIndex":1374}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"barPercent","content":"#\n\n\n百分比条形图#\n\n{\n  \"chartType\": \"barPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合百分比条形图#\n\n{\n  \"chartType\": \"barPercent\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合百分比条形图#\n\nexport const PivotBarPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/barPercent","lang":"zh-CN","toc":[{"text":"百分比条形图","id":"百分比条形图","depth":2,"charIndex":3},{"text":"组合百分比条形图","id":"组合百分比条形图","depth":2,"charIndex":322},{"text":"透视组合百分比条形图","id":"透视组合百分比条形图","depth":2,"charIndex":1374}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"column","content":"#\n\n\n堆叠柱状图#\n\n{\n  \"chartType\": \"column\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合堆叠柱状图#\n\n{\n  \"chartType\": \"column\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合堆叠柱状图#\n\nexport const PivotColumnChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/column","lang":"zh-CN","toc":[{"text":"堆叠柱状图","id":"堆叠柱状图","depth":2,"charIndex":3},{"text":"组合堆叠柱状图","id":"组合堆叠柱状图","depth":2,"charIndex":317},{"text":"透视组合堆叠柱状图","id":"透视组合堆叠柱状图","depth":2,"charIndex":1364}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"columnParallel","content":"#\n\n\n并列柱状图#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合并列柱状图#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合并列柱状图#\n\nexport const PivotColumnParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/columnParallel","lang":"zh-CN","toc":[{"text":"并列柱状图","id":"并列柱状图","depth":2,"charIndex":3},{"text":"组合并列柱状图","id":"组合并列柱状图","depth":2,"charIndex":325},{"text":"透视组合并列柱状图","id":"透视组合并列柱状图","depth":2,"charIndex":1380}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"columnPercent","content":"#\n\n\n百分比柱状图#\n\n{\n  \"chartType\": \"columnPercent\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合百分比柱状图#\n\n{\n  \"chartType\": \"columnPercent\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合百分比柱状图#\n\nexport const PivotColumnPercentChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnPercent',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/columnPercent","lang":"zh-CN","toc":[{"text":"百分比柱状图","id":"百分比柱状图","depth":2,"charIndex":3},{"text":"组合百分比柱状图","id":"组合百分比柱状图","depth":2,"charIndex":325},{"text":"透视组合百分比柱状图","id":"透视组合百分比柱状图","depth":2,"charIndex":1380}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"donut","content":"#\n\n\n饼图#\n\n{\n  \"chartType\": \"donut\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合环形图#\n\n{\n  \"chartType\": \"donut\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合环形图#\n\n{\n  \"chartType\": \"donut\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"columnDimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"rowDimension\" }\n  ],\n  \"measures\": [\n    {\n      \"id\": \"group-sales\",\n      \"alias\": \"销售额分组\",\n      \"children\": [{ \"id\": \"sales\", \"alias\": \"销售额\" }]\n    },\n    { \"id\": \"profit\", \"alias\": \"利润\" }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 }\n  ]\n}\n","routePath":"/galley/chartType/donut","lang":"zh-CN","toc":[{"text":"饼图","id":"饼图","depth":2,"charIndex":3},{"text":"组合环形图","id":"组合环形图","depth":2,"charIndex":313},{"text":"透视组合环形图","id":"透视组合环形图","depth":2,"charIndex":1258}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"dualAxis","content":"#\n\n\nmeasures#\n\nINFO\n\n配置双轴图指标\n\n若measures有1层, 第一个指标应用于主轴, 第二个指标及其之后的指标, 一起应用于次轴. 绘制一个普通双轴图.\n\n若measures有2层, 第一组指标应用于主轴, 第二组指标用于次轴, 第三组及其之后的指标组会被忽略. 绘制一个普通双轴图.\n\n若measures有3层, 每一组指标用于绘制一个双轴图, 自上而下, 纵向排列. 绘制一个组合双轴图.\n\n\n双轴图(measures 1 层)#\n\nexport const DualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    measures: [\n      { id: 'sales', alias: '销售额' },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 200 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 1000 },\n      { date: '2023', profit: 40, sales: 800 },\n    ],\n  }\n  return \n})\n\n\n\n双轴图(measures 2 层)#\n\nexport const DualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    measures: [\n      {\n        id: 'primary',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      {\n        id: 'secondary',\n        children: [{ id: 'profit', alias: '利润' }],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 200 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 1000 },\n      { date: '2023', profit: 40, sales: 800 },\n    ],\n  }\n  return \n})\n\n\n\n组合双轴图(measures 3 层)#\n\nexport const CombinationDualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    measures: [\n      {\n        id: 'first',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'secondary-profit',\n            children: [{ id: 'profit', alias: '利润' }],\n          },\n          {\n            id: 'primary-sales',\n            children: [{ id: 'sales', alias: '销售额' }],\n          },\n        ],\n      },\n      {\n        id: 'second',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'primary-ratio',\n            children: [{ id: 'ratio', alias: '比率' }],\n          },\n          {\n            id: 'returnRatio',\n            children: [{ id: 'returnRatio', alias: '回报率' }],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 100, ratio: 301, returnRatio: 301 },\n      { date: '2020', profit: 30, sales: 3200, ratio: 32, returnRatio: 30 },\n      { date: '2021', profit: 30, sales: 300, ratio: 103, returnRatio: 503 },\n      { date: '2022', profit: 50, sales: 2400, ratio: 30, returnRatio: 24 },\n      { date: '2023', profit: 40, sales: 500, ratio: 305, returnRatio: 305 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return \n})\n\n\n\ndualMeasures#\n\nINFO\n\ndualMeasures 是 measures 的一个便捷扩展, 用于配置双轴图的指标.\n\n若dualMeasures仅有1项, 则绘制一个普通双轴图.\n\n若dualMeasures至少有2项, 则绘制一个组合双轴图.\n\n\n双轴图(dualMeasures 1 项)#\n\nexport const DualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dualMeasures: [\n      {\n        primaryMeasures: [{ id: 'profit' }],\n        secondaryMeasures: [{ id: 'sales' }],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 200 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 1000 },\n      { date: '2023', profit: 40, sales: 800 },\n    ],\n  }\n  return \n})\n\n\n\n组合透视图(dualMeasures 2 项)#\n\nexport const CombinationDualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dualMeasures: [\n      {\n        primaryMeasures: [{ id: 'profit' }],\n        secondaryMeasures: [{ id: 'sales' }],\n      },\n      {\n        primaryMeasures: [{ id: 'ratio' }],\n        secondaryMeasures: [{ id: 'returnRatio' }],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 100, ratio: 301, returnRatio: 301 },\n      { date: '2020', profit: 30, sales: 3200, ratio: 32, returnRatio: 30 },\n      { date: '2021', profit: 30, sales: 300, ratio: 103, returnRatio: 503 },\n      { date: '2022', profit: 50, sales: 2400, ratio: 30, returnRatio: 24 },\n      { date: '2023', profit: 40, sales: 500, ratio: 305, returnRatio: 305 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return \n})\n\n\n\ndimensions#\n\n\n透视组合双轴图#\n\nexport const PivotDualAxisChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'rowDimension',\n      },\n      {\n        id: 'test',\n        alias: '测试',\n        location: 'columnDimension',\n      },\n    ],\n    dataset: [\n      { date: '2019', type: 'A', test: 'TEST-A', profit: 10, sales: 100, ratio: 1, returnRatio: 301 },\n      { date: '2020', type: 'A', test: 'TEST-A', profit: 30, sales: 3200, ratio: 2, returnRatio: 30 },\n      { date: '2021', type: 'A', test: 'TEST-A', profit: 30, sales: 300, ratio: 3, returnRatio: 303 },\n      { date: '2022', type: 'A', test: 'TEST-A', profit: 50, sales: 2400, ratio: 4, returnRatio: 34 },\n      { date: '2023', type: 'A', test: 'TEST-A', profit: 40, sales: 500, ratio: 5, returnRatio: 305 },\n      { date: '2019', type: 'A', test: 'TEST-D', profit: 10, sales: 100, ratio: 5, returnRatio: 30 },\n      { date: '2020', type: 'A', test: 'TEST-D', profit: 30, sales: 3200, ratio: 4, returnRatio: 302 },\n      { date: '2021', type: 'A', test: 'TEST-D', profit: 30, sales: 300, ratio: 3, returnRatio: 30 },\n      { date: '2022', type: 'A', test: 'TEST-D', profit: 50, sales: 2400, ratio: 2, returnRatio: 304 },\n      { date: '2023', type: 'A', test: 'TEST-D', profit: 40, sales: 500, ratio: 1, returnRatio: 35 },\n\n      { date: '2019', type: 'B', test: 'TEST-A', profit: 10, sales: 100, ratio: 11, returnRatio: 301 },\n      { date: '2020', type: 'B', test: 'TEST-A', profit: 30, sales: 3200, ratio: 12, returnRatio: 30 },\n      { date: '2021', type: 'B', test: 'TEST-A', profit: 30, sales: 300, ratio: 13, returnRatio: 303 },\n      { date: '2022', type: 'B', test: 'TEST-A', profit: 50, sales: 2400, ratio: 14, returnRatio: 34 },\n      { date: '2023', type: 'B', test: 'TEST-A', profit: 40, sales: 500, ratio: 15, returnRatio: 305 },\n      { date: '2019', type: 'B', test: 'TEST-D', profit: 10, sales: 100, ratio: 51, returnRatio: 30 },\n      { date: '2020', type: 'B', test: 'TEST-D', profit: 30, sales: 3200, ratio: 51, returnRatio: 32 },\n      { date: '2021', type: 'B', test: 'TEST-D', profit: 30, sales: 300, ratio: 52, returnRatio: 303 },\n      { date: '2022', type: 'B', test: 'TEST-D', profit: 50, sales: 2400, ratio: 5, returnRatio: 34 },\n      { date: '2023', type: 'B', test: 'TEST-D', profit: 40, sales: 500, ratio: 1, returnRatio: 35 },\n    ],\n    dualMeasures: [\n      {\n        primaryMeasures: [{ id: 'profit' }],\n        secondaryMeasures: [{ id: 'sales' }],\n      },\n      {\n        primaryMeasures: [{ id: 'ratio' }],\n        secondaryMeasures: [{ id: 'returnRatio' }],\n      },\n    ],\n  }\n  return \n})\n\n\n\ndualChartType#\n\n\n双轴图#\n\nexport const DualChartType = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dualChartType: {\n      primary: 'area',\n      secondary: 'scatter',\n    },\n    dataset: [\n      { date: '2019', profit: 20, sales: 100 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 500 },\n      { date: '2023', profit: 10, sales: 800 },\n    ],\n    measures: [\n      {\n        id: 'primary',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      {\n        id: 'secondary',\n        children: [{ id: 'profit', alias: '利润' }],\n      },\n    ],\n  }\n  return \n})\n\n\n\n组合双轴图#\n\nexport const DualChartTypeArray = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dualChartType: [\n      {\n        primary: 'area',\n        secondary: 'scatter',\n      },\n      {\n        primary: 'column',\n        secondary: 'line',\n      },\n    ],\n    measures: [\n      {\n        id: 'first',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'secondary-profit',\n            children: [{ id: 'profit', alias: '利润' }],\n          },\n          {\n            id: 'primary-sales',\n            children: [{ id: 'sales', alias: '销售额' }],\n          },\n        ],\n      },\n      {\n        id: 'second',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'primary-ratio',\n            children: [{ id: 'ratio', alias: '比率' }],\n          },\n          {\n            id: 'returnRatio',\n            children: [{ id: 'returnRatio', alias: '回报率' }],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 100, ratio: 301, returnRatio: 301 },\n      { date: '2020', profit: 30, sales: 3200, ratio: 32, returnRatio: 30 },\n      { date: '2021', profit: 30, sales: 300, ratio: 103, returnRatio: 503 },\n      { date: '2022', profit: 50, sales: 2400, ratio: 30, returnRatio: 24 },\n      { date: '2023', profit: 40, sales: 500, ratio: 305, returnRatio: 305 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return \n})\n\n\n\nprimaryYAxis & secondaryYAxis#\n\nexport const DualYAxisArray = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    primaryYAxis: [\n      {\n        title: {\n          visible: true,\n          titleText: '利润',\n        },\n      },\n      {\n        title: {\n          visible: true,\n          titleText: '比率',\n        },\n      },\n    ],\n    secondaryYAxis: [\n      {\n        title: {\n          visible: true,\n          titleText: '销售额',\n        },\n      },\n      {\n        title: {\n          visible: true,\n          titleText: '回报率',\n        },\n      },\n    ],\n    measures: [\n      {\n        id: 'first',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'secondary-profit',\n            children: [{ id: 'profit', alias: '利润' }],\n          },\n          {\n            id: 'primary-sales',\n            children: [{ id: 'sales', alias: '销售额' }],\n          },\n        ],\n      },\n      {\n        id: 'second',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'primary-ratio',\n            children: [{ id: 'ratio', alias: '比率' }],\n          },\n          {\n            id: 'returnRatio',\n            children: [{ id: 'returnRatio', alias: '回报率' }],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 100, ratio: 301, returnRatio: 301 },\n      { date: '2020', profit: 30, sales: 3200, ratio: 32, returnRatio: 30 },\n      { date: '2021', profit: 30, sales: 300, ratio: 103, returnRatio: 503 },\n      { date: '2022', profit: 50, sales: 2400, ratio: 30, returnRatio: 24 },\n      { date: '2023', profit: 40, sales: 500, ratio: 305, returnRatio: 305 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/dualAxis","lang":"zh-CN","toc":[{"text":"measures","id":"measures","depth":2,"charIndex":3},{"text":"双轴图(measures 1 层)","id":"双轴图measures-1-层","depth":3,"charIndex":211},{"text":"双轴图(measures 2 层)","id":"双轴图measures-2-层","depth":3,"charIndex":705},{"text":"组合双轴图(measures 3 层)","id":"组合双轴图measures-3-层","depth":3,"charIndex":1309},{"text":"dualMeasures","id":"dualmeasures","depth":2,"charIndex":2650},{"text":"双轴图(dualMeasures 1 项)","id":"双轴图dualmeasures-1-项","depth":3,"charIndex":2783},{"text":"组合透视图(dualMeasures 2 项)","id":"组合透视图dualmeasures-2-项","depth":3,"charIndex":3319},{"text":"dimensions","id":"dimensions","depth":2,"charIndex":4242},{"text":"透视组合双轴图","id":"透视组合双轴图","depth":3,"charIndex":4256},{"text":"dualChartType","id":"dualcharttype","depth":2,"charIndex":7022},{"text":"双轴图","id":"双轴图","depth":3,"charIndex":7039},{"text":"组合双轴图","id":"组合双轴图","depth":3,"charIndex":7707},{"text":"primaryYAxis & secondaryYAxis","id":"primaryyaxis--secondaryyaxis","depth":2,"charIndex":9199}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"areaRange","content":"#\n\nWARNING\n\n实验性图表, 实现逻辑不完善, API并不足够稳定\n\n\n区间面积图#\n\n{\n  \"chartType\": \"areaRange\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合区间面积图#\n\n暂不支持\n\n\n透视区间面积图#\n\n暂不支持","routePath":"/galley/chartType/experimental/areaRange","lang":"zh-CN","toc":[{"text":"区间面积图","id":"区间面积图","depth":2,"charIndex":39},{"text":"组合区间面积图","id":"组合区间面积图","depth":2,"charIndex":356},{"text":"透视区间面积图","id":"透视区间面积图","depth":2,"charIndex":373}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"funnel","content":"#\n\n\n漏斗图#\n\nexport const FunnelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'funnel',\n    dataset: [\n      { date: '2022', profit: 100, sales: 100 },\n      { date: '2023', profit: 80, sales: 80 },\n      { date: '2020', profit: 60, sales: 60 },\n      { date: '2021', profit: 40, sales: 40 },\n      { date: '2019', profit: 20, sales: 20 },\n    ],\n  }\n  return \n})\n\n\n\n组合漏斗图#\n\n暂不支持\n\n\n透视组合漏斗图#\n\n暂不支持","routePath":"/galley/chartType/funnel","lang":"zh-CN","toc":[{"text":"漏斗图","id":"漏斗图","depth":2,"charIndex":3},{"text":"组合漏斗图","id":"组合漏斗图","depth":2,"charIndex":378},{"text":"透视组合漏斗图","id":"透视组合漏斗图","depth":2,"charIndex":393}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"heatmap","content":"#\n\n\n热图#\n\nexport const HeatmapChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'heatmap',\n    dataset: [\n      {\n        type: 'A',\n        subType: 'a',\n        value: 98,\n      },\n      {\n        type: 'A',\n        subType: 'b',\n        value: 71,\n      },\n      {\n        type: 'A',\n        subType: 'c',\n        value: 22,\n      },\n      {\n        type: 'A',\n        subType: 'd',\n        value: 49,\n      },\n      {\n        type: 'A',\n        subType: 'e',\n        value: 92,\n      },\n      {\n        type: 'B',\n        subType: 'a',\n        value: 85,\n      },\n      {\n        type: 'B',\n        subType: 'b',\n        value: 45,\n      },\n      {\n        type: 'B',\n        subType: 'c',\n        value: 19,\n      },\n      {\n        type: 'B',\n        subType: 'd',\n        value: 58,\n      },\n      {\n        type: 'B',\n        subType: 'e',\n        value: 26,\n      },\n      {\n        type: 'C',\n        subType: 'a',\n        value: 44,\n      },\n      {\n        type: 'C',\n        subType: 'b',\n        value: 23,\n      },\n      {\n        type: 'C',\n        subType: 'c',\n        value: 6,\n      },\n      {\n        type: 'C',\n        subType: 'd',\n        value: 42,\n      },\n      {\n        type: 'C',\n        subType: 'e',\n        value: 27,\n      },\n      {\n        type: 'D',\n        subType: 'a',\n        value: 79,\n      },\n      {\n        type: 'D',\n        subType: 'b',\n        value: 89,\n      },\n      {\n        type: 'D',\n        subType: 'c',\n        value: 65,\n      },\n      {\n        type: 'D',\n        subType: 'd',\n        value: 56,\n      },\n      {\n        type: 'D',\n        subType: 'e',\n        value: 1,\n      },\n      {\n        type: 'E',\n        subType: 'a',\n        value: 59,\n      },\n      {\n        type: 'E',\n        subType: 'b',\n        value: 94,\n      },\n      {\n        type: 'E',\n        subType: 'c',\n        value: 45,\n      },\n      {\n        type: 'E',\n        subType: 'd',\n        value: 80,\n      },\n      {\n        type: 'E',\n        subType: 'e',\n        value: 47,\n      },\n    ],\n  }\n  return \n})\n\n\n\n组合漏斗图#\n\n暂不支持\n\n\n透视组合漏斗图#\n\n暂不支持","routePath":"/galley/chartType/heatmap","lang":"zh-CN","toc":[{"text":"热图","id":"热图","depth":2,"charIndex":3},{"text":"组合漏斗图","id":"组合漏斗图","depth":2,"charIndex":2065},{"text":"透视组合漏斗图","id":"透视组合漏斗图","depth":2,"charIndex":2080}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"line","content":"#\n\n\n折线图#\n\n{\n  \"chartType\": \"line\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合折线图#\n\n{\n  \"chartType\": \"line\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\",\n          \"location\": \"measure\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\",\n          \"location\": \"measure\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\",\n          \"location\": \"measure\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合折线图#\n\nexport const PivotLineChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/line","lang":"zh-CN","toc":[{"text":"折线图","id":"折线图","depth":2,"charIndex":3},{"text":"组合折线图","id":"组合折线图","depth":2,"charIndex":313},{"text":"透视组合折线图","id":"透视组合折线图","depth":2,"charIndex":1356}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"pie","content":"#\n\n\n饼图#\n\n{\n  \"chartType\": \"pie\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合饼图#\n\n{\n  \"chartType\": \"pie\",\n  \"measures\": [\n    {\n      \"id\": \"sales-and-profit\",\n      \"alias\": \"销售额与利润\",\n      \"children\": [\n        {\n          \"id\": \"sales\",\n          \"alias\": \"sales\"\n        },\n        {\n          \"id\": \"profit\",\n          \"alias\": \"利润\"\n        }\n      ]\n    },\n    {\n      \"id\": \"ratio\",\n      \"alias\": \"比率\",\n      \"children\": [\n        {\n          \"id\": \"rateOfReturn\",\n          \"alias\": \"回报率\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"rateOfReturn\": 0.5 }\n  ],\n  \"dimensions\": [\n    {\n      \"id\": \"date\",\n      \"alias\": \"日期\",\n      \"location\": \"dimension\"\n    }\n  ]\n}\n\n\n\n透视组合饼图#\n\n{\n  \"chartType\": \"pie\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"columnDimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"rowDimension\" }\n  ],\n  \"measures\": [\n    {\n      \"id\": \"group-sales\",\n      \"alias\": \"销售额分组\",\n      \"children\": [{ \"id\": \"sales\", \"alias\": \"销售额\" }]\n    },\n    { \"id\": \"profit\", \"alias\": \"利润\" }\n  ],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10, \"sales\": 100 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30, \"sales\": 3200 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30, \"sales\": 300 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50, \"sales\": 2400 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40, \"sales\": 500 }\n  ]\n}\n","routePath":"/galley/chartType/pie","lang":"zh-CN","toc":[{"text":"饼图","id":"饼图","depth":2,"charIndex":3},{"text":"组合饼图","id":"组合饼图","depth":2,"charIndex":311},{"text":"透视组合饼图","id":"透视组合饼图","depth":2,"charIndex":1253}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"pivotTable","content":"#\n\n\n透视表格#\n\nexport const PivotTableAuto = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n  }\n  return \n})\n\n\n\n行维度透视#\n\nexport const PivotTableRowDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'rowDimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'rowDimension',\n      },\n    ],\n  }\n  return \n})\n\n\n\n列维度透视#\n\nexport const PivotTableColumnDimensions = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'pivotTable',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'columnDimension',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n        location: 'columnDimension',\n      },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/pivotTable","lang":"zh-CN","toc":[{"text":"透视表格","id":"透视表格","depth":2,"charIndex":3},{"text":"行维度透视","id":"行维度透视","depth":2,"charIndex":679},{"text":"列维度透视","id":"列维度透视","depth":2,"charIndex":1913}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"radar","content":"#\n\n\n雷达图#\n\nexport const RadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dataset: [{ profit: 10, sales: 20, count: 50, rateOfReturn: 1 }],\n  }\n  return \n})\n\n\n\n\n组合雷达图#\n\nexport const CombinationRadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'sales-and-profit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: 'sales',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n          },\n        ],\n      },\n    ],\n  }\n  return \n})\n\n\n\n透视组合雷达图#\n\nexport const PivotRadarChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'radar',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2021', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2021', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2021', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2021', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2021', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2021', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2021', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n    ],\n  }\n  return \n})\n\n","routePath":"/galley/chartType/radar","lang":"zh-CN","toc":[{"text":"雷达图","id":"雷达图","depth":2,"charIndex":3},{"text":"组合雷达图","id":"组合雷达图","depth":2,"charIndex":188},{"text":"透视组合雷达图","id":"透视组合雷达图","depth":2,"charIndex":1237}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"rose","content":"#\n\n\n玫瑰图#\n\nexport const RoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2023', profit: 40 },\n      { date: '2022', profit: 50 },\n      { date: '2021', profit: 25 },\n      { date: '2020', profit: 30 },\n      { date: '2019', profit: 10 },\n    ],\n  }\n  return \n})\n\n\n\n玫瑰图(零维度)#\n\nexport const RoseChartOnlyMeasures = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [{ profit: 40, sales: 100, goalSales: 200, count: 20 }],\n  }\n  return \n})\n\n\n\n堆叠玫瑰图#\n\nexport const StackedRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 40, sales: 80 },\n    ],\n  }\n  return \n})\n\n\n\n组合堆叠玫瑰图#\n\nexport const CombinationRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n            location: 'measure',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n            location: 'measure',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n            location: 'measure',\n          },\n        ],\n      },\n    ],\n  }\n  return \n})\n\n\n\n透视堆叠玫瑰图#\n\nexport const PivotRoseChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'rose',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 3200 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 2400 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/rose","lang":"zh-CN","toc":[{"text":"玫瑰图","id":"玫瑰图","depth":2,"charIndex":3},{"text":"玫瑰图(零维度)","id":"玫瑰图零维度","depth":2,"charIndex":317},{"text":"堆叠玫瑰图","id":"堆叠玫瑰图","depth":2,"charIndex":516},{"text":"组合堆叠玫瑰图","id":"组合堆叠玫瑰图","depth":2,"charIndex":895},{"text":"透视堆叠玫瑰图","id":"透视堆叠玫瑰图","depth":2,"charIndex":2039}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"roseParallel","content":"#\n\n\n分组玫瑰图#\n\n{\n  \"chartType\": \"roseParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n组合分组玫瑰图#\n\nexport const CombinationRoseParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'roseParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 50, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n            location: 'measure',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n            location: 'measure',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n            location: 'measure',\n          },\n        ],\n      },\n    ],\n  }\n  return \n})\n\n\n\n透视组合分组玫瑰图#\n\nexport const PivotRoseParallelChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'roseParallel',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [{ id: 'sales', alias: '销售额' }],\n      },\n      { id: 'profit', alias: '利润' },\n    ],\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 40, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/roseParallel","lang":"zh-CN","toc":[{"text":"分组玫瑰图","id":"分组玫瑰图","depth":2,"charIndex":3},{"text":"组合分组玫瑰图","id":"组合分组玫瑰图","depth":2,"charIndex":323},{"text":"透视组合分组玫瑰图","id":"透视组合分组玫瑰图","depth":2,"charIndex":1483}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"scatter","content":"#\n\n\n散点图#\n\nexport const ScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 200, sales: 80 },\n    ],\n    measures: [\n      {\n        id: 'sales',\n        alias: '销售额',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    label: {\n      enable: false,\n    },\n  }\n  return \n})\n\n\n\n\n组合散点图#\n\nexport const CombinationScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 200, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'salesAndProfit',\n        alias: '销售额与利润',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n            location: 'measure',\n          },\n          {\n            id: 'profit',\n            alias: '利润',\n            location: 'measure',\n          },\n        ],\n      },\n      {\n        id: 'ratio',\n        alias: '比率',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n            location: 'measure',\n          },\n          {\n            id: 'rateOfReturn',\n            alias: '回报率',\n            location: 'measure',\n          },\n        ],\n      },\n    ],\n  }\n  return \n})\n\n\n\n透视组合散点图#\n\nexport const PivotScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n        ],\n      },\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 200 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/scatter","lang":"zh-CN","toc":[{"text":"散点图","id":"散点图","depth":2,"charIndex":3},{"text":"组合散点图","id":"组合散点图","depth":2,"charIndex":679},{"text":"透视组合散点图","id":"透视组合散点图","depth":2,"charIndex":1937}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"table","content":"#\n\n\n自动维度#\n\nexport const TableAuto = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n  }\n  return \n})\n\n\n\n基础表格#\n\nexport const TableBasic = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'sales',\n        alias: '销售量',\n      },\n      {\n        id: 'leftCount',\n        alias: '遗留数量',\n      },\n      {\n        id: 'salesCount',\n        alias: '销售数',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n      },\n      {\n        id: 'type',\n        alias: '类型',\n      },\n    ],\n  }\n  return \n})\n\n\n\n分组表格#\n\nexport const TableGroup = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'table',\n    dataset: [\n      { date: '2019', type: 'A', goalProfit: 10, profit: 10, sales: 100, leftCount: 1, salesCount: 100 },\n      { date: '2020', type: 'A', goalProfit: 30, profit: 30, sales: 320, leftCount: 2, salesCount: 200 },\n      { date: '2021', type: 'A', goalProfit: 30, profit: 30, sales: 300, leftCount: 3, salesCount: 300 },\n      { date: '2022', type: 'A', goalProfit: 50, profit: 50, sales: 240, leftCount: 4, salesCount: 400 },\n      { date: '2023', type: 'A', goalProfit: 40, profit: 40, sales: 500, leftCount: 5, salesCount: 500 },\n    ],\n    measures: [\n      {\n        id: 'goalProfit',\n        alias: '利润目标',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n      {\n        id: 'table',\n        alias: '销售指标',\n        children: [\n          {\n            id: 'countInfo',\n            alias: '数量信息',\n            children: [\n              {\n                id: 'leftCount',\n                alias: '遗留数量',\n              },\n              {\n                id: 'salesCount',\n                alias: '销售数',\n              },\n            ],\n          },\n          {\n            id: 'saleInfo',\n            alias: '销售信息',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售量',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    dimensions: [\n      {\n        id: 'dimensionGroup',\n        alias: '维度组',\n        children: [\n          {\n            id: 'date',\n            alias: '日期',\n          },\n          {\n            id: 'type',\n            alias: '类型',\n          },\n        ],\n      },\n    ],\n  }\n  return \n})\n","routePath":"/galley/chartType/table","lang":"zh-CN","toc":[{"text":"自动维度","id":"自动维度","depth":2,"charIndex":3},{"text":"基础表格","id":"基础表格","depth":2,"charIndex":669},{"text":"分组表格","id":"分组表格","depth":2,"charIndex":1816}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"数据集","content":"#\n\n数据集\n\n符合 TidyData 规范的且已聚合的数据源, 遵循变量为列、观测为行的原则\n\n\n数据维度与指标配置#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"region\": \"east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"region\": \"east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"region\": \"east\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"region\": \"east\", \"profit\": 40, \"sales\": 80 },\n\n    { \"date\": \"2019\", \"region\": \"north of east\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"region\": \"north of east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"region\": \"north of east\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"region\": \"north of east\", \"profit\": 40, \"sales\": 80 }\n  ],\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售量\" }\n  ],\n  \"dimensions\": [\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"dimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"dimension\" }\n  ]\n}\n\n\n\n自动选择#\n\n若未配置 dimensions 和 measures , 会取前100条数据, 进行如下判断:\n\n * 如果一个字段存在 number 类型的数据, 则将其设置为指标\n * 如果一个字段存在 string 类型的数据, 并且字段未被设置为指标, 则将其设置为维度\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"region\": \"east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"region\": \"east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"region\": \"east\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"region\": \"east\", \"profit\": 40, \"sales\": 80 },\n\n    { \"date\": \"2019\", \"region\": \"north of east\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"region\": \"north of east\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"region\": \"north of east\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"region\": \"north of east\", \"profit\": 40, \"sales\": 80 }\n  ]\n}\n\n\n\n单指标 零维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [{ \"profit\": 10 }]\n}\n\n\n\n单指标 单维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10 },\n    { \"date\": \"2020\", \"profit\": 30 },\n    { \"date\": \"2021\", \"profit\": 30 },\n    { \"date\": \"2022\", \"profit\": 50 },\n    { \"date\": \"2023\", \"profit\": 40 }\n  ]\n}\n\n\n\n单指标 多维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"A\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"B\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"C\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"D\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"E\", \"profit\": 40 },\n\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"A\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"B\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"C\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"D\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"E\", \"profit\": 40 }\n  ]\n}\n\n\n\n多指标 零维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [{ \"profit\": 1, \"sales\": 2, \"discount\": 0.1 }]\n}\n\n\n\n多指标 单维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100, \"discount\": 0.1 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80, \"discount\": 0.1 }\n  ]\n}\n\n\n\n多指标 多维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"A\", \"profit\": 10, \"sales\": 20, \"discount\": 0.1 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"B\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"C\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"D\", \"profit\": 50, \"sales\": 100, \"discount\": 0.1 },\n    { \"date\": \"2019\", \"region\": \"east\", \"city\": \"E\", \"profit\": 40, \"sales\": 80, \"discount\": 0.1 },\n\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"A\", \"profit\": 10, \"sales\": 20, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"B\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"C\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"D\", \"profit\": 50, \"sales\": 100, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"region\": \"north of east\", \"city\": \"E\", \"profit\": 40, \"sales\": 80, \"discount\": 0.1 }\n  ]\n}\n","routePath":"/galley/dataConfig/dataset","lang":"zh-CN","toc":[{"text":"数据维度与指标配置","id":"数据维度与指标配置","depth":2,"charIndex":49},{"text":"自动选择","id":"自动选择","depth":2,"charIndex":1103},{"text":"单指标 零维度","id":"单指标-零维度","depth":2,"charIndex":2039},{"text":"单指标 单维度","id":"单指标-单维度","depth":2,"charIndex":2121},{"text":"单指标 多维度","id":"单指标-多维度","depth":2,"charIndex":2379},{"text":"多指标 零维度","id":"多指标-零维度","depth":2,"charIndex":3183},{"text":"多指标 单维度","id":"多指标-单维度","depth":2,"charIndex":3293},{"text":"多指标 多维度","id":"多指标-多维度","depth":2,"charIndex":3702}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"维度","content":"#\n\n维度\n\n维度， 分普通维度,行维度,列维度, 设置行列维度, 图表将透视。\n\n\n普通维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"dimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"dimension\" }\n  ],\n  \"measures\": [{ \"id\": \"profit\", \"alias\": \"利润\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 }\n  ]\n}\n\n\n\n列维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"columnDimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"columnDimension\" }\n  ],\n  \"measures\": [{ \"id\": \"profit\", \"alias\": \"利润\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 }\n  ]\n}\n\n\n\n行维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"rowDimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"rowDimension\" }\n  ],\n  \"measures\": [{ \"id\": \"profit\", \"alias\": \"利润\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 }\n  ]\n}\n\n\n\n透视维度#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"dimensions\": [\n    { \"id\": \"category\", \"alias\": \"类别\", \"location\": \"dimension\" },\n    { \"id\": \"date\", \"alias\": \"日期\", \"location\": \"columnDimension\" },\n    { \"id\": \"region\", \"alias\": \"区域\", \"location\": \"rowDimension\" }\n  ],\n  \"measures\": [{ \"id\": \"profit\", \"alias\": \"利润\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2019\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 },\n\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"east\", \"category\": \"Personal\", \"profit\": 40 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Grocery\", \"profit\": 10 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Beverages\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Dairy\", \"profit\": 30 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Household\", \"profit\": 50 },\n    { \"date\": \"2020\", \"region\": \"west\", \"category\": \"Personal\", \"profit\": 40 }\n  ]\n}\n","routePath":"/galley/dataConfig/dimensions","lang":"zh-CN","toc":[{"text":"普通维度","id":"普通维度","depth":2,"charIndex":42},{"text":"列维度","id":"列维度","depth":2,"charIndex":1965},{"text":"行维度","id":"行维度","depth":2,"charIndex":3899},{"text":"透视维度","id":"透视维度","depth":2,"charIndex":5827}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"指标","content":"#\n\n指标\n\n支持树形指标组, 指标分组后, 图表会组合在一起, 其中双轴图更为特殊\n\n\n普通指标#\n\n{\n  \"chartType\": \"columnParallel\",\n  \"measures\": [\n    { \"id\": \"profit\", \"alias\": \"利润\" },\n    { \"id\": \"sales\", \"alias\": \"销售额\" }\n    { \"id\": \"discount\", \"alias\": \"折扣\" }\n  ],\n  \"dimensions\": [{ \"id\": \"date\", \"alias\": \"日期\", \"location\": \"dimension\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"discount\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60, \"discount\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"discount\": 0.1 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100, \"discount\": 0.2 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80, \"discount\": 0.3 }\n  ]\n}\n\n\n\n指标组#\n\n{\n  \"chartType\": \"column\",\n  \"measures\": [\n    {\n      \"id\": \"group1\",\n      \"alias\": \"分组1\",\n      \"children\": [\n        { \"id\": \"profit\", \"alias\": \"利润\" },\n        { \"id\": \"sales\", \"alias\": \"销售额\" }\n      ]\n    },\n    {\n      \"id\": \"group2\",\n      \"alias\": \"分组2\",\n      \"children\": [{ \"id\": \"discount\", \"alias\": \"折扣\" }]\n    },\n    { \"id\": \"rateOfReturn\", \"alias\": \"回报率\" }\n  ],\n  \"dimensions\": [{ \"id\": \"date\", \"alias\": \"日期\", \"location\": \"dimension\" }],\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20, \"discount\": 0.5, \"rateOfReturn\": 0.1 },\n    { \"date\": \"2020\", \"profit\": 20, \"sales\": 40, \"discount\": 0.2, \"rateOfReturn\": 0.2 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60, \"discount\": 0.4, \"rateOfReturn\": 0.3 },\n    { \"date\": \"2022\", \"profit\": 40, \"sales\": 80, \"discount\": 0.2, \"rateOfReturn\": 0.4 },\n    { \"date\": \"2023\", \"profit\": 50, \"sales\": 100, \"discount\": 0.05, \"rateOfReturn\": 0.5 }\n  ]\n}\n","routePath":"/galley/dataConfig/measures","lang":"zh-CN","toc":[{"text":"普通指标","id":"普通指标","depth":2,"charIndex":44},{"text":"指标组","id":"指标组","depth":2,"charIndex":664}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"数值格式","content":"#\n\n\nautoFormat#\n\n * autoFormat 自动格式化, 优先级低于format若配置了 format 则以format为准\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        profit: 12342.34567,\n        sales: 23453.4567,\n      },\n    ],\n    measures: [\n      { id: 'profit', autoFormat: true },\n      { id: 'sales', autoFormat: true },\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n  const [locale, setLocale] = useState('en-US')\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme, locale })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark, locale])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n        {['en-US', 'zh-CN'].map((d) => {\n          return (\n            \n               setLocale(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nformat#\n\n * format 数值格式化配置, 优先级高于autoFormat\n\n\ntype#\n\n * number 数值 (十进制)\n * percent 百分比 (0.00%)\n * permille 千分比 (0.00‰)\n * scientific 科学计数法 (1.23e+3)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        profit: 1234.4567,\n        sales: 1234.4567,\n        count: 1234.4567,\n      },\n    ],\n    measures: [\n      { id: 'profit', format: { type: 'percent' } },\n      { id: 'sales', format: { type: 'permille' } },\n      { id: 'count', format: { type: 'scientific' } },\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nthousandSeparator#\n\n * thousandSeparator 千分位分隔符\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        profit: 12344567,\n        sales: 12344567,\n        count: 12344567,\n      },\n    ],\n    measures: [\n      { id: 'profit', format: { type: 'percent', thousandSeparator: true } },\n      { id: 'sales', format: { type: 'permille', thousandSeparator: false } },\n      { id: 'count', format: { type: 'number', thousandSeparator: true } },\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nratio & symbol#\n\n * ratio 比例\n * symbol 单位\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num1: 1,\n        num2: 10,\n        num3: 100,\n        num4: 1000,\n        num5: 10000,\n        num6: 100000,\n        num7: 1000000,\n        num8: 10000000,\n        num9: 100000000,\n      },\n    ],\n    measures: [\n      { id: 'num1',   format: { type: 'number', fractionDigits:0, ratio:1,        symbol:'' } },\n      { id: 'num2',   format: { type: 'number', fractionDigits:0, ratio:10,       symbol:'十' } },\n      { id: 'num3',   format: { type: 'number', fractionDigits:0, ratio:100,      symbol:'百' } },\n      { id: 'num4',   format: { type: 'number', fractionDigits:0, ratio:1000,     symbol:'千' } },\n      { id: 'num5',   format: { type: 'number', fractionDigits:0, ratio:10000,    symbol:'万' } },\n      { id: 'num6',   format: { type: 'number', fractionDigits:0, ratio:100000,   symbol:'十万' } },\n      { id: 'num7',   format: { type: 'number', fractionDigits:0, ratio:1000000,  symbol:'百万' } },\n      { id: 'num8',   format: { type: 'number', fractionDigits:0, ratio:10000000, symbol:'千万' } },\n      { id: 'num9',   format: { type: 'number', fractionDigits:0, ratio:100000000,symbol:'亿' } },\n    ],\n    yAxis: {\n      log: true,\n      logBase: 10,\n    }\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nfractionDigits#\n\n * fractionDigits 小数位, , 必须大于等于0, 否则不生效.\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num0: 123.456,\n        num1: 123.456,\n        num2: 123.456,\n        num3: 123.456,\n        num4: 123.456,\n        num5: 234.567,\n        num6: 234.567,\n        num7: 234.567,\n        num8: 345.678,\n        num9: 345.678,\n        num9: 400,\n      },\n    ],\n    measures: [\n      { id: 'num0',   format: { type: 'number', fractionDigits:0}},\n      { id: 'num1',   format: { type: 'number', fractionDigits:1}},\n      { id: 'num2',   format: { type: 'number', fractionDigits:2}},\n      { id: 'num3',   format: { type: 'number', fractionDigits:3}},\n      { id: 'num4',   format: { type: 'number', fractionDigits:4}},\n      { id: 'num5',   format: { type: 'number', fractionDigits:5}},\n      { id: 'num6',   format: { type: 'number', fractionDigits:6}},\n      { id: 'num7',   format: { type: 'number', fractionDigits:7}},\n      { id: 'num8',   format: { type: 'number', fractionDigits:8}},\n      { id: 'num9',   format: { type: 'number', fractionDigits:9}},\n    ],\n    yAxis: {\n    }\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nsignificantDigits#\n\n * significantDigits 有效数字, 必须大于0, 否则不生效\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num0: 123.456,\n        num1: 123.456,\n        num2: 123.456,\n        num3: 123.456,\n        num4: 123.456,\n        num5: 234.567,\n        num6: 234.567,\n        num7: 234.567,\n        num8: 345.678,\n        num9: 345.678,\n        num9: 1000,\n      },\n    ],\n    measures: [\n      { id: 'num0',   format: { type: 'number', significantDigits:0}},\n      { id: 'num1',   format: { type: 'number', significantDigits:1}},\n      { id: 'num2',   format: { type: 'number', significantDigits:2}},\n      { id: 'num3',   format: { type: 'number', significantDigits:3}},\n      { id: 'num4',   format: { type: 'number', significantDigits:4}},\n      { id: 'num5',   format: { type: 'number', significantDigits:5}},\n      { id: 'num6',   format: { type: 'number', significantDigits:6}},\n      { id: 'num7',   format: { type: 'number', significantDigits:7}},\n      { id: 'num8',   format: { type: 'number', significantDigits:8}},\n      { id: 'num9',   format: { type: 'number', significantDigits:9}},\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nroundingPriority#\n\n若同时设置了 fractionDigits 和 significantDigits，则 roundingPriority 会生效, 默认为\nlessPrecision\n\n * lessPrecision 更少精度, 尽可能的以 significantDigits 为准, 但如果 significantDigits 不足, 则以\n   significantDigits 为准\n\n * morePrecision 更多精度, 尽可能的以 fractionDigits 为准, 但如果 fractionDigits 不足, 则以\n   significantDigits 为准\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num0: 123.456,\n        num1: 123.456,\n        num2: 123.456,\n        num3: 123.456,\n        num4: 123.456,\n        num5: 234.567,\n        num6: 234.567,\n        num7: 234.567,\n        num8: 345.678,\n        num9: 345.678,\n        num9: 1000,\n      },\n    ],\n    measures: [\n      { id: 'num0',   format: { type: 'number', significantDigits:0, fractionDigits:2, roundingPriority: 'morePrecision' }},\n      { id: 'num1',   format: { type: 'number', significantDigits:1, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num2',   format: { type: 'number', significantDigits:2, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num3',   format: { type: 'number', significantDigits:3, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num4',   format: { type: 'number', significantDigits:4, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num5',   format: { type: 'number', significantDigits:5, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num6',   format: { type: 'number', significantDigits:6, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num7',   format: { type: 'number', significantDigits:7, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num8',   format: { type: 'number', significantDigits:8, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n      { id: 'num9',   format: { type: 'number', significantDigits:9, fractionDigits:2, roundingPriority: 'morePrecision'  }},\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n  const [roundingPriority, setRoundingPriority] = useState('morePrecision')\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    vseed.measures?.forEach((d) => {\n      d.format.roundingPriority = roundingPriority\n    })\n\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark, roundingPriority])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n        {['lessPrecision', 'morePrecision'].map((d) => {\n          return (\n            \n               setRoundingPriority(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nroundingMode#\n\n * roundingMode 四舍五入模式, 默认为 halfExpand\n\n * floor\n\n * ceil\n\n * expand\n\n * trunc\n\n * halfCeil\n\n * halfFloor\n\n * halfExpand\n\n * halfTrunc\n\n * halfEven\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num0: 123.34,\n        num1: 123.38,\n        num2: -123.34,\n        num3: -123.38,\n        num4: 123.34,\n        num5: 234.38,\n        num6: -234.34,\n        num7: -234.38,\n        num8: 4.5,\n        num9: 3.5,\n      },\n    ],\n    measures: [\n      { id: 'num0',   format: { type: 'number', fractionDigits:1 , roundingMode: 'floor' }},\n      { id: 'num1',   format: { type: 'number', fractionDigits:1 , roundingMode: 'ceil' }},\n      { id: 'num2',   format: { type: 'number', fractionDigits:1 , roundingMode: 'expand' }},\n      { id: 'num3',   format: { type: 'number', fractionDigits:1 , roundingMode: 'trunc' }},\n      { id: 'num4',   format: { type: 'number', fractionDigits:1 , roundingMode: 'halfCeil' }},\n      { id: 'num5',   format: { type: 'number', fractionDigits:1 , roundingMode: 'halfFloor' }},\n      { id: 'num6',   format: { type: 'number', fractionDigits:1 , roundingMode: 'halfExpand' }},\n      { id: 'num7',   format: { type: 'number', fractionDigits:1 , roundingMode: 'halfTrunc' }},\n      { id: 'num8',   format: { type: 'number', fractionDigits:0 , roundingMode: 'halfEven' }},\n      { id: 'num9',   format: { type: 'number', fractionDigits:0 , roundingMode: 'halfEven' }},\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n\n\n\nsuffix & prefix#\n\n * suffix 后缀\n * prefix 前缀\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      {\n        num0: 123.34,\n        num1: 123.38,\n        num2: -123.34,\n        num3: -123.38,\n        num4: 123.34,\n        num5: 234.38,\n        num6: -234.34,\n        num7: -234.38,\n        num8: 4.5,\n        num9: 3.5,\n      },\n    ],\n    measures: [\n      { id: 'num0',   format: { type: 'number', fractionDigits:1 , suffix:'¥'}},\n      { id: 'num1',   format: { type: 'number', fractionDigits:1 , suffix:'$'}},\n      { id: 'num2',   format: { type: 'number', fractionDigits:1 , suffix:'!'}},\n      { id: 'num3',   format: { type: 'number', fractionDigits:1 , suffix:'-'}},\n      { id: 'num4',   format: { type: 'number', fractionDigits:1 , suffix:'+'}},\n      { id: 'num5',   format: { type: 'number', fractionDigits:1 , prefix:'¥'}},\n      { id: 'num6',   format: { type: 'number', fractionDigits:1 , prefix:'$'}},\n      { id: 'num7',   format: { type: 'number', fractionDigits:1 , prefix:'!'}},\n      { id: 'num8',   format: { type: 'number', fractionDigits:0 , prefix:'-'}},\n      { id: 'num9',   format: { type: 'number', fractionDigits:0 , prefix:'+'}},\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/galley/dataConfig/numFormat","lang":"zh-CN","toc":[{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":3},{"text":"format","id":"format","depth":2,"charIndex":2417},{"text":"type","id":"type","depth":3,"charIndex":2463},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":4656},{"text":"ratio & symbol","id":"ratio--symbol","depth":3,"charIndex":6863},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":9883},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":12739},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":15609},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":19784},{"text":"suffix & prefix","id":"suffix--prefix","depth":3,"charIndex":22969}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"locale","content":"#\n\n国际化\n\n数据格式等常见, 支持中文zh-CN与英文en-US\n\n\nzh-CN#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    locale: 'zh-CN',\n    measures: [\n      {\n        id: 'group1',\n        alias: 'group1',\n        children: [\n          {\n            id: 'profit',\n            alias: '利润',\n            autoFormat: true,\n          },\n          {\n            id: 'sales',\n            alias: '销售额',\n            autoFormat: true,\n          },\n        ],\n      },\n      {\n        id: 'group2',\n        alias: 'group2',\n        children: [\n          {\n            id: 'discount',\n            alias: '折扣',\n            autoFormat: true,\n          },\n        ],\n      },\n      {\n        id: 'rateOfReturn',\n        alias: '回报率',\n        autoFormat: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000, discount: 0.5, rateOfReturn: 0.001 },\n      { date: '2020', profit: 20000, sales: 400000, discount: 0.2, rateOfReturn: 0.002 },\n      { date: '2021', profit: 30000, sales: 600000, discount: 0.4, rateOfReturn: 0.003 },\n      { date: '2022', profit: 40000, sales: 800000, discount: 0.2, rateOfReturn: 0.004 },\n      { date: '2023', profit: 50000, sales: 1000000, discount: 0.05, rateOfReturn: 0.005 },\n    ],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n\n\n\nen-US#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    locale: 'en-US',\n    measures: [\n      {\n        id: 'group1',\n        alias: 'group1',\n        children: [\n          {\n            id: 'profit',\n            alias: '利润',\n            autoFormat: true,\n          },\n          {\n            id: 'sales',\n            alias: '销售额',\n            autoFormat: true,\n          },\n        ],\n      },\n      {\n        id: 'group2',\n        alias: 'group2',\n        children: [\n          {\n            id: 'discount',\n            alias: '折扣',\n            autoFormat: true,\n          },\n        ],\n      },\n      {\n        id: 'rateOfReturn',\n        alias: '回报率',\n        autoFormat: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000, discount: 0.5, rateOfReturn: 0.001 },\n      { date: '2020', profit: 20000, sales: 400000, discount: 0.2, rateOfReturn: 0.002 },\n      { date: '2021', profit: 30000, sales: 600000, discount: 0.4, rateOfReturn: 0.003 },\n      { date: '2022', profit: 40000, sales: 800000, discount: 0.2, rateOfReturn: 0.004 },\n      { date: '2023', profit: 50000, sales: 1000000, discount: 0.05, rateOfReturn: 0.005 },\n    ],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/galley/i18n/i18n","lang":"zh-CN","toc":[{"text":"zh-CN","id":"zh-cn","depth":2,"charIndex":36},{"text":"en-US","id":"en-us","depth":2,"charIndex":2187}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"areaStyle","content":"#","routePath":"/galley/markStyle/areaStyle","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"barStyle","content":"#\n\n柱图样式\n\n全局样式或条件样式配置\n\n支持图表类型: bar, barParallel, barPercent, column, columnParallel, columnPercent\n\n\nselector#\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nvalue#\n\nexport const SelectorBarValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'column',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: ['2019'],\n      barColor: 'lightpink',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightpink',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\npartial datum#\n\nexport const SelectorBarPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [{ sales: 60 }],\n      barColor: 'lightblue',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightblue',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\ndimension condition#\n\nexport const SelectorBarDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      barColor: 'gray',\n      barColorOpacity: 0.8,\n      barBorderColor: 'gray',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nmeasure condition#\n\nexport const SelectorBarMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      barColor: 'lightgreen',\n      barColorOpacity: 0.8,\n      barBorderColor: 'lightgreen',\n      barBorderWidth: 4,\n      barBorderStyle: 'dashed',\n      barRadius: [8, 8, 0, 0],\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n            { id: 'count', alias: '数量' },\n\n    ],\n  }\n  return \n})\n\n\n\nbarStyle array#\n\n优先级顺序: 后者覆盖前者\n\nexport const MultiBarStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'barParallel',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    barStyle: [\n      {\n        barColorOpacity: 0.8,\n        barRadius: 10,\n      },\n      {\n        selector: [40],\n        barColor: 'lightgreen',\n        barColorOpacity: 0.8,\n      },\n      {\n        selector: [80],\n        barColor: 'red',\n        barColorOpacity: 0.8,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/markStyle/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":99},{"text":"value","id":"value","depth":3,"charIndex":225},{"text":"partial datum","id":"partial-datum","depth":3,"charIndex":1093},{"text":"dimension condition","id":"dimension-condition","depth":3,"charIndex":1980},{"text":"measure condition","id":"measure-condition","depth":3,"charIndex":2981},{"text":"barStyle array","id":"barstyle-array","depth":2,"charIndex":3966}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"lineStyle","content":"#\n\n\nselector#\n\n\nvalue#\n\n\npartial datum#\n\n\nmeasure condition#\n\n\ndimension condition#\n\n\nmultiple line#","routePath":"/galley/markStyle/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":3},{"text":"value","id":"value","depth":3,"charIndex":15},{"text":"partial datum","id":"partial-datum","depth":3,"charIndex":24},{"text":"measure condition","id":"measure-condition","depth":3,"charIndex":41},{"text":"dimension condition","id":"dimension-condition","depth":3,"charIndex":62},{"text":"multiple line","id":"multiple-line","depth":2,"charIndex":-1}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"pieStyle","content":"#","routePath":"/galley/markStyle/pieStyle","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"pointStyle","content":"#\n\n\nselector#\n\n\nvalue#\n\nexport const SelectorPointValue = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: [\n      {\n        selector: '2019',\n        pointSize: 20,\n        pointBorderColor: '#000000',\n        pointBorderWidth: 2,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\npartial datum#\n\nexport const SelectorPointPartialDatum = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'area',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: [ { sales: 60 }],\n      pointSize: 20,\n      pointColor: 'lightblue',\n      pointColorOpacity: 0.8,\n      pointBorderColor: 'blue',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\ndimension condition#\n\nexport const SelectorPointDimensionCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: [\n        {\n          field: 'date',\n          operator: 'in',\n          value: ['2019', '2023'],\n        },\n      ],\n      pointSize: 20,\n      pointColor: 'gray',\n      pointColorOpacity: 0.8,\n      pointBorderColor: 'gray',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\nmeasure condition#\n\nexport const SelectorPointMeasureCondition = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'areaPercent',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: {\n      selector: {\n        field: 'profit',\n        operator: 'between',\n        value: [20, 40],\n      },\n      pointSize: 20,\n      pointColor: 'lightgreen',\n      pointColorOpacity: 0.8,\n      pointBorderColor: '#000000',\n      pointBorderWidth: 1,\n      pointBorderStyle: 'dashed',\n    },\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n\n\n\npoint array#\n\nexport const MultiPointStyle = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, count: 50 },\n      { date: '2020', profit: 30, sales: 60, count: 50 },\n      { date: '2021', profit: 30, sales: 60, count: 50 },\n      { date: '2022', profit: 50, sales: 100, count: 50 },\n      { date: '2023', profit: 40, sales: 80, count: 50 },\n    ],\n    pointStyle: [\n      {\n        pointSize: 20,\n        pointColor: 'lightgreen',\n        pointColorOpacity: 0.8,\n      },\n      {\n        selector: [100, 80],\n        pointSize: 20,\n        pointColor: 'red',\n        pointColorOpacity: 0.8,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    measures: [\n      { id: 'profit', alias: '利润' },\n      { id: 'sales', alias: '销售额' },\n      { id: 'count', alias: '数量' },\n    ],\n  }\n  return \n})\n","routePath":"/galley/markStyle/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":3},{"text":"value","id":"value","depth":3,"charIndex":15},{"text":"partial datum","id":"partial-datum","depth":3,"charIndex":811},{"text":"dimension condition","id":"dimension-condition","depth":3,"charIndex":1699},{"text":"measure condition","id":"measure-condition","depth":3,"charIndex":2694},{"text":"point array","id":"point-array","depth":2,"charIndex":3673}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"深色主题","content":"#\n\n{\n  \"chartType\": \"column\",\n  \"theme\": \"dark\",\n  \"backgroundColor\": \"rgb(25, 29, 36)\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ],\n}\n","routePath":"/galley/theme/dark","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"浅色主题","content":"#\n\n{\n  \"chartType\": \"column\",\n  \"theme\": \"light\",\n  \"backgroundColor\": \"rgb(255, 255, 255)\",\n  \"dataset\": [\n    { \"date\": \"2019\", \"profit\": 10, \"sales\": 20 },\n    { \"date\": \"2020\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2021\", \"profit\": 30, \"sales\": 60 },\n    { \"date\": \"2022\", \"profit\": 50, \"sales\": 100 },\n    { \"date\": \"2023\", \"profit\": 40, \"sales\": 80 }\n  ],\n}\n","routePath":"/galley/theme/light","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"注册主题","content":"#\n\n\n\n\n\nregisterColumnParallel()\nregisterCustomTheme('cyberpunk', (defaultTheme) => {\n  // 默认提供浅色和深色, 可以基于默认主题, 进行增量的二次配置\n  const cyberpunk = {\n    config: {\n      ...defaultTheme.lightTheme.config,\n    },\n  }\n  console.info('defaultTheme', defaultTheme)\n\n  const colorScheme = [\n    '#FF2A8A', // 霓虹玫红（抖音主色变体）\n    '#8D00FF', // 炫光紫（赛博核心）\n    '#00F0FF', // 荧光蓝（抖音蓝升级）\n    '#05F8B6', // 赛博青（霓虹青绿）\n    '#D600FF', // 脉冲紫（渐变过渡）\n    '#FFE800', // 数字柠檬黄（高亮点缀）\n    '#FF005D', // 抖音热粉（视觉焦点）\n    '#00E4FF', // 全息蓝（透明感）\n    '#C95BFF', // 幻彩紫（渐变衔接）\n    '#FF5A00', // 故障橙（赛博点缀）\n  ]\n\n  // by chart type\n  cyberpunk.config.bar.color.colorScheme = colorScheme\n  cyberpunk.config.barPercent.color.colorScheme = colorScheme\n  cyberpunk.config.barParallel.color.colorScheme = colorScheme\n  cyberpunk.config.column.color.colorScheme = colorScheme\n  cyberpunk.config.columnParallel.color.colorScheme = colorScheme\n  cyberpunk.config.columnPercent.color.colorScheme = colorScheme\n  cyberpunk.config.line.color.colorScheme = colorScheme\n  cyberpunk.config.area.color.colorScheme = colorScheme\n  cyberpunk.config.areaPercent.color.colorScheme = colorScheme\n\n  return cyberpunk\n})\n\nfunction Demo() {\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'columnParallel',\n      theme: 'cyberpunk',\n      dataset: [\n        { date: '2019', profit: 10, sales: 20 },\n        { date: '2020', profit: 30, sales: 60 },\n        { date: '2021', profit: 30, sales: 60 },\n        { date: '2022', profit: 50, sales: 100 },\n        { date: '2023', profit: 40, sales: 80 },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return <div ref={ref} style={{ height: 300, width: '100%' }}></div>\n}\n\nexport default Demo\n","routePath":"/galley/theme/registerTheme","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc","sidebar":true,"outline":false},"version":""},{"title":"Markdown & MDX","content":"#\n\nRspress supports not only Markdown but also MDX, a powerful way to develop\ncontent.\n\n\nMarkdown#\n\nMDX is a superset of Markdown, which means you can write Markdown files as\nusual. For example:\n\n# Hello world\n\n\n\nUse component#\n\nWhen you want to use React components in Markdown files, you should name your\nfiles with .mdx extension. For example:\n\n// docs/index.mdx \n\n# Hello world\n\n<CustomComponent />\n\n\n\nFront matter#\n\nYou can add Front Matter at the beginning of your Markdown file, which is a\nYAML-formatted object that defines some metadata. For example:\n\n---\ntitle: Hello world\n---\n\n\n> Note: By default, Rspress uses h1 headings as html headings.\n\nYou can also access properties defined in Front Matter in the body, for example:\n\n---\ntitle: Hello world\n---\n\n# {frontmatter.title}\n\n\nThe previously defined properties will be passed to the component as frontmatter\nproperties. So the final output will be:\n\n<h1>Hello world</h1>\n\n\n\nCustom container#\n\nYou can use the ::: syntax to create custom containers and support custom\ntitles. For example:\n\nInput:\n\n:::tip This is a `block` of type `tip` :::\n\n:::info This is a `block` of type `info` :::\n\n:::warning This is a `block` of type `warning` :::\n\n:::danger This is a `block` of type `danger` :::\n\n::: details This is a `block` of type `details` :::\n\n:::tip Custom Title This is a `block` of `Custom Title` :::\n\n:::tip{title=\"Custom Title\"} This is a `block` of `Custom Title` :::\n\n\nOutput:\n\nThis is a\n\nblock of type tip\n\nThis is a\n\nblock of type info\n\nThis is a\n\nblock of type warning\n\nThis is a\n\nblock of type danger\n\nThis is a\n\nblock of type details\n\nCustom Title This is a\n\nblock of Custom Title\n\nCustom Title\n\nblock of Custom Title\n\n\nCode block#\n\n\nBasic usage#\n\nYou can use the ``` syntax to create code blocks and support custom titles. For\nexample:\n\nInput:\n\n```js\nconsole.log('Hello World')\n```\n\n```js title=\"hello.js\"\nconsole.log('Hello World')\n```\n\n\nOutput:\n\nconsole.log('Hello World')\n\n\nconsole.log('Hello World')\n\n\n\nShow line numbers#\n\nIf you want to display line numbers, you can enable the showLineNumbers option\nin the config file:\n\nexport default {\n  // ...\n  markdown: {\n    showLineNumbers: true,\n  },\n}\n\n\n\nWrap code#\n\nIf you want to wrap long code line by default, you can enable the\ndefaultWrapCode option in the config file:\n\nexport default {\n  // ...\n  markdown: {\n    defaultWrapCode: true,\n  },\n}\n\n\n\nLine highlighting#\n\nYou can also apply line highlighting and code block title at the same time, for\nexample:\n\nInput:\n\n```js title=\"hello.js\" {1,3-5}\nconsole.log('Hello World')\n\nconst a = 1\n\nconsole.log(a)\n\nconst b = 2\n\nconsole.log(b)\n```\n\n\nOutput:\n\nconsole.log('Hello World')\n\nconst a = 1\n\nconsole.log(a)\n\nconst b = 2\n\nconsole.log(b)\n\n\n\nRustify MDX compiler#\n\nYou can enable Rustify MDX compiler by following config:","routePath":"/guide/","lang":"zh-CN","toc":[{"text":"Markdown","id":"markdown","depth":2,"charIndex":88},{"text":"Use component","id":"use-component","depth":2,"charIndex":212},{"text":"Front matter","id":"front-matter","depth":2,"charIndex":405},{"text":"Custom container","id":"custom-container","depth":2,"charIndex":934},{"text":"Code block","id":"code-block","depth":2,"charIndex":1690},{"text":"Basic usage","id":"basic-usage","depth":3,"charIndex":1704},{"text":"Show line numbers","id":"show-line-numbers","depth":3,"charIndex":1978},{"text":"Wrap code","id":"wrap-code","depth":3,"charIndex":2175},{"text":"Line highlighting","id":"line-highlighting","depth":3,"charIndex":2374},{"text":"Rustify MDX compiler","id":"rustify-mdx-compiler","depth":2,"charIndex":2711}],"frontmatter":{},"version":""},{"title":"功能概览","content":"#\n\nFEATURE   DESCRIPTION               LINK\n图表类型      支持多种图表类型的快速切换             示例\n数据重塑      支持不同维度和指标的数据结构转换与重塑       示例\n透视与组合     指标组合与维度透视                 示例\n数值格式      提供丰富的数值格式化选项              示例\n分析功能      支持数据排序、图例排序功能             示例\n条件样式      基于数据条件设置不同的图元样式           示例\n数据标注      支持为图表添加数据点、水平线、垂直线和区域标注   示例\n跨平台渲染     VSeed支持序列化，可在不同平台间传输和渲染   示例\n分离式构建     支持数据处理与渲染分离，减轻客户端数据处理压力   示例\n国际化       支持多语言配置和展示                示例","routePath":"/guide/intro","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"数据标注","content":"#\n\n\n数据点标注#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'area',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      annotationPoint: {\n        selector: {\n          field: 'profit',\n          op: '>',\n          value: 10,\n        },\n        // selector: {\n        //   field: 'sales',\n        //   op: '>=',\n        //   value: 400,\n        // },\n        // selector: 30,\n        // selector: [40,30,50],\n        // selector: { date:\"2019\" },\n        // selector: [{ date:\"2019\" },{ date:\"2020\", profit: 30 }],\n\n        text: '数据点标注',\n      },\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n数据水平线标注#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'area',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      annotationHorizontalLine: {\n        yValue: 170,\n        text: '利润 70',\n      },\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n数据垂直线标注#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'columnParallel',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      annotationVerticalLine: {\n        selector: '2023',\n        text: '23年',\n      },\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n数据区域标注#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'columnParallel',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      annotationArea: [\n        {\n          selector: [{ date: '2021' }],\n          text: '22~23年',\n          textPosition: 'top',\n          textAlign: 'center',\n        },\n        {\n          selector: [{ date: '2022' }],\n          text: '22~23年',\n          textPosition: 'top',\n          textAlign: 'center',\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/intro/annotation","lang":"zh-CN","toc":[{"text":"数据点标注","id":"数据点标注","depth":2,"charIndex":3},{"text":"数据水平线标注","id":"数据水平线标注","depth":2,"charIndex":1167},{"text":"数据垂直线标注","id":"数据垂直线标注","depth":2,"charIndex":1986},{"text":"数据区域标注","id":"数据区域标注","depth":2,"charIndex":2816}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"图表类型","content":"#\n\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n  const [chartType, setChartType] = useState('line')\n  const chartTypes = [\n    'table',\n    'pivotTable',\n    // cartesian\n    'line',\n    'column',\n    'columnPercent',\n    'columnParallel',\n    'bar',\n    'barPercent',\n    'barParallel',\n    'area',\n    'areaPercent',\n    // polar\n    'pie',\n    'donut',\n    'radar',\n    'roseParallel',\n    'rose',\n    'scatter',\n    'dualAxis',\n    // other\n    'funnel',\n    'heatmap',\n  ]\n\n  const changeChartType = (c) => () => {\n    setChartType(c)\n  }\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType,\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n    }\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    }\n  }, [chartType])\n\n  return (\n    \n\n      \n\n        {chartTypes.map((d) => {\n          return (\n            \n              \n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/guide/intro/chartTypeSwitch","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"条件样式","content":"#\n\n\n矩形图元样式#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'column',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      barStyle: [\n        {\n          barRadius: 10,\n          barColorOpacity: 0.25,\n        },\n        {\n          selector: {\n            field: 'sales',\n            op: '>',\n            value: 400,\n          },\n          // selector: {\n          //   field: 'sales',\n          //   op: '>=',\n          //   value: 400,\n          // },\n          // selector: 30,\n          // selector: [40,30,50],\n          // selector: { date:\"2019\" },\n          // selector: [{ date:\"2019\" },{ date:\"2020\", profit: 30 }],\n          barColorOpacity: 1,\n          barRadius: 0,\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n点图元样式#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      pointStyle: [\n        {\n          pointSize: 10,\n          pointColorOpacity: 0.25,\n        },\n        {\n          selector: {\n            field: 'profit',\n            op: '>',\n            value: 40,\n          },\n          // selector: {\n          //   field: 'sales',\n          //   op: '>=',\n          //   value: 400,\n          // },\n          // selector: 30,\n          // selector: [40,30,50],\n          // selector: { date:\"2019\" },\n          // selector: [{ date:\"2019\" },{ date:\"2020\", profit: 30 }],\n          pointColorOpacity: 1,\n          pointSize: 20,\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n线图元样式#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      lineStyle: [\n        {\n          lineWidth: 2,\n          lineColorOpacity: 0.25,\n          lineSmooth: true,\n        },\n        {\n          selector: {\n            field: 'profit',\n            op: '>',\n            value: 40,\n          },\n          // selector: {\n          //   field: 'sales',\n          //   op: '>=',\n          //   value: 400,\n          // },\n          // selector: 30,\n          // selector: [40,30,50],\n          // selector: { date:\"2019\" },\n          // selector: [{ date:\"2019\" },{ date:\"2020\", profit: 30 }],\n          lineColorOpacity: 1,\n          lineWidth: 5,\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n面图元样式#\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'area',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n        { date: '2024', profit: 70, sales: 100 },\n      ],\n      areaStyle: [\n        {\n          areaColorOpacity: 0.2,\n        },\n        {\n          selector: {\n            field: 'profit',\n            op: '>',\n            value: 40,\n          },\n          // selector: {\n          //   field: 'sales',\n          //   op: '>=',\n          //   value: 400,\n          // },\n          // selector: 30,\n          // selector: [40,30,50],\n          // selector: { date:\"2019\" },\n          // selector: [{ date:\"2019\" },{ date:\"2020\", profit: 30 }],\n          areaColorOpacity: 1,\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/intro/conditionalStyle","lang":"zh-CN","toc":[{"text":"矩形图元样式","id":"矩形图元样式","depth":2,"charIndex":3},{"text":"点图元样式","id":"点图元样式","depth":2,"charIndex":1321},{"text":"线图元样式","id":"线图元样式","depth":2,"charIndex":2643},{"text":"面图元样式","id":"面图元样式","depth":2,"charIndex":3988}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"跨平台渲染","content":"#\n\nTIP\n\nvseed支持无损序列化, 因此可以跨平台传输, 复制粘贴, 在Node环境、浏览器环境, 都可以直接通过builder获取到完整的spec\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const [vseed, setVSeed] = useState()\n  const ref = useRef()\n  const chartRef = useRef()\n  const vseed1: VSeed = {\n    chartType: 'line',\n    dataset: [\n      { date: '2019', profit: 10, sales: 100 },\n      { date: '2020', profit: 30, sales: 200 },\n      { date: '2021', profit: 30, sales: 300 },\n      { date: '2022', profit: 50, sales: 400 },\n      { date: '2023', profit: 40, sales: 500 },\n    ],\n  }\n\n  const vseed2: VSeed = {\n    chartType: 'bar',\n    dataset: [\n      { date: '2019', profit: 10, sales: 100 },\n      { date: '2020', profit: 30, sales: 200 },\n      { date: '2021', profit: 30, sales: 300 },\n      { date: '2022', profit: 50, sales: 400 },\n      { date: '2023', profit: 40, sales: 500 },\n    ],\n  }\n\n  const copyVSeed1 = async () => {\n    await navigator.clipboard.writeText(JSON.stringify(vseed1))\n  }\n  const copyVSeed2 = async () => {\n    await navigator.clipboard.writeText(JSON.stringify(vseed2))\n  }\n\n  const paste = async () => {\n    try {\n      if (chartRef.current) {\n        chartRef.current.release()\n      }\n      const clipboardText = await navigator.clipboard.readText()\n      const parsedVSeed = JSON.parse(clipboardText)\n\n      const builder = Builder.from(parsedVSeed)\n      const advancedVSeed = builder.buildAdvanced()\n      const spec = builder.buildSpec(advancedVSeed)\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n\n      chartRef.current = vchart\n    } catch (error) {\n      console.log('debug', error)\n      alert('从剪切板读取内容时出错')\n    }\n  }\n\n  return (\n    \n\n      \n\n        \n          copy demo1\n        \n        \n          copy demo2\n        \n        \n          paste\n        \n      \n\n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/guide/intro/crossPlatformRender","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"分析功能","content":"#\n\n\n轴排序 与 图例排序#\n\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n  const [order, setOrder] = useState('asc')\n  const [orderBy, setOrderBy] = useState('date')\n  const orderList = ['desc', 'asc']\n  const orderByList = ['date', 'profit', 'sales']\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'barParallel',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n      sort: {\n        order,\n        orderBy,\n      },\n      sortLegend: {\n        order,\n      },\n    }\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n    console.log(builder.advancedVSeed.analysis)\n    if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    }\n  }, [orderBy, order])\n\n  return (\n    \n\n      \n\n        {orderList.map((d) => {\n          return (\n            \n               setOrder(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n        {orderByList.map((d) => {\n          return (\n            \n               setOrderBy(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/guide/intro/dataAnalysis","lang":"zh-CN","toc":[{"text":"轴排序 与 图例排序","id":"轴排序-与-图例排序","depth":2,"charIndex":3}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"数值格式","content":"#\n\n\n\n\n\n\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    measures: [\n      {\n        id: 'profit',\n        alias: '利润',\n        autoFormat: false,\n        format: {\n          type: 'number',\n          ratio: 1000,\n          thousandSeparator: true,\n          decimalPlaces: 0,\n          symbol: '千',\n          prefix: '利润',\n          suffix: '$',\n        },\n      },\n      {\n        id: 'sales',\n        alias: '销售额',\n        autoFormat: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期', location: 'dimension' }],\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000, discount: 0.5, rateOfReturn: 0.001 },\n      { date: '2020', profit: 20000, sales: 400000, discount: 0.2, rateOfReturn: 0.002 },\n      { date: '2021', profit: 30000, sales: 600000, discount: 0.4, rateOfReturn: 0.003 },\n      { date: '2022', profit: 40000, sales: 800000, discount: 0.2, rateOfReturn: 0.004 },\n      { date: '2023', profit: 50000, sales: 1000000, discount: 0.05, rateOfReturn: 0.005 },\n    ],\n  }\n\n  return \n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/intro/dataFormat","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"数据重塑","content":"#\n\nINFO\n\n数据和图表类型是完全解耦的, 无论有多少维度或指标, VSeed 都可以始终重塑它们. 代价可能是图表的语义不佳, 但这是值得的.\n\n\n\n\n\n\nconst Demo = () => {\n  const ref = useRef(null)\n  const datasetList = [\n    // 单指标零维度\n    [{ profit: 10 }],\n    // 单指标单维度\n    [\n      { date: '2019', profit: 10 },\n      { date: '2020', profit: 30 },\n      { date: '2021', profit: 30 },\n      { date: '2022', profit: 50 },\n      { date: '2023', profit: 40 },\n    ],\n    // 单指标两维度\n    [\n      { date: '2019', region: 'A', profit: 1 },\n      { date: '2019', region: 'B', profit: 2 },\n      { date: '2019', region: 'C', profit: 3 },\n      { date: '2019', region: 'D', profit: 4 },\n      { date: '2019', region: 'E', profit: 5 },\n\n      { date: '2020', region: 'A', profit: 10 },\n      { date: '2020', region: 'B', profit: 9 },\n      { date: '2020', region: 'C', profit: 8 },\n      { date: '2020', region: 'D', profit: 7 },\n      { date: '2020', region: 'E', profit: 6 },\n\n      { date: '2021', region: 'A', profit: 11 },\n      { date: '2021', region: 'B', profit: 12 },\n      { date: '2021', region: 'C', profit: 13 },\n      { date: '2021', region: 'D', profit: 14 },\n      { date: '2021', region: 'E', profit: 15 },\n    ],\n    // 单指标多维度\n    [\n      { date: '2019', region: 'east', city: 'A', profit: 10 },\n      { date: '2019', region: 'east', city: 'B', profit: 30 },\n      { date: '2019', region: 'west', city: 'A', profit: 30 },\n      { date: '2019', region: 'west', city: 'B', profit: 50 },\n\n      { date: '2020', region: 'east', city: 'A', profit: 15 },\n      { date: '2020', region: 'east', city: 'B', profit: 35 },\n      { date: '2020', region: 'west', city: 'A', profit: 35 },\n      { date: '2020', region: 'west', city: 'B', profit: 55 },\n\n      { date: '2021', region: 'east', city: 'A', profit: 20 },\n      { date: '2021', region: 'east', city: 'B', profit: 40 },\n      { date: '2021', region: 'west', city: 'A', profit: 40 },\n      { date: '2021', region: 'west', city: 'B', profit: 60 },\n    ],\n    // 多指标零维度\n    [{ profit: 1, sales: 2, discount: 0.1 }],\n    // 多指标单维度\n    [\n      { date: '2019', profit: 10, sales: 20, discount: 0.1 },\n      { date: '2020', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2021', profit: 30, sales: 60, discount: 0.1 },\n      { date: '2022', profit: 50, sales: 100, discount: 0.1 },\n      { date: '2023', profit: 40, sales: 80, discount: 0.1 },\n    ],\n    // 多指标多维度\n    [\n      { date: '2019', region: 'east', city: 'A', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', city: 'B', profit: 30, sales: 200 },\n      { date: '2019', region: 'west', city: 'A', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', city: 'B', profit: 50, sales: 500 },\n\n      { date: '2020', region: 'east', city: 'A', profit: 15, sales: 100 },\n      { date: '2020', region: 'east', city: 'B', profit: 35, sales: 200 },\n      { date: '2020', region: 'west', city: 'A', profit: 35, sales: 300 },\n      { date: '2020', region: 'west', city: 'B', profit: 55, sales: 500 },\n\n      { date: '2021', region: 'east', city: 'A', profit: 20, sales: 100 },\n      { date: '2021', region: 'east', city: 'B', profit: 40, sales: 200 },\n      { date: '2021', region: 'west', city: 'A', profit: 40, sales: 300 },\n      { date: '2021', region: 'west', city: 'B', profit: 60, sales: 500 },\n    ],\n  ]\n\n  const chartTypes = [\n    'table',\n    'pivotTable',\n    // cartesian\n    'line',\n    'column',\n    'columnPercent',\n    'columnParallel',\n    'bar',\n    'barPercent',\n    'barParallel',\n    'area',\n    'areaPercent',\n    // polar\n    'pie',\n    'donut',\n    'radar',\n    'roseParallel',\n    'rose',\n    'scatter',\n    'dualAxis',\n    // other\n    'funnel',\n    'heatmap',\n  ]\n\n  const [chartType, setChartType] = useState('columnParallel')\n  const [dataset, setDataset] = useState(datasetList[1])\n  const builderRef = useRef(null)\n  const changeDataset = (c) => () => {\n    setDataset(c)\n  }\n\n  const changeChartType = (c) => () => {\n    setChartType(c)\n  }\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType,\n      dataset,\n      legend: {\n        position: 'bottom',\n      },\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n    builderRef.current = builder\n    if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    }\n  }, [dataset, chartType])\n\n  return (\n    \n {\n        console.group(`selected ${chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n        {datasetList.map((d, index) => {\n          return (\n            \n              \n                {`dataset` + (index + 1)}\n              \n            \n          )\n        })}\n      \n      \n\n        {chartTypes.map((d) => {\n          return (\n            \n              \n                {d}\n              \n            \n          )\n        })}\n      \n\n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/guide/intro/dataReshape","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"国际化","content":"#\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000 },\n      { date: '2020', profit: 20000, sales: 400000 },\n      { date: '2021', profit: 30000, sales: 600000 },\n      { date: '2022', profit: 40000, sales: 800000 },\n      { date: '2023', profit: 50000, sales: 1000000 },\n      { date: '2024', profit: 500000, sales: 1000000 },\n      { date: '2025', profit: 5000000, sales: 100000000 },\n      { date: '2026', profit: 5000000, sales: 1000000000 },\n    ],\n    measures: [\n      { id: 'profit', autoFormat: true },\n      { id: 'sales', autoFormat: true },\n    ],\n    yAxis: {\n      log: true,\n    },\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return \n}\n\n\n\n\nimport {\n  ListTable,\n  ListTableConstructorOptions,\n  PivotChart,\n  PivotChartConstructorOptions,\n  register,\n} from '@visactor/vtable'\n\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef(null)\n  const builderRef = useRef(Builder.from({ chartType: 'line', dataset: [] }))\n  const dark = useDark()\n  const [locale, setLocale] = useState('en-US')\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme, locale })\n    const spec = builder.build()\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec as PivotChartConstructorOptions)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec as ISpec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec as ListTableConstructorOptions)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark, locale])\n\n  return (\n    \n {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current?.spec)\n        console.log('vseed', builderRef.current?.vseed)\n        console.log('advancedVSeed', builderRef.current?.advancedVSeed)\n        console.groupEnd()\n      }}\n    >\n      \n\n        {['en-US', 'zh-CN'].map((d) => {\n          return (\n            \n               setLocale(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              \n            \n          )\n        })}\n      \n      \n\n    \n  )\n}\n\nexport default Demo\n","routePath":"/guide/intro/internationalization","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"大数据性能","content":"#","routePath":"/guide/intro/performance","lang":"zh-CN","toc":[],"frontmatter":{"playgroundDirection":"horizontal"},"version":""},{"title":"透视与组合","content":"#\n\n\n指标分组#\n\n\n\n\n\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n      dimensions: [{ id: 'date', alias: '日期' }],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\n行列透视#\n\n\n\n\n\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'column',\n      dataset: [\n        { date: '2019', category: 'food', profit: 10, sales: 88 },\n        { date: '2019', category: 'book', profit: 33, sales: 210 },\n        { date: '2019', category: 'tools', profit: 27, sales: 150 },\n\n        { date: '2020', category: 'food', profit: 10, sales: 100 },\n        { date: '2020', category: 'book', profit: 11, sales: 122 },\n        { date: '2020', category: 'tools', profit: 23, sales: 150 },\n\n        { date: '2021', category: 'food', profit: 10, sales: 100 },\n        { date: '2021', category: 'book', profit: 30, sales: 190 },\n        { date: '2021', category: 'tools', profit: 15, sales: 50 },\n      ],\n      dimensions: [\n        { id: 'date', alias: '日期' },\n        { id: 'category', alias: '类型', location: 'columnDimension' },\n      ],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/intro/pivotAndCombine","lang":"zh-CN","toc":[{"text":"指标分组","id":"指标分组","depth":2,"charIndex":3},{"text":"行列透视","id":"行列透视","depth":2,"charIndex":1279}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"分离式构建","content":"#\n\nTIP\n\n通常情况下, 图表的数据处理比较耗时, VSeed支持拆分数据处理与数据渲染, build提供buildAdvanced和buildSpec进行分离式构建\n\nconst builder = Builder.from(vseed)\n\n// Node.js\nconst advancedVSeed = builder.buildAdvanced()\n\n// Web Browser\nconst spec = builder.buildSpec(advancedVSeed)\n\n// spec用于渲染\n\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n    }\n    const builder = Builder.from(vseed)\n    const advancedVSeed = builder.buildAdvanced()\n    const spec = builder.buildSpec(advancedVSeed)\n\n    const vchart = new VChart(spec, { dom: ref.current })\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/intro/separateBuild","lang":"zh-CN","toc":[],"frontmatter":{"pageType":"doc"},"version":""},{"title":"快速开始","content":"#\n\nnpm install @visactor/vseed\n\n# optional\nnpm install @visactor/vchart\n\n# optional\nnpm install @visactor/vtable\n\n\n\n快速理解#\n\n\nvseed DSL#\n\nvseed 是一个面向分析领域的DSL, 封装了该领域常用的图表能力, 极大地提升分析式报表平台的搭建效率.\n\n一般情况下, 给定数据集和图表类型, 即可直接出图. 每类图表类型存在大量的默认约定逻辑.\n\n\nregisterAll()\n\nconst vseed: VSeed = {\n  chartType: 'line',\n  dataset: [\n    { date: '2019', profit: 10, sales: 100 },\n    { date: '2020', profit: 30, sales: 200 },\n    { date: '2021', profit: 30, sales: 300 },\n    { date: '2022', profit: 50, sales: 400 },\n    { date: '2023', profit: 40, sales: 500 },\n  ],\n}\n\n\n\nbuilder#\n\n一个spec builder, 输入1个vseed, 即可获得1个 vtable 或 vchart 的 spec\n\n可以基于自己的业务场景, 二次处理 spec\n\n极大地降低vtable、vchart的图表的配置复杂度, 并给予开发者极高的灵活度.\n\n\nregisterAll()\n\nconst vseed: VSeed = {\n  chartType: 'line',\n  dataset: [\n    { date: '2019', profit: 10, sales: 100 },\n    { date: '2020', profit: 30, sales: 200 },\n    { date: '2021', profit: 30, sales: 300 },\n    { date: '2022', profit: 50, sales: 400 },\n    { date: '2023', profit: 40, sales: 500 },\n  ],\n}\n\nconst builder = Builder.from(vseed)\n\nconst spec = builder.build()\n\n\n\nregister#\n\n可以使用register注册特定图表类型\n\n * registerAll 注册所有图表类型和深浅色主题\n * registerCustomTheme用于自定义主题.\n\n\nregisterAll()\n\n\n\nVChart 渲染#\n\nTIP\n\n只需传入图表类型与数据, 即可直接出图\n\n\n\n\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const vchart = new VChart(spec, { dom: ref.current })\n\n    vchart.renderSync()\n\n    return () => vchart.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n\n\n\nPivotChart 渲染#\n\nTIP\n\n配置measures分组, 或维度透视, 即可渲染出透视图表\n\n\n\n\n\n\nregister.chartModule('vchart', VChart)\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType: 'line',\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n      dimensions: [{ id: 'date', alias: '日期' }],\n      measures: [\n        {\n          id: 'profit-group',\n          children: [{ id: 'profit', alias: '利润' }],\n        },\n        {\n          id: 'sales-group',\n          children: [{ id: 'sales', alias: '销售额' }],\n        },\n      ],\n    }\n\n    const spec = Builder.from(vseed).build()\n\n    const tableInstance = new PivotChart(ref.current, spec)\n\n    tableInstance.on('legend_item_click', (args) => {\n      console.log('LEGEND_ITEM_CLICK', args)\n      tableInstance.updateFilterRules([\n        {\n          filterKey: UnfoldDimensionGroupId,\n          filteredValues: args.value,\n        },\n      ])\n    })\n\n    return () => tableInstance.release()\n  })\n\n  return \n\n}\n\nexport default Demo\n","routePath":"/guide/quickStart","lang":"zh-CN","toc":[{"text":"快速理解","id":"快速理解","depth":2,"charIndex":115},{"text":"vseed DSL","id":"vseed-dsl","depth":3,"charIndex":123},{"text":"builder","id":"builder","depth":3,"charIndex":551},{"text":"register","id":"register","depth":3,"charIndex":1067},{"text":"VChart 渲染","id":"vchart-渲染","depth":2,"charIndex":1180},{"text":"PivotChart 渲染","id":"pivotchart-渲染","depth":2,"charIndex":1891}],"frontmatter":{"pageType":"doc"},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/area/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/area/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/area/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/area/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"areaStyle","content":"#\n\nType: AreaStyle | AreaStyle[] | undefined\n\n描述\n\n面积图元样式\n\n面积图元样式配置, 用于定义图表的面积图元样式, 包括面积图元的颜色, 透明度, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n面积图元的颜色\n\n面积图元的颜色\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n面积图元的颜色透明度\n\n面积图元的颜色透明度","routePath":"/option/area/areaStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":234},{"text":"field","id":"field","depth":3,"charIndex":859},{"text":"operator","id":"operator","depth":3,"charIndex":882},{"text":"op","id":"op","depth":3,"charIndex":929},{"text":"value","id":"value","depth":3,"charIndex":970},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1024},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1085}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/area/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"area\"\n\n描述\n\n面积图\n\n面积图，展示数据趋势及累积关系的图表类型\n\n示例:\n\n{\n  chartType: 'area',\n  dataset: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}],\n}\n","routePath":"/option/area/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/area/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairLine","content":"#\n\nType: CrosshairLine | undefined\n\n描述\n\n垂直提示线\n\n鼠标移动到图表上时, 显示的垂直提示线\n\n\nvisible#\n\nType: boolean | undefined\n\n\nlineColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/area/crosshairLine","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":68},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":106},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":145},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":185},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":228}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 面积图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/area/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{ id: 'month', alias: '月份' }, { id: 'year', alias: '年份' }]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/area/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":152},{"text":"alias","id":"alias","depth":2,"charIndex":172},{"text":"location","id":"location","depth":2,"charIndex":207}],"frontmatter":{},"version":""},{"title":"Area","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n面积图, 适用于展示数据随时间变化的趋势及累积关系, 通过填充区域增强数据对比. X轴为类目轴(分类数据), Y轴为数值轴(连续数据).\n\n适用场景:\n\n- 展示单一数据系列的趋势变化\n\n- 强调总量随时间的累积效果\n\n- 对比多个数据系列的总量差异\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度字段映射到X轴，其余维度字段会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 模块开启堆叠\n\n- 默认开启图例、坐标轴、区域填充、数据标签、提示信息","routePath":"/option/area/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/area/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/area/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"lineStyle","content":"#\n\nType: LineStyle | LineStyle[] | undefined\n\n描述\n\n线图元样式\n\n线图元样式配置, 用于定义图表的线图元样式, 包括线图元的颜色, 透明度, 曲线等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nlineSmooth#\n\nType: boolean | undefined\n\n描述\n\n折线图是否平滑\n\n折线图是否平滑\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nlineColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度","routePath":"/option/area/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":230},{"text":"field","id":"field","depth":3,"charIndex":855},{"text":"operator","id":"operator","depth":3,"charIndex":878},{"text":"op","id":"op","depth":3,"charIndex":925},{"text":"value","id":"value","depth":3,"charIndex":966},{"text":"lineSmooth","id":"linesmooth","depth":2,"charIndex":1020},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1083},{"text":"lineColorOpacity","id":"linecoloropacity","depth":2,"charIndex":1140},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1210}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/area/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n面积图的指标会自动合并为一个指标, 映射到Y轴, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/area/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":125},{"text":"alias","id":"alias","depth":2,"charIndex":150},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":190},{"text":"format","id":"format","depth":2,"charIndex":484},{"text":"type","id":"type","depth":3,"charIndex":528},{"text":"ratio","id":"ratio","depth":3,"charIndex":609},{"text":"symbol","id":"symbol","depth":3,"charIndex":828},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1048},{"text":"suffix","id":"suffix","depth":3,"charIndex":1101},{"text":"prefix","id":"prefix","depth":3,"charIndex":1142},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1183},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1647},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2166},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2408},{"text":"children","id":"children","depth":2,"charIndex":2555}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/area/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/area/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/area/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/area/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/area/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/area/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/area/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/areaPercent/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/areaPercent/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/areaPercent/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/areaPercent/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"areaStyle","content":"#\n\nType: AreaStyle | AreaStyle[] | undefined\n\n描述\n\n面积图元样式\n\n面积图元样式配置, 用于定义图表的面积图元样式, 包括面积图元的颜色, 透明度, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n面积图元的颜色\n\n面积图元的颜色\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n面积图元的颜色透明度\n\n面积图元的颜色透明度","routePath":"/option/areaPercent/areaStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":234},{"text":"field","id":"field","depth":3,"charIndex":859},{"text":"operator","id":"operator","depth":3,"charIndex":882},{"text":"op","id":"op","depth":3,"charIndex":929},{"text":"value","id":"value","depth":3,"charIndex":970},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1024},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1085}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/areaPercent/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"areaPercent\"\n\n描述\n\n百分比面积图\n\n百分比面积图，以百分比形式展示多类别占比随某个维度的变化\n\n示例: 'areaPercent'","routePath":"/option/areaPercent/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/areaPercent/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairLine","content":"#\n\nType: CrosshairLine | undefined\n\n描述\n\n垂直提示线\n\n鼠标移动到图表上时, 显示的垂直提示线\n\n\nvisible#\n\nType: boolean | undefined\n\n\nlineColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/areaPercent/crosshairLine","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":68},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":106},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":145},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":185},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":228}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 百分比面积图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', category:'A', value:30}, {month:'1月', category:'B', value:70}]","routePath":"/option/areaPercent/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{ id: 'month', alias: '月份' }, { id: 'year', alias: '年份' }]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/areaPercent/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":152},{"text":"alias","id":"alias","depth":2,"charIndex":172},{"text":"location","id":"location","depth":2,"charIndex":207}],"frontmatter":{},"version":""},{"title":"AreaPercent","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n百分比面积图类型定义\n\n百分比面积图，适用于展示多类别占比随时间变化的趋势，Y轴以百分比形式展示占比关系\n\n适用场景:\n\n- 时间序列的构成变化分析\n\n- 多类别占比趋势对比\n\n- 累积占比与单一类别占比同时展示\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度会放至Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、百分比标签、提示信息、占比计算","routePath":"/option/areaPercent/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/areaPercent/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/areaPercent/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"lineStyle","content":"#\n\nType: LineStyle | LineStyle[] | undefined\n\n描述\n\n线图元样式\n\n线图元样式配置, 用于定义图表的线图元样式, 包括线图元的颜色, 透明度, 曲线等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nlineSmooth#\n\nType: boolean | undefined\n\n描述\n\n折线图是否平滑\n\n折线图是否平滑\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nlineColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度","routePath":"/option/areaPercent/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":230},{"text":"field","id":"field","depth":3,"charIndex":855},{"text":"operator","id":"operator","depth":3,"charIndex":878},{"text":"op","id":"op","depth":3,"charIndex":925},{"text":"value","id":"value","depth":3,"charIndex":966},{"text":"lineSmooth","id":"linesmooth","depth":2,"charIndex":1020},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1083},{"text":"lineColorOpacity","id":"linecoloropacity","depth":2,"charIndex":1140},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1210}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/areaPercent/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n百分比面积图的指标会自动合并为一个指标, 映射到Y轴, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/areaPercent/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":149},{"text":"alias","id":"alias","depth":2,"charIndex":174},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":214},{"text":"format","id":"format","depth":2,"charIndex":508},{"text":"type","id":"type","depth":3,"charIndex":552},{"text":"ratio","id":"ratio","depth":3,"charIndex":633},{"text":"symbol","id":"symbol","depth":3,"charIndex":852},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1072},{"text":"suffix","id":"suffix","depth":3,"charIndex":1125},{"text":"prefix","id":"prefix","depth":3,"charIndex":1166},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1207},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1671},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2190},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2432},{"text":"children","id":"children","depth":2,"charIndex":2579}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/areaPercent/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/areaPercent/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/areaPercent/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/areaPercent/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/areaPercent/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/areaPercent/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/areaPercent/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/areaRange/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/areaRange/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/areaRange/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/areaRange/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"areaStyle","content":"#\n\nType: AreaStyle | AreaStyle[] | undefined\n\n描述\n\n面积图元样式\n\n面积图元样式配置, 用于定义图表的面积图元样式, 包括面积图元的颜色, 透明度, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n面积图元的颜色\n\n面积图元的颜色\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n面积图元的颜色透明度\n\n面积图元的颜色透明度","routePath":"/option/areaRange/areaStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":234},{"text":"field","id":"field","depth":3,"charIndex":859},{"text":"operator","id":"operator","depth":3,"charIndex":882},{"text":"op","id":"op","depth":3,"charIndex":929},{"text":"value","id":"value","depth":3,"charIndex":970},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1024},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1085}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/areaRange/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"areaRange\"\n\n描述\n\n面积图\n\n面积图，展示数据趋势及累积关系的图表类型\n\n示例: 'area'","routePath":"/option/areaRange/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"crosshairLine","content":"#\n\nType: CrosshairLine | undefined\n\n描述\n\n垂直提示线\n\n鼠标移动到图表上时, 显示的垂直提示线\n\n\nvisible#\n\nType: boolean | undefined\n\n\nlineColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/areaRange/crosshairLine","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":68},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":106},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":145},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":185},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":228}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 面积图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/areaRange/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{ id: 'month', alias: '月份' }, { id: 'year', alias: '年份' }]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/areaRange/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":152},{"text":"alias","id":"alias","depth":2,"charIndex":172},{"text":"location","id":"location","depth":2,"charIndex":207}],"frontmatter":{},"version":""},{"title":"AreaRange","content":"#\n\n推荐\n\n- 推荐字段配置: 2个指标, 1个维度\n\n- 不支持数据重塑: 至少2个指标, 1个维度\n\n描述\n\n区间面积图类型定义\n\n区间面积图与面积图的区别在于, 区间面积图的Y轴数据是一个区间, 而面积图的Y轴数据是一个数值. 区间面积图适用于展示数据的变化范围\n\n适用场景:\n\n- 展示单一数据系列的趋势变化\n\n- 强调总量随时间的累积效果\n\n- 对比多个数据系列的总量差异\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度字段映射到X轴，其余维度字段会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 模块开启堆叠\n\n- 默认开启图例、坐标轴、区域填充、数据标签、提示信息","routePath":"/option/areaRange/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/areaRange/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"lineStyle","content":"#\n\nType: LineStyle | LineStyle[] | undefined\n\n描述\n\n线图元样式\n\n线图元样式配置, 用于定义图表的线图元样式, 包括线图元的颜色, 透明度, 曲线等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nlineSmooth#\n\nType: boolean | undefined\n\n描述\n\n折线图是否平滑\n\n折线图是否平滑\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nlineColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度","routePath":"/option/areaRange/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":230},{"text":"field","id":"field","depth":3,"charIndex":855},{"text":"operator","id":"operator","depth":3,"charIndex":878},{"text":"op","id":"op","depth":3,"charIndex":925},{"text":"value","id":"value","depth":3,"charIndex":966},{"text":"lineSmooth","id":"linesmooth","depth":2,"charIndex":1020},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1083},{"text":"lineColorOpacity","id":"linecoloropacity","depth":2,"charIndex":1140},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1210}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/areaRange/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n区间面积图需要2个指标, 第一个指标映射到Y轴的下边界, 第二个指标映射到Y轴的上边界, 第二个之后的指标会被忽略.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/areaRange/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":136},{"text":"alias","id":"alias","depth":2,"charIndex":161},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":201},{"text":"format","id":"format","depth":2,"charIndex":495},{"text":"type","id":"type","depth":3,"charIndex":539},{"text":"ratio","id":"ratio","depth":3,"charIndex":620},{"text":"symbol","id":"symbol","depth":3,"charIndex":839},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1059},{"text":"suffix","id":"suffix","depth":3,"charIndex":1112},{"text":"prefix","id":"prefix","depth":3,"charIndex":1153},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1194},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1658},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2177},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2419},{"text":"children","id":"children","depth":2,"charIndex":2566}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/areaRange/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/areaRange/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/areaRange/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/areaRange/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/areaRange/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/bar/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/bar/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/bar/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/bar/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/bar/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/bar/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"bar\"\n\n描述\n\n条形图\n\n条形图，适用于横向数据对比场景，Y轴为类目轴（分类数据），X轴为数值轴（连续数据），柱子横向排列\n\n示例: 'bar'","routePath":"/option/bar/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/bar/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n水平提示框\n\n水平提示框配置, 用于定义图表的水平提示框, 包括水平提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/bar/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 条形图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{date:'2020-01-01', value:100}, {date:'2020-01-02', value:200}]","routePath":"/option/bar/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: \"date\", alias: \"日期\"}, {id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/bar/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":148},{"text":"alias","id":"alias","depth":2,"charIndex":168},{"text":"location","id":"location","depth":2,"charIndex":203}],"frontmatter":{},"version":""},{"title":"Bar","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n条形图类型定义\n\n条形图，适用于横向数据对比场景，Y轴为类目轴（分类数据），X轴为数值轴（连续数据），柱子横向排列\n\n适用场景:\n\n- 数据项名称较长时\n\n- 需要展示数据排名对比\n\n- 展示正负双向数据\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度会放至Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据标签、提示信息","routePath":"/option/bar/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/bar/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/bar/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/bar/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n条形图指标会自动合并为一个指标, 映射到X轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/bar/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":133},{"text":"alias","id":"alias","depth":2,"charIndex":158},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":198},{"text":"format","id":"format","depth":2,"charIndex":492},{"text":"type","id":"type","depth":3,"charIndex":536},{"text":"ratio","id":"ratio","depth":3,"charIndex":617},{"text":"symbol","id":"symbol","depth":3,"charIndex":836},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1056},{"text":"suffix","id":"suffix","depth":3,"charIndex":1109},{"text":"prefix","id":"prefix","depth":3,"charIndex":1150},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1191},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1655},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2174},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2416},{"text":"children","id":"children","depth":2,"charIndex":2563}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/bar/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/bar/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n条形图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/bar/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/bar/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/bar/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XLinearAxis | undefined\n\n描述\n\nx轴\n\n数值轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/bar/xAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YBandAxis | undefined\n\n描述\n\ny轴\n\n类目轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/bar/yAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/barParallel/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/barParallel/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/barParallel/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/barParallel/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/barParallel/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/barParallel/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"barParallel\"\n\n描述\n\n并列条形图\n\n并列条形图，适用于多指标横向并行对比场景\n\n示例: 'barParallel'","routePath":"/option/barParallel/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/barParallel/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n水平提示框\n\n水平提示框配置, 用于定义图表的水平提示框, 包括水平提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/barParallel/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 并列条形图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{category:'A', value1:100, value2:200}, {category:'B', value1:150,\nvalue2:250}]","routePath":"/option/barParallel/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/barParallel/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":124},{"text":"alias","id":"alias","depth":2,"charIndex":144},{"text":"location","id":"location","depth":2,"charIndex":179}],"frontmatter":{},"version":""},{"title":"BarParallel","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n并列条形图类型定义\n\n并列条形图，适用于多指标横向并行对比场景，多个条形平行排列展示不同指标值\n\n适用场景:\n\n- 类别名称较长时的多指标对比\n\n- 排名与数值同时展示的横向比较\n\n- 多维度数据的并列分析\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度会放至Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据标签、提示信息","routePath":"/option/barParallel/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/barParallel/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/barParallel/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/barParallel/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n并列条形图指标会自动合并为一个指标, 映射到X轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value1', alias: '指标1'}, {id: 'value2', alias: '指标2'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/barParallel/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":167},{"text":"alias","id":"alias","depth":2,"charIndex":192},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":232},{"text":"format","id":"format","depth":2,"charIndex":526},{"text":"type","id":"type","depth":3,"charIndex":570},{"text":"ratio","id":"ratio","depth":3,"charIndex":651},{"text":"symbol","id":"symbol","depth":3,"charIndex":870},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1090},{"text":"suffix","id":"suffix","depth":3,"charIndex":1143},{"text":"prefix","id":"prefix","depth":3,"charIndex":1184},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1225},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1689},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2208},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2450},{"text":"children","id":"children","depth":2,"charIndex":2597}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/barParallel/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/barParallel/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n条形图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/barParallel/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/barParallel/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/barParallel/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XLinearAxis | undefined\n\n描述\n\nx轴\n\n数值轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/barParallel/xAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YBandAxis | undefined\n\n描述\n\ny轴\n\n类目轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/barParallel/yAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/barPercent/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/barPercent/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/barPercent/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/barPercent/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/barPercent/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/barPercent/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"barPercent\"\n\n描述\n\n百分比条形图\n\n百分比条形图，以横向百分比形式展示各类别数据占比关系\n\n示例: 'barPercent'","routePath":"/option/barPercent/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/barPercent/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n水平提示框\n\n水平提示框配置, 用于定义图表的水平提示框, 包括水平提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/barPercent/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 百分比条形图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{category:'A', value:30}, {category:'B', value:70}]","routePath":"/option/barPercent/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度会放至Y轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/barPercent/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":123},{"text":"alias","id":"alias","depth":2,"charIndex":143},{"text":"location","id":"location","depth":2,"charIndex":178}],"frontmatter":{},"version":""},{"title":"BarPercent","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n百分比条形图类型定义\n\n百分比条形图，适用于横向展示各类别占比关系的场景，X轴以百分比形式展示数据占比\n\n适用场景:\n\n- 类别名称较长时的占比对比\n\n- 多维度数据的横向构成分析\n\n- 排名与占比同时展示的场景\n\n注意\n\n数据要求:\n\n- 至少1个维度字段和1个度量字段\n\n- 所有类别占比之和为100%\n\n- 支持多系列堆叠展示占比关系\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、百分比标签、提示信息、占比计算","routePath":"/option/barPercent/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/barPercent/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/barPercent/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/barPercent/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n指标会自动合并为一个指标, 映射到X轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/barPercent/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":151},{"text":"alias","id":"alias","depth":2,"charIndex":176},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":216},{"text":"format","id":"format","depth":2,"charIndex":510},{"text":"type","id":"type","depth":3,"charIndex":554},{"text":"ratio","id":"ratio","depth":3,"charIndex":635},{"text":"symbol","id":"symbol","depth":3,"charIndex":854},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1074},{"text":"suffix","id":"suffix","depth":3,"charIndex":1127},{"text":"prefix","id":"prefix","depth":3,"charIndex":1168},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1209},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1673},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2192},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2434},{"text":"children","id":"children","depth":2,"charIndex":2581}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/barPercent/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/barPercent/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n条形图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/barPercent/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/barPercent/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/barPercent/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XLinearAxis | undefined\n\n描述\n\nx轴\n\n数值轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/barPercent/xAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YBandAxis | undefined\n\n描述\n\ny轴\n\n类目轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/barPercent/yAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/column/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/column/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/column/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/column/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/column/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/column/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"column\"\n\n描述\n\n柱状图\n\n柱状图，适用于纵向数据对比场景，X轴为类目轴（分类数据），Y轴为数值轴（连续数据），柱子纵向排列\n\n示例: 'column'","routePath":"/option/column/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/column/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n垂直提示框\n\n垂直提示框配置, 用于定义图表的垂直提示框, 包括垂直提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/column/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 柱状图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{category:'A', value:100}, {category:'B', value:200}]","routePath":"/option/column/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n柱状图的第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n示例: [{id: \"category\", alias: \"类别\"}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/column/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":127},{"text":"alias","id":"alias","depth":2,"charIndex":147},{"text":"location","id":"location","depth":2,"charIndex":182}],"frontmatter":{},"version":""},{"title":"Column","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n柱状图类型定义\n\n柱状图，适用于纵向数据对比场景，X轴为类目轴（分类数据），Y轴为数值轴（连续数据），柱子纵向排列\n\n适用场景:\n\n- 数据项名称较短时\n\n- 需要直观比较不同类别的数值大小\n\n- 展示时间序列数据变化趋势\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 第一个维度会放至X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据标签、提示信息","routePath":"/option/column/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/column/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/column/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/column/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n柱状图的所有指标会自动合并为一个指标, 映射到Y轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/column/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":136},{"text":"alias","id":"alias","depth":2,"charIndex":161},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":201},{"text":"format","id":"format","depth":2,"charIndex":495},{"text":"type","id":"type","depth":3,"charIndex":539},{"text":"ratio","id":"ratio","depth":3,"charIndex":620},{"text":"symbol","id":"symbol","depth":3,"charIndex":839},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1059},{"text":"suffix","id":"suffix","depth":3,"charIndex":1112},{"text":"prefix","id":"prefix","depth":3,"charIndex":1153},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1194},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1658},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2177},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2419},{"text":"children","id":"children","depth":2,"charIndex":2566}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/column/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/column/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/column/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/column/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/column/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/column/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/column/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/columnParallel/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/columnParallel/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/columnParallel/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/columnParallel/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/columnParallel/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/columnParallel/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"columnParallel\"\n\n描述\n\n并列柱状图\n\n并列柱状图，适用于多指标并行对比场景\n\n示例: 'columnParallel'","routePath":"/option/columnParallel/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/columnParallel/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n垂直提示框\n\n垂直提示框配置, 用于定义图表的垂直提示框, 包括垂直提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/columnParallel/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 并列柱状图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{category:'A', value1:100, value2:200}, {category:'B', value1:150,\nvalue2:250}]","routePath":"/option/columnParallel/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/columnParallel/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":124},{"text":"alias","id":"alias","depth":2,"charIndex":144},{"text":"location","id":"location","depth":2,"charIndex":179}],"frontmatter":{},"version":""},{"title":"ColumnParallel","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n并列柱状图类型定义\n\n并列柱状图，适用于多指标并行对比场景，多个柱子并列排列展示不同指标值\n\n适用场景:\n\n- 同一维度下多指标并行对比\n\n- 多维度数据的横向比较\n\n- 指标间关联性分析\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度会放至X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据标签、提示信息、指标排序","routePath":"/option/columnParallel/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/columnParallel/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/columnParallel/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/columnParallel/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n并列柱状图的所有指标会自动合并为一个指标, 映射到Y轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value1', alias: '指标1'}, {id: 'value2', alias: '指标2'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/columnParallel/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":170},{"text":"alias","id":"alias","depth":2,"charIndex":195},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":235},{"text":"format","id":"format","depth":2,"charIndex":529},{"text":"type","id":"type","depth":3,"charIndex":573},{"text":"ratio","id":"ratio","depth":3,"charIndex":654},{"text":"symbol","id":"symbol","depth":3,"charIndex":873},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1093},{"text":"suffix","id":"suffix","depth":3,"charIndex":1146},{"text":"prefix","id":"prefix","depth":3,"charIndex":1187},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1228},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1692},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2211},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2453},{"text":"children","id":"children","depth":2,"charIndex":2600}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/columnParallel/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/columnParallel/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/columnParallel/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/columnParallel/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/columnParallel/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/columnParallel/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/columnParallel/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/columnPercent/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/columnPercent/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/columnPercent/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/columnPercent/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/columnPercent/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/columnPercent/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"columnPercent\"\n\n描述\n\n百分比柱状图\n\n百分比柱状图，以百分比形式展示各类别数据占比关系\n\n示例: 'columnPercent'","routePath":"/option/columnPercent/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/columnPercent/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n垂直提示框\n\n垂直提示框配置, 用于定义图表的垂直提示框, 包括垂直提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/columnPercent/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 百分比柱状图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{category:'A', value:30}, {category:'B', value:70}]","routePath":"/option/columnPercent/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/columnPercent/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":124},{"text":"alias","id":"alias","depth":2,"charIndex":144},{"text":"location","id":"location","depth":2,"charIndex":179}],"frontmatter":{},"version":""},{"title":"ColumnPercent","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n百分比柱状图类型定义\n\n百分比柱状图，适用于展示各类别占比关系的场景，Y轴以百分比形式展示数据占比\n\n适用场景:\n\n- 不同类别数据的占比对比\n\n- 多维度数据的构成分析\n\n- 时间序列的占比变化趋势\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 第一个维度会放至X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、百分比标签、提示信息、占比计算","routePath":"/option/columnPercent/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/columnPercent/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/columnPercent/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/columnPercent/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n百分比柱状图指标会自动合并为一个指标, 映射到Y轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/columnPercent/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":157},{"text":"alias","id":"alias","depth":2,"charIndex":182},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":222},{"text":"format","id":"format","depth":2,"charIndex":516},{"text":"type","id":"type","depth":3,"charIndex":560},{"text":"ratio","id":"ratio","depth":3,"charIndex":641},{"text":"symbol","id":"symbol","depth":3,"charIndex":860},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1080},{"text":"suffix","id":"suffix","depth":3,"charIndex":1133},{"text":"prefix","id":"prefix","depth":3,"charIndex":1174},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1215},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1679},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2198},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2440},{"text":"children","id":"children","depth":2,"charIndex":2587}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/columnPercent/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/columnPercent/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"stackCornerRadius","content":"#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图 堆叠圆角\n\n条形图 堆叠圆角","routePath":"/option/columnPercent/stackCornerRadius","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/columnPercent/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/columnPercent/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/columnPercent/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/columnPercent/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/donut/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"donut\"\n\n描述\n\n环形图\n\n环形图，中心留有空白区域的饼图变体\n\n示例: 'donut'","routePath":"/option/donut/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/donut/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 环形图的数据最终会被转换为1个维度, 1个指标.\n\n示例: [{category:'A', value:30}, {category:'B', value:70}]","routePath":"/option/donut/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n环形图的所有维度会与指标名称(存在多个指标时)合并成1个维度, 映射到饼图的角度, 并作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/donut/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":131},{"text":"alias","id":"alias","depth":2,"charIndex":151},{"text":"location","id":"location","depth":2,"charIndex":186}],"frontmatter":{},"version":""},{"title":"Donut","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n环形图类型定义\n\n环形图，适用于展示单一维度数据的占比关系，中心留有空白区域可展示汇总信息\n\n适用场景:\n\n- 需要同时展示整体数据和各部分占比\n\n- 强调数据的整体与部分关系\n\n- 中心区域需要展示关键指标或标题\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 所有维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、数据标签、提示信息、占比计算、中心文本","routePath":"/option/donut/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/donut/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/donut/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/donut/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n环形图的所有指标会自动合并为一个指标, 映射到饼图的半径, 存在多个指标时, 指标名称会与其余维度合并, 并作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/donut/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":161},{"text":"alias","id":"alias","depth":2,"charIndex":186},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":226},{"text":"format","id":"format","depth":2,"charIndex":520},{"text":"type","id":"type","depth":3,"charIndex":564},{"text":"ratio","id":"ratio","depth":3,"charIndex":645},{"text":"symbol","id":"symbol","depth":3,"charIndex":864},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1084},{"text":"suffix","id":"suffix","depth":3,"charIndex":1137},{"text":"prefix","id":"prefix","depth":3,"charIndex":1178},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1219},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1683},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2202},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2444},{"text":"children","id":"children","depth":2,"charIndex":2591}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/donut/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/donut/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/dualAxis/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":61},{"text":"field","id":"field","depth":3,"charIndex":106},{"text":"operator","id":"operator","depth":3,"charIndex":129},{"text":"op","id":"op","depth":3,"charIndex":176},{"text":"value","id":"value","depth":3,"charIndex":217},{"text":"text","id":"text","depth":2,"charIndex":271},{"text":"textPosition","id":"textposition","depth":2,"charIndex":333},{"text":"textColor","id":"textcolor","depth":2,"charIndex":476},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":531},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":586},{"text":"textAlign","id":"textalign","depth":2,"charIndex":644},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":909},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1177},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1244},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1309},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1395},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1462},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1545},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1608},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1663},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1723},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1784},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1841},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1899}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/dualAxis/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":81},{"text":"field","id":"field","depth":3,"charIndex":138},{"text":"operator","id":"operator","depth":3,"charIndex":161},{"text":"op","id":"op","depth":3,"charIndex":208},{"text":"value","id":"value","depth":3,"charIndex":249},{"text":"yValue","id":"yvalue","depth":2,"charIndex":303},{"text":"text","id":"text","depth":2,"charIndex":375},{"text":"textPosition","id":"textposition","depth":2,"charIndex":437},{"text":"textColor","id":"textcolor","depth":2,"charIndex":618},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":673},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":728},{"text":"textAlign","id":"textalign","depth":2,"charIndex":786},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1030},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1272},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1339},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1404},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1475},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1557},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1625},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1688},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1754},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1809},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1860}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/dualAxis/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":63},{"text":"field","id":"field","depth":3,"charIndex":108},{"text":"operator","id":"operator","depth":3,"charIndex":131},{"text":"op","id":"op","depth":3,"charIndex":178},{"text":"value","id":"value","depth":3,"charIndex":219},{"text":"text","id":"text","depth":2,"charIndex":273},{"text":"textColor","id":"textcolor","depth":2,"charIndex":335},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":390},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":445},{"text":"textAlign","id":"textalign","depth":2,"charIndex":503},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":766},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1034},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1101},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1166},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1237},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1304},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1372},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1435},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1683}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/dualAxis/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":77},{"text":"field","id":"field","depth":3,"charIndex":134},{"text":"operator","id":"operator","depth":3,"charIndex":157},{"text":"op","id":"op","depth":3,"charIndex":204},{"text":"value","id":"value","depth":3,"charIndex":245},{"text":"xValue","id":"xvalue","depth":2,"charIndex":299},{"text":"text","id":"text","depth":2,"charIndex":371},{"text":"textPosition","id":"textposition","depth":2,"charIndex":433},{"text":"textColor","id":"textcolor","depth":2,"charIndex":586},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":641},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":696},{"text":"textAlign","id":"textalign","depth":2,"charIndex":754},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":989},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1240},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1297},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1352},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1403},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1483},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1550},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1615},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1686},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1753},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1821}],"frontmatter":{},"version":""},{"title":"areaStyle","content":"#\n\nType: AreaStyle | AreaStyle[] | undefined\n\n描述\n\n面积图元样式\n\n面积图元样式配置, 用于定义图表的面积图元样式, 包括面积图元的颜色, 透明度, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n面积图元的颜色\n\n面积图元的颜色\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n面积图元的颜色透明度\n\n面积图元的颜色透明度","routePath":"/option/dualAxis/areaStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":234},{"text":"field","id":"field","depth":3,"charIndex":859},{"text":"operator","id":"operator","depth":3,"charIndex":882},{"text":"op","id":"op","depth":3,"charIndex":929},{"text":"value","id":"value","depth":3,"charIndex":970},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1024},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1085}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n","routePath":"/option/dualAxis/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"barStyle","content":"#\n\nType: BarStyle | BarStyle[] | undefined\n\n描述\n\n矩形图元样式\n\n条形图样式配置, 用于定义图表的条形图样式, 包括条形图的颜色, 边框, 圆角等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nbarColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nbarColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nbarBorderColor#\n\nType: string | undefined\n\n描述\n\n柱状图边框颜色\n\n柱状图边框颜色\n\n\nbarBorderWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度\n\n\nbarBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n柱状图边框样式\n\n柱状图边框样式\n\n示例: solid\n\ndashed\n\ndotted\n\n\nbarRadius#\n\nType: number | number[] | undefined\n\n描述\n\n柱状图圆角\n\n柱状图圆角\n\n示例: 4\n\n[0, 0, 10, 10]","routePath":"/option/dualAxis/barStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":228},{"text":"field","id":"field","depth":3,"charIndex":853},{"text":"operator","id":"operator","depth":3,"charIndex":876},{"text":"op","id":"op","depth":3,"charIndex":923},{"text":"value","id":"value","depth":3,"charIndex":964},{"text":"barColor","id":"barcolor","depth":2,"charIndex":1018},{"text":"barColorOpacity","id":"barcoloropacity","depth":2,"charIndex":1074},{"text":"barBorderColor","id":"barbordercolor","depth":2,"charIndex":1143},{"text":"barBorderWidth","id":"barborderwidth","depth":2,"charIndex":1209},{"text":"barBorderStyle","id":"barborderstyle","depth":2,"charIndex":1275},{"text":"barRadius","id":"barradius","depth":2,"charIndex":1391}],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"dualAxis\"\n\n描述\n\n\n示例: 'dualAxis'","routePath":"/option/dualAxis/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/dualAxis/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":33},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":211}],"frontmatter":{},"version":""},{"title":"crosshairRect","content":"#\n\nType: CrosshairRect | undefined\n\n描述\n\n垂直提示框\n\n垂直提示框配置, 用于定义图表的垂直提示框, 包括垂直提示框的颜色、标签样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n\nrectColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/dualAxis/crosshairRect","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":89},{"text":"rectColor","id":"rectcolor","depth":2,"charIndex":127},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":166},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":206},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":249}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n\n示例: [{month:'1月', value:100, growth:0.2}, {month:'2月', value:150, growth:0.5}]","routePath":"/option/dualAxis/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n\n示例: [{id: 'month', alias: '月份'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/dualAxis/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":72},{"text":"alias","id":"alias","depth":2,"charIndex":92},{"text":"location","id":"location","depth":2,"charIndex":127}],"frontmatter":{},"version":""},{"title":"dualChartType","content":"#\n\nType: { primary: \"area\" | \"line\" | \"column\" | \"columnParallel\" | \"scatter\";\nsecondary: \"area\" | \"line\" | \"column\" | \"columnParallel\" | \"scatter\"; } | {\nprimary: \"area\" | \"line\" | \"column\" | \"columnParallel\" | \"scatter\"; secondary:\n\"area\" | \"line\" | \"column\" | \"columnParallel\" | \"scatter\"; }[] | undefined\n\n描述\n\n\n示例: {primary: 'line', secondary: 'bar'} [{primary: 'line', secondary: 'bar'},\n{primary: 'column', secondary: 'area'}]","routePath":"/option/dualAxis/dualChartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dualMeasures","content":"#\n\nType: DualMeasures | undefined\n\n描述\n\n双轴图指标, 是measures的简化形式\n\n组合的双轴图指标配置, 每个对象都代表一个双轴图, 双轴图之间纵向排列, 必须是数组.\n\n每个配置对象内, primaryMeasures代表所有的主轴指标, secondaryMeasures代表所有的次轴指标,\nprimaryMeasures和secondaryMeasures可配置为数组或一个对象\n\nprimaryMeasures 如果是多个指标, 则会自动合并\n\nsecondaryMeasures 如果是多个指标, 则会自动合并\n\n示例: 如下示例配置了一个双轴图, 主轴有1个value指标, 次轴有1个growth指标 [ { primaryMeasures: {id: 'value',\nalias: '数值'} secondaryMeasures: {id: 'growth', alias: '增长率'} } ]\n如下示例配置了2个纵向排列的双轴图, 第一个双轴图, 主轴有1个value指标, 次轴有一个growth指标, 第二个双轴图, 主轴有2个指标:\nprofit与sales, 次轴有一个returnRatio指标 [ { primaryMeasures: {id: 'value', alias: '数值'}\nsecondaryMeasures: {id: 'growth', alias: '增长率'} }, { primaryMeasures: [{id:\n'profit', alias: '利润'}, {id: 'sales', alias: '销售额'}], secondaryMeasures: [{id:\n'returnRatio', alias: '回报率'}] } ]\n\n\nprimaryMeasures#\n\nType: Measure | Measure[] | undefined\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nsecondaryMeasures#\n\nType: Measure | Measure[] | undefined\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n","routePath":"/option/dualAxis/dualMeasures","lang":"zh-CN","toc":[{"text":"primaryMeasures","id":"primarymeasures","depth":2,"charIndex":774},{"text":"id","id":"id","depth":3,"charIndex":832},{"text":"alias","id":"alias","depth":3,"charIndex":857},{"text":"autoFormat","id":"autoformat","depth":3,"charIndex":897},{"text":"format","id":"format","depth":3,"charIndex":1191},{"text":"type","id":"type","depth":4,"charIndex":1234},{"text":"ratio","id":"ratio","depth":4,"charIndex":1314},{"text":"symbol","id":"symbol","depth":4,"charIndex":1532},{"text":"thousandSeparator","id":"thousandseparator","depth":4,"charIndex":1751},{"text":"suffix","id":"suffix","depth":4,"charIndex":1803},{"text":"prefix","id":"prefix","depth":4,"charIndex":1843},{"text":"fractionDigits","id":"fractiondigits","depth":4,"charIndex":1883},{"text":"significantDigits","id":"significantdigits","depth":4,"charIndex":2346},{"text":"roundingPriority","id":"roundingpriority","depth":4,"charIndex":2864},{"text":"roundingMode","id":"roundingmode","depth":4,"charIndex":3105},{"text":"secondaryMeasures","id":"secondarymeasures","depth":2,"charIndex":3252},{"text":"id","id":"id-1","depth":3,"charIndex":3312},{"text":"alias","id":"alias-1","depth":3,"charIndex":3337},{"text":"autoFormat","id":"autoformat-1","depth":3,"charIndex":3377},{"text":"format","id":"format-1","depth":3,"charIndex":3671},{"text":"type","id":"type-1","depth":4,"charIndex":3714},{"text":"ratio","id":"ratio-1","depth":4,"charIndex":3794},{"text":"symbol","id":"symbol-1","depth":4,"charIndex":4012},{"text":"thousandSeparator","id":"thousandseparator-1","depth":4,"charIndex":4231},{"text":"suffix","id":"suffix-1","depth":4,"charIndex":4283},{"text":"prefix","id":"prefix-1","depth":4,"charIndex":4323},{"text":"fractionDigits","id":"fractiondigits-1","depth":4,"charIndex":4363},{"text":"significantDigits","id":"significantdigits-1","depth":4,"charIndex":4826},{"text":"roundingPriority","id":"roundingpriority-1","depth":4,"charIndex":5344},{"text":"roundingMode","id":"roundingmode-1","depth":4,"charIndex":5585}],"frontmatter":{},"version":""},{"title":"DualAxis","content":"#\n\n推荐\n\n- 推荐字段配置: 2个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n双轴图类型定义\n\n双轴图，适用于展示两个不同量级或不同单位指标的对比关系，包含主坐标轴和次坐标轴\n\n适用场景:\n\n- 不同量级指标的对比分析\n\n- 相关性指标的趋势比较\n\n- 需要同时展示数值和增长率等复合指标\n\n- 支持不同类型图表组合（如折线图+柱状图/ 折线图+面积图/ 面积图+柱状图）\n\n注意\n\n数据要求:\n\n- 至少1个指标字段（度量）\n\n- 支持指标组, 第一组指标会放置(主轴)左轴, 第二组指标会放置(次轴)右轴\n\n- 第一个维度会放至X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n- 两组指标字段可分别映射到左右两个Y轴, 一个指标组内的所有会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启坐标轴、图例、数据标签、提示信息","routePath":"/option/dualAxis/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/dualAxis/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":33}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/dualAxis/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":34},{"text":"border","id":"border","depth":2,"charIndex":94},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":154},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":225},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":305},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":390},{"text":"position","id":"position","depth":2,"charIndex":736},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1002}],"frontmatter":{},"version":""},{"title":"lineStyle","content":"#\n\nType: LineStyle | LineStyle[] | undefined\n\n描述\n\n线图元样式\n\n线图元样式配置, 用于定义图表的线图元样式, 包括线图元的颜色, 透明度, 曲线等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nlineSmooth#\n\nType: boolean | undefined\n\n描述\n\n折线图是否平滑\n\n折线图是否平滑\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nlineColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度","routePath":"/option/dualAxis/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":230},{"text":"field","id":"field","depth":3,"charIndex":855},{"text":"operator","id":"operator","depth":3,"charIndex":878},{"text":"op","id":"op","depth":3,"charIndex":925},{"text":"value","id":"value","depth":3,"charIndex":966},{"text":"lineSmooth","id":"linesmooth","depth":2,"charIndex":1020},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1083},{"text":"lineColorOpacity","id":"linecoloropacity","depth":2,"charIndex":1140},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1210}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n","routePath":"/option/dualAxis/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n双轴图指标\n\nmeasures可以使用2个指标组, 代表普通双轴图的主轴和次轴指标, 每个指标组内的指标会自动合并为一个指标.\n\nmeasures可以使用1个指标组, 再嵌套2个指标组, 绘制组合双轴图. 最外层的每一个组, 代表一个双轴图, 它们会纵向排列.\n\n示例: 普通双轴图 [ { id: \"primaryAxis\", alias: '主轴', children: [{id: 'profit', alias:\n'利润'}, {id: 'sales', alias: '销售额'}] }, { id: \"secondaryAxis\", alias: '次轴',\nchildren: [{id: 'growth', alias: '增长率'}, {id: 'returnRatio', alias: '回报率'}] } ]\n组合双轴图 [ { id: \"first\", alias: \"第一个双轴图\", children: [ { id: \"primaryAxis\", alias:\n'主轴', children: [{id: 'profit', alias: '利润'}, {id: 'sales', alias: '销售额'}] }, {\nid: \"secondaryAxis\", alias: '次轴', children: [{id: 'growth', alias: '增长率'}, {id:\n'returnRatio', alias: '回报率'}] }, ] }, { id: \"second\", alias: \"第二个双轴图\", children:\n[ { id: \"primaryAxis2\", alias: '主轴', children: [{id: 'profit2', alias: '利润'},\n{id: 'sales2', alias: '销售额'}] }, { id: \"secondaryAxis2\", alias: '次轴', children:\n[{id: 'growth2', alias: '增长率'}, {id: 'returnRatio2', alias: '回报率'}] }, ] }, ]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/dualAxis/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":962},{"text":"alias","id":"alias","depth":2,"charIndex":987},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":1027},{"text":"format","id":"format","depth":2,"charIndex":1321},{"text":"type","id":"type","depth":3,"charIndex":1365},{"text":"ratio","id":"ratio","depth":3,"charIndex":1446},{"text":"symbol","id":"symbol","depth":3,"charIndex":1665},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1885},{"text":"suffix","id":"suffix","depth":3,"charIndex":1938},{"text":"prefix","id":"prefix","depth":3,"charIndex":1979},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":2020},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":2484},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":3003},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":3245},{"text":"children","id":"children","depth":2,"charIndex":3392}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/dualAxis/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"primaryYAxis","content":"#\n\nType: YLinearAxis | YLinearAxis[] | undefined\n\n描述\n\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/dualAxis/primaryYAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":55},{"text":"max","id":"max","depth":2,"charIndex":127},{"text":"nice","id":"nice","depth":2,"charIndex":201},{"text":"zero","id":"zero","depth":2,"charIndex":306},{"text":"log","id":"log","depth":2,"charIndex":406},{"text":"logBase","id":"logbase","depth":2,"charIndex":445},{"text":"visible","id":"visible","depth":2,"charIndex":487},{"text":"inverse","id":"inverse","depth":2,"charIndex":540},{"text":"label","id":"label","depth":2,"charIndex":611},{"text":"visible","id":"visible-1","depth":3,"charIndex":759},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":802},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":847},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":895},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":945},{"text":"line","id":"line","depth":2,"charIndex":990},{"text":"visible","id":"visible-2","depth":3,"charIndex":1145},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1188},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1232},{"text":"tick","id":"tick","depth":2,"charIndex":1276},{"text":"visible","id":"visible-3","depth":3,"charIndex":1392},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1435},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1481},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1525},{"text":"title","id":"title","depth":2,"charIndex":1568},{"text":"visible","id":"visible-4","depth":3,"charIndex":1715},{"text":"titleText","id":"titletext","depth":3,"charIndex":1758},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1802},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1847},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1895},{"text":"grid","id":"grid","depth":2,"charIndex":1945},{"text":"visible","id":"visible-5","depth":3,"charIndex":2040},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2078},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2122}],"frontmatter":{},"version":""},{"title":"secondaryYAxis","content":"#\n\nType: YLinearAxis | YLinearAxis[] | undefined\n\n描述\n\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/dualAxis/secondaryYAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":55},{"text":"max","id":"max","depth":2,"charIndex":127},{"text":"nice","id":"nice","depth":2,"charIndex":201},{"text":"zero","id":"zero","depth":2,"charIndex":306},{"text":"log","id":"log","depth":2,"charIndex":406},{"text":"logBase","id":"logbase","depth":2,"charIndex":445},{"text":"visible","id":"visible","depth":2,"charIndex":487},{"text":"inverse","id":"inverse","depth":2,"charIndex":540},{"text":"label","id":"label","depth":2,"charIndex":611},{"text":"visible","id":"visible-1","depth":3,"charIndex":759},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":802},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":847},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":895},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":945},{"text":"line","id":"line","depth":2,"charIndex":990},{"text":"visible","id":"visible-2","depth":3,"charIndex":1145},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1188},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1232},{"text":"tick","id":"tick","depth":2,"charIndex":1276},{"text":"visible","id":"visible-3","depth":3,"charIndex":1392},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1435},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1481},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1525},{"text":"title","id":"title","depth":2,"charIndex":1568},{"text":"visible","id":"visible-4","depth":3,"charIndex":1715},{"text":"titleText","id":"titletext","depth":3,"charIndex":1758},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1802},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1847},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1895},{"text":"grid","id":"grid","depth":2,"charIndex":1945},{"text":"visible","id":"visible-5","depth":3,"charIndex":2040},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2078},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2122}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/dualAxis/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/dualAxis/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/dualAxis/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/dualAxis/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":35}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/funnel/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"funnel\"\n\n描述\n\n漏斗图\n\n漏斗图，展示单一维度数据的占比关系\n\n示例: 'funnel'","routePath":"/option/funnel/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: LinearColor | undefined\n\n描述\n\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n线性渐变颜色配色方案, 线性渐变颜色配色方案用于定义图表中不同元素的颜色\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']","routePath":"/option/funnel/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":39}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 饼图的数据最终会被转换为1个维度, 1个指标.\n\n示例: [{category:'A', value:30}, {category:'B', value:70}]","routePath":"/option/funnel/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n漏斗图的所有维度会与指标名称(存在多个指标时)合并成一个维度,并作为图例项展示\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/funnel/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":119},{"text":"alias","id":"alias","depth":2,"charIndex":139},{"text":"location","id":"location","depth":2,"charIndex":174}],"frontmatter":{},"version":""},{"title":"Funnel","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n漏斗图\n\n漏斗图，用于展示单一维度数据的占比关系\n\n适用场景:\n\n漏斗图适用场景:\n\n- 适合用来分析具有多个连续、规范化步骤的流程，并清晰地展示在每个环节的数据流失或转化情况\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（指标）\n\n- 所有维度会与指标名称(存在多个指标时)合并成一个维度, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、数据标签、提示信息、占比计算","routePath":"/option/funnel/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/funnel/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":33}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: ColorLegend | undefined\n\n描述\n\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true","routePath":"/option/funnel/legend","lang":"zh-CN","toc":[{"text":"position","id":"position","depth":2,"charIndex":39},{"text":"enable","id":"enable","depth":2,"charIndex":305}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/funnel/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n漏斗图的所有指标会自动合并为一个指标, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/funnel/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":150},{"text":"alias","id":"alias","depth":2,"charIndex":175},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":215},{"text":"format","id":"format","depth":2,"charIndex":509},{"text":"type","id":"type","depth":3,"charIndex":553},{"text":"ratio","id":"ratio","depth":3,"charIndex":634},{"text":"symbol","id":"symbol","depth":3,"charIndex":853},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1073},{"text":"suffix","id":"suffix","depth":3,"charIndex":1126},{"text":"prefix","id":"prefix","depth":3,"charIndex":1167},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1208},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1672},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2191},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2433},{"text":"children","id":"children","depth":2,"charIndex":2580}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/funnel/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/funnel/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/heatmap/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"heatmap\"\n\n描述\n\n热力图\n\n热力图，通过二维矩阵的颜色深浅展示数据的分布和强弱关系\n\n示例: 'heatmap'","routePath":"/option/heatmap/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: LinearColor | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n线性渐变颜色配色方案, 线性渐变颜色配色方案用于定义图表中不同元素的颜色\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']","routePath":"/option/heatmap/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":83}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 热力图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/heatmap/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n热力图的第一个维度被映射到角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/heatmap/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":129},{"text":"alias","id":"alias","depth":2,"charIndex":149},{"text":"location","id":"location","depth":2,"charIndex":184}],"frontmatter":{},"version":""},{"title":"Heatmap","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n热力图类型定义\n\n热力图，通过二维矩阵的颜色深浅展示数据的分布和强弱关系\n\n适用场景:\n\n- 大规模二维数据的密度和强度展示\n\n- 分类与数值的关联分析\n\n- 时间序列与类别的交叉对比\n\n注意\n\n数据要求:\n\n- 至少2个维度字段，用于确定热力图的行和列\n\n- 至少1个数值字段（度量），用于映射颜色深浅\n\n- 支持多个指标时，通常选择一个指标进行颜色映射\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据标签、提示信息、数值缩放","routePath":"/option/heatmap/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/heatmap/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":33}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: ColorLegend | undefined\n\n描述\n\n图例\n\n热力图的颜色图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true","routePath":"/option/heatmap/legend","lang":"zh-CN","toc":[{"text":"position","id":"position","depth":2,"charIndex":84},{"text":"enable","id":"enable","depth":2,"charIndex":350}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/heatmap/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n热力图的指标会自动合并为一个指标, 映射到半径轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/heatmap/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":135},{"text":"alias","id":"alias","depth":2,"charIndex":160},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":200},{"text":"format","id":"format","depth":2,"charIndex":494},{"text":"type","id":"type","depth":3,"charIndex":538},{"text":"ratio","id":"ratio","depth":3,"charIndex":619},{"text":"symbol","id":"symbol","depth":3,"charIndex":838},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1058},{"text":"suffix","id":"suffix","depth":3,"charIndex":1111},{"text":"prefix","id":"prefix","depth":3,"charIndex":1152},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1193},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1657},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2176},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2418},{"text":"children","id":"children","depth":2,"charIndex":2565}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/heatmap/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n热力图的提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/heatmap/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":86}],"frontmatter":{},"version":""},{"title":"","content":"","routePath":"/option/","lang":"zh-CN","toc":[],"frontmatter":{"overview":true},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/line/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/line/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/line/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/line/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/line/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"line\"\n\n描述\n\n折线图\n\n折线图，适用于展示数据随时间或有序类别变化的趋势\n\n示例: 'line'","routePath":"/option/line/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/line/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairLine","content":"#\n\nType: CrosshairLine | undefined\n\n描述\n\n垂直提示线\n\n鼠标移动到图表上时, 显示的垂直提示线\n\n\nvisible#\n\nType: boolean | undefined\n\n\nlineColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/line/crosshairLine","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":68},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":106},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":145},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":185},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":228}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 折线图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/line/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n折线图的第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n示例: [{id: \"month\", alias: \"月份\"}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/line/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":124},{"text":"alias","id":"alias","depth":2,"charIndex":144},{"text":"location","id":"location","depth":2,"charIndex":179}],"frontmatter":{},"version":""},{"title":"Line","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 2个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n折线图类型定义\n\n折线图，适用于展示数据随时间或有序类别变化的趋势，通过线段连接数据点形成趋势线\n\n注意\n\n适用场景:\n\n- 展示时间序列数据的变化趋势\n\n- 比较多个数据系列的趋势对比\n\n- 分析数据的增长或下降规律\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 第一个维度会放至X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据点标记、提示信息、趋势线","routePath":"/option/line/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/line/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/line/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"lineStyle","content":"#\n\nType: LineStyle | LineStyle[] | undefined\n\n描述\n\n线图元样式\n\n线图元样式配置, 用于定义图表的线图元样式, 包括线图元的颜色, 透明度, 曲线等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nlineSmooth#\n\nType: boolean | undefined\n\n描述\n\n折线图是否平滑\n\n折线图是否平滑\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n柱状图颜色\n\n柱状图颜色\n\n\nlineColorOpacity#\n\nType: number | undefined\n\n描述\n\n柱状图颜色透明度\n\n柱状图颜色透明度\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n柱状图边框宽度\n\n柱状图边框宽度","routePath":"/option/line/lineStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":230},{"text":"field","id":"field","depth":3,"charIndex":855},{"text":"operator","id":"operator","depth":3,"charIndex":878},{"text":"op","id":"op","depth":3,"charIndex":925},{"text":"value","id":"value","depth":3,"charIndex":966},{"text":"lineSmooth","id":"linesmooth","depth":2,"charIndex":1020},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1083},{"text":"lineColorOpacity","id":"linecoloropacity","depth":2,"charIndex":1140},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1210}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/line/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n折线图的所有指标会自动合并为一个指标, 映射到Y轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/line/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":136},{"text":"alias","id":"alias","depth":2,"charIndex":161},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":201},{"text":"format","id":"format","depth":2,"charIndex":495},{"text":"type","id":"type","depth":3,"charIndex":539},{"text":"ratio","id":"ratio","depth":3,"charIndex":620},{"text":"symbol","id":"symbol","depth":3,"charIndex":839},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1059},{"text":"suffix","id":"suffix","depth":3,"charIndex":1112},{"text":"prefix","id":"prefix","depth":3,"charIndex":1153},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1194},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1658},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2177},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2419},{"text":"children","id":"children","depth":2,"charIndex":2566}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/line/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"sort","content":"#\n\nType: Sort | undefined\n\n描述\n\n\n示例: sort: { orderBy: 'profit', order: 'asc', } sort: { customOrder:['2019',\n'2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/line/sort","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":127},{"text":"orderBy","id":"orderby","depth":2,"charIndex":192},{"text":"customOrder","id":"customorder","depth":2,"charIndex":279}],"frontmatter":{},"version":""},{"title":"sortLegend","content":"#\n\nType: SortLegend | undefined\n\n描述\n\n\n示例: sortLegend: { orderBy: 'profit', order: 'asc', } sortLegend: {\ncustomOrder:['2019', '2020', '2021'] }\n\n\norder#\n\nType: \"asc\" | \"desc\" | undefined\n\n描述\n\n\n示例: order:'asc'\n\n\norderBy#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * orderBy:'date'\n\n * orderBy:'profit'\n\n\ncustomOrder#\n\nType: string[] | undefined\n\n描述\n","routePath":"/option/line/sortLegend","lang":"zh-CN","toc":[{"text":"order","id":"order","depth":2,"charIndex":145},{"text":"orderBy","id":"orderby","depth":2,"charIndex":210},{"text":"customOrder","id":"customorder","depth":2,"charIndex":297}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/line/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/line/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XBandAxis | undefined\n\n描述\n\nx轴\n\n类目轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabelAutoHide#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动隐藏\n\n2个标签若重叠(间隔小于autoHideGap), 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\n\nlabelAutoHideGap#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动隐藏间隔\n\n若2个文本标签的间隔小于autoHideGap, 则自动隐藏导致重叠的标签. 仅对类目轴生效.\n\nautoHide开启时, 使用autoHide, 设置在autoHideSeparation上\n\nautoHide关闭时, 使用sampling采样, 设置在minGap上\n\n\nlabelAutoRotate#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动旋转\n\n当标签宽度超过轴长度时, 自动旋转标签. 仅对类目轴生效.\n\n\nlabelAutoRotateAngleRange#\n\nType: number[] | undefined\n\n描述\n\n轴标签, 自动旋转角度范围\n\n当自动旋转开启时, 标签旋转角度范围. 仅对类目轴生效.\n\n\nlabelAutoLimit#\n\nType: boolean | undefined\n\n描述\n\n轴标签, 自动限制长度,\n\n当标签宽度超过轴长度时, 超出部分省略号表示, 鼠标悬浮后可见标签, 自动限制标签宽度. 仅对类目轴生效.\n\n\nlabelAutoLimitLength#\n\nType: number | undefined\n\n描述\n\n轴标签, 自动限制长度的最大长度\n\n当标签文本长度超过最大长度时, 超出部分省略号表示, 鼠标悬浮后可见标签. 仅对类目轴生效.\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/line/xAxis","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":81},{"text":"inverse","id":"inverse","depth":2,"charIndex":134},{"text":"labelAutoHide","id":"labelautohide","depth":2,"charIndex":205},{"text":"labelAutoHideGap","id":"labelautohidegap","depth":2,"charIndex":314},{"text":"labelAutoRotate","id":"labelautorotate","depth":2,"charIndex":514},{"text":"labelAutoRotateAngleRange","id":"labelautorotateanglerange","depth":2,"charIndex":606},{"text":"labelAutoLimit","id":"labelautolimit","depth":2,"charIndex":712},{"text":"labelAutoLimitLength","id":"labelautolimitlength","depth":2,"charIndex":830},{"text":"label","id":"label","depth":2,"charIndex":950},{"text":"visible","id":"visible-1","depth":3,"charIndex":1098},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":1141},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":1186},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":1234},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":1284},{"text":"line","id":"line","depth":2,"charIndex":1329},{"text":"visible","id":"visible-2","depth":3,"charIndex":1484},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1527},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1571},{"text":"tick","id":"tick","depth":2,"charIndex":1615},{"text":"visible","id":"visible-3","depth":3,"charIndex":1731},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1774},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1820},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1864},{"text":"title","id":"title","depth":2,"charIndex":1907},{"text":"visible","id":"visible-4","depth":3,"charIndex":2054},{"text":"titleText","id":"titletext","depth":3,"charIndex":2097},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":2141},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":2186},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":2234},{"text":"grid","id":"grid","depth":2,"charIndex":2284},{"text":"visible","id":"visible-5","depth":3,"charIndex":2379},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2417},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2461}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/line/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/pie/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"pie\"\n\n描述\n\n饼图\n\n饼图，展示单一维度数据的占比关系\n\n示例: 'pie'","routePath":"/option/pie/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/pie/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 饼图的数据最终会被转换为1个维度, 1个指标.\n\n示例: [{category:'A', value:30}, {category:'B', value:70}]","routePath":"/option/pie/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n饼图的所有维度会与指标名称(存在多个指标时)合并成一个维度, 映射到角度, 并作为图例项展示\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/pie/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":126},{"text":"alias","id":"alias","depth":2,"charIndex":146},{"text":"location","id":"location","depth":2,"charIndex":181}],"frontmatter":{},"version":""},{"title":"Pie","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n饼图类型定义\n\n饼图，适用于展示单一维度数据的占比关系，通过扇形面积大小表示各类别占比\n\n适用场景:\n\n- 展示分类数据的占比分布\n\n- 强调数据的整体与部分关系\n\n- 类别数量较少（建议不超过6个）的占比分析\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 所有维度会与指标名称(存在多个指标时)合并成一个维度, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、数据标签、提示信息、占比计算","routePath":"/option/pie/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/pie/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/pie/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/pie/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n饼图的所有指标会自动合并为一个指标, 映射到半径轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值占比', format: 'percent'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/pie/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":157},{"text":"alias","id":"alias","depth":2,"charIndex":182},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":222},{"text":"format","id":"format","depth":2,"charIndex":516},{"text":"type","id":"type","depth":3,"charIndex":560},{"text":"ratio","id":"ratio","depth":3,"charIndex":641},{"text":"symbol","id":"symbol","depth":3,"charIndex":860},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1080},{"text":"suffix","id":"suffix","depth":3,"charIndex":1133},{"text":"prefix","id":"prefix","depth":3,"charIndex":1174},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1215},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1679},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2198},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2440},{"text":"children","id":"children","depth":2,"charIndex":2587}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/pie/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/pie/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n","routePath":"/option/pivotTable/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/bodyBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyFontColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/bodyFontColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyFontSize","content":"#\n\nType: number | undefined\n\n描述\n","routePath":"/option/pivotTable/bodyFontSize","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"borderColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/borderColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"pivotTable\"\n\n描述\n\n\n示例: 'pivotTable'","routePath":"/option/pivotTable/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n\n示例: [{region:'华东', product:'A', sales:1000}, {region:'华东', product:'B',\nsales:1500}]","routePath":"/option/pivotTable/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n\n示例: [{id: 'region', alias: '地区', isRow: true}, {id: 'product', alias: '产品',\nisColumn: true}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/pivotTable/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":132},{"text":"alias","id":"alias","depth":2,"charIndex":152},{"text":"location","id":"location","depth":2,"charIndex":187}],"frontmatter":{},"version":""},{"title":"headerBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/headerBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"headerFontColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/headerFontColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"headerFontSize","content":"#\n\nType: number | undefined\n\n描述\n","routePath":"/option/pivotTable/headerFontSize","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"hoverHeaderBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/hoverHeaderBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"hoverHeaderInlineBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/hoverHeaderInlineBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"PivotTable","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n透视表类型定义\n\n透视表，适用于多维度数据交叉分析场景，可灵活配置行、列维度和指标计算方式\n\n适用场景:\n\n- 复杂多维数据统计分析\n\n- 数据钻取与聚合展示\n\n- 业务报表生成与数据探索\n\n注意\n\n数据要求:\n\n- 至少1个行维度 或 1个列维度 或 1个指标\n\n- 数据必须已聚合\n\n- 数据可被分组\n\n默认开启的功能:\n\n- 默认开启行列排序、数据筛选、聚合计算、小计/总计","routePath":"/option/pivotTable/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/pivotTable/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: Measures | undefined\n\n描述\n\n\n示例: [{id: 'sales', alias: '销售额', aggregation: 'sum'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n","routePath":"/option/pivotTable/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":91},{"text":"alias","id":"alias","depth":2,"charIndex":116},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":156},{"text":"format","id":"format","depth":2,"charIndex":450},{"text":"type","id":"type","depth":3,"charIndex":494},{"text":"ratio","id":"ratio","depth":3,"charIndex":575},{"text":"symbol","id":"symbol","depth":3,"charIndex":794},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1014},{"text":"suffix","id":"suffix","depth":3,"charIndex":1067},{"text":"prefix","id":"prefix","depth":3,"charIndex":1108},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1149},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1613},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2132},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2374}],"frontmatter":{},"version":""},{"title":"selectedBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/selectedBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"selectedBorderColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/pivotTable/selectedBorderColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/pivotTable/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/radar/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"radar\"\n\n描述\n\n雷达图\n\n雷达图，通过多轴坐标系展示多维度数据对比关系\n\n示例: 'radar'","routePath":"/option/radar/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/radar/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 玫瑰图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/radar/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n雷达图的第一个维度被映射到角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/radar/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":129},{"text":"alias","id":"alias","depth":2,"charIndex":149},{"text":"location","id":"location","depth":2,"charIndex":184}],"frontmatter":{},"version":""},{"title":"Radar","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n雷达图类型定义\n\n雷达图，适用于多维度数据的对比分析，通过多轴坐标系展示各维度的数值分布\n\n适用场景:\n\n- 多维度数据的综合表现对比\n\n- 多个对象在多个指标上的性能评估\n\n- 分类数据的多维度特征展示\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 第一个维度作为雷达图的各个维度轴，其他维度作为不同的系列进行对比\n\n- 支持多个指标分别作为不同的系列展示\n\n默认开启的功能:\n\n- 默认开启图例、雷达坐标系、数据标签、提示信息、数值缩放","routePath":"/option/radar/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/radar/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/radar/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/radar/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n雷达图的指标会自动合并为一个指标, 映射到半径轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/radar/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":135},{"text":"alias","id":"alias","depth":2,"charIndex":160},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":200},{"text":"format","id":"format","depth":2,"charIndex":494},{"text":"type","id":"type","depth":3,"charIndex":538},{"text":"ratio","id":"ratio","depth":3,"charIndex":619},{"text":"symbol","id":"symbol","depth":3,"charIndex":838},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1058},{"text":"suffix","id":"suffix","depth":3,"charIndex":1111},{"text":"prefix","id":"prefix","depth":3,"charIndex":1152},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1193},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1657},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2176},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2418},{"text":"children","id":"children","depth":2,"charIndex":2565}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/radar/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/radar/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/rose/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"rose\"\n\n描述\n\n堆叠玫瑰图\n\n堆叠玫瑰图，通过极坐标系展示多维度数据对比关系\n\n示例: 'rose'","routePath":"/option/rose/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/rose/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 玫瑰图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/rose/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n玫瑰图的第一个维度被映射到角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/rose/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":129},{"text":"alias","id":"alias","depth":2,"charIndex":149},{"text":"location","id":"location","depth":2,"charIndex":184}],"frontmatter":{},"version":""},{"title":"Rose","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n堆叠玫瑰图类型定义\n\n堆叠玫瑰图，适用于多维度数据对比场景，通过极坐标系下的扇形弧度和半径展示数据大小\n\n适用场景:\n\n- 多维度数据的分布对比\n\n- 周期性数据的强弱比较\n\n- 分类数据的数值与占比同时展示\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 第一个维度会放至角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、极坐标系、数据标签、提示信息、数值缩放","routePath":"/option/rose/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/rose/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/rose/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/rose/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n玫瑰图的指标会自动合并为一个指标, 映射到半径轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/rose/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":135},{"text":"alias","id":"alias","depth":2,"charIndex":160},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":200},{"text":"format","id":"format","depth":2,"charIndex":494},{"text":"type","id":"type","depth":3,"charIndex":538},{"text":"ratio","id":"ratio","depth":3,"charIndex":619},{"text":"symbol","id":"symbol","depth":3,"charIndex":838},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1058},{"text":"suffix","id":"suffix","depth":3,"charIndex":1111},{"text":"prefix","id":"prefix","depth":3,"charIndex":1152},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1193},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1657},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2176},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2418},{"text":"children","id":"children","depth":2,"charIndex":2565}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/rose/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/rose/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/roseParallel/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"roseParallel\"\n\n描述\n\n分组玫瑰图\n\n分组玫瑰图，通过极坐标系展示多维度数据对比关系\n\n示例: 'roseParallel'","routePath":"/option/roseParallel/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/roseParallel/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 玫瑰图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/roseParallel/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n玫瑰图的第一个维度被映射到角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示.\n\n示例: [{id: 'category', alias: '类别'}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/roseParallel/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":129},{"text":"alias","id":"alias","depth":2,"charIndex":149},{"text":"location","id":"location","depth":2,"charIndex":184}],"frontmatter":{},"version":""},{"title":"RoseParallel","content":"#\n\n推荐\n\n- 推荐字段配置: 1个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n分组玫瑰图类型定义\n\n分组玫瑰图，适用于多维度数据对比场景，通过极坐标系下的扇形弧度和半径展示数据大小\n\n适用场景:\n\n- 多维度数据的分布对比\n\n- 周期性数据的强弱比较\n\n- 分类数据的数值与占比同时展示\n\n注意\n\n数据要求:\n\n- 至少1个数值字段（度量）\n\n- 第一个维度会放至角度轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n- 所有指标会自动合并为一个指标\n\n默认开启的功能:\n\n- 默认开启图例、极坐标系、数据标签、提示信息、数值缩放","routePath":"/option/roseParallel/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/roseParallel/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/roseParallel/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/roseParallel/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n玫瑰图的指标会自动合并为一个指标, 映射到半径轴, 存在多个指标时, 指标名称会与其余维度合并, 作为图例项展示.\n\n示例: [{id: 'value', alias: '数值'}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/roseParallel/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":135},{"text":"alias","id":"alias","depth":2,"charIndex":160},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":200},{"text":"format","id":"format","depth":2,"charIndex":494},{"text":"type","id":"type","depth":3,"charIndex":538},{"text":"ratio","id":"ratio","depth":3,"charIndex":619},{"text":"symbol","id":"symbol","depth":3,"charIndex":838},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1058},{"text":"suffix","id":"suffix","depth":3,"charIndex":1111},{"text":"prefix","id":"prefix","depth":3,"charIndex":1152},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1193},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1657},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2176},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2418},{"text":"children","id":"children","depth":2,"charIndex":2565}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/roseParallel/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/roseParallel/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"annotationArea","content":"#\n\nType: AnnotationArea | AnnotationArea[] | undefined\n\n描述\n\n标注区域\n\n标注区域配置, 根据选择的数据, 定义图表的标注区域, 包括标注区域的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"left\" | \"top\" | \"topLeft\" | \"topRight\" | \"right\" | \"bottom\" |\n\"bottomLeft\" | \"bottomRight\" | undefined\n\n描述\n\n\n示例: 'top'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注面中间, 确保显示在图表的可见区域\n\n建议设置为'center', 这样可以确保文本在标注面的中间\n\nright: 文本在标注面的左侧, 文本的右侧边缘对齐标注面\n\nleft: 文本在标注面的右侧, 文本的左侧边缘对齐标注面\n\ncenter: 文本在标注面的中心, 文本的中心对齐标注面\n\n示例: 'center' 文本在标注面的中间\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注面底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注面的底部, 文本的顶部边缘对齐标注面\n\nmiddle: 文本在标注面的中心, 文本的中心对齐标注面\n\nbottom: 文本在标注面的顶部, 文本的底部边缘对齐标注面\n\n示例: 'top' 文本在标注面的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n背景边框颜色\n\n背景边框颜色\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n背景边框圆角\n\n背景边框圆角\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nareaColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaColorOpacity#\n\nType: number | undefined\n\n描述\n\n\n示例: 0.5\n\n\nareaBorderColor#\n\nType: number | undefined\n\n描述\n\n\n示例: 'red'\n\n\nareaBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nareaBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nouterPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 0","routePath":"/option/scatter/annotationArea","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":111},{"text":"field","id":"field","depth":3,"charIndex":156},{"text":"operator","id":"operator","depth":3,"charIndex":179},{"text":"op","id":"op","depth":3,"charIndex":226},{"text":"value","id":"value","depth":3,"charIndex":267},{"text":"text","id":"text","depth":2,"charIndex":321},{"text":"textPosition","id":"textposition","depth":2,"charIndex":383},{"text":"textColor","id":"textcolor","depth":2,"charIndex":526},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":581},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":636},{"text":"textAlign","id":"textalign","depth":2,"charIndex":694},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":959},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1227},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1294},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1359},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1445},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1512},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1595},{"text":"areaColor","id":"areacolor","depth":2,"charIndex":1658},{"text":"areaColorOpacity","id":"areacoloropacity","depth":2,"charIndex":1713},{"text":"areaBorderColor","id":"areabordercolor","depth":2,"charIndex":1773},{"text":"areaBorderWidth","id":"areaborderwidth","depth":2,"charIndex":1834},{"text":"areaBorderRadius","id":"areaborderradius","depth":2,"charIndex":1891},{"text":"outerPadding","id":"outerpadding","depth":2,"charIndex":1949}],"frontmatter":{},"version":""},{"title":"annotationHorizontalLine","content":"#\n\nType: AnnotationHorizontalLine | AnnotationHorizontalLine[] | undefined\n\n描述\n\n标注水平线\n\n标注水平线配置, 根据选择的数据, 定义图表的标注水平线, 包括标注水平线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nyValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n文本位置\n\n标注线的标签位置（标签相对线的相对位置）。\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(水平)标注线的终点\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(水平)标注线的终点\n\ncenter: 文本在参考线的中心, 文本的中心对齐(水平)标注线的终点\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(水平)标注线\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(水平)标注线\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(水平)标注线\n\n示例: 'top'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n背景边框宽度\n\n背景边框宽度\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n线可见\n\n线可见\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'","routePath":"/option/scatter/annotationHorizontalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":135},{"text":"field","id":"field","depth":3,"charIndex":192},{"text":"operator","id":"operator","depth":3,"charIndex":215},{"text":"op","id":"op","depth":3,"charIndex":262},{"text":"value","id":"value","depth":3,"charIndex":303},{"text":"yValue","id":"yvalue","depth":2,"charIndex":357},{"text":"text","id":"text","depth":2,"charIndex":429},{"text":"textPosition","id":"textposition","depth":2,"charIndex":491},{"text":"textColor","id":"textcolor","depth":2,"charIndex":672},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":727},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":782},{"text":"textAlign","id":"textalign","depth":2,"charIndex":840},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1084},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1326},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1393},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1458},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1529},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1611},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1679},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1742},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1808},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1863},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1914}],"frontmatter":{},"version":""},{"title":"annotationPoint","content":"#\n\nType: AnnotationPoint | AnnotationPoint[] | undefined\n\n描述\n\n标注点\n\n标注点配置, 根据选择的数据, 定义图表的标注点, 包括标注点的位置, 格式, 样式等.\n\n\nselector#\n\nType: Selector | Selectors\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 设置为right, 文本显示在标注点左侧, 确保显示在图表的可见区域\n\n建议设置为'right', 这样可以确保文本在标注点的左侧\n\nright: 文本在标注点的左侧, 文本的右侧边缘对齐标注点\n\nleft: 文本在标注点的右侧, 文本的左侧边缘对齐标注点\n\ncenter: 文本在标注点的中心, 文本的中心对齐标注点\n\n示例: 'right' 文本在标注点的左侧\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 设置为top, 文本显示在标注点底部, 确保显示在图表的可见区域\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在标注点的底部, 文本的顶部边缘对齐标注点\n\nmiddle: 文本在标注点的中心, 文本的中心对齐标注点\n\nbottom: 文本在标注点的顶部, 文本的底部边缘对齐标注点\n\n示例: 'top' 文本在标注点的底部\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\noffsetY#\n\nType: number | undefined\n\n描述\n\n标注点整体在Y方向的偏移像素距离, 当标注点在图表上方(数值较大时)时, 建议设置为正值, 标注点在图表下方(数值较小时)时, 建议设置为负值.\n\n负值则整体向上偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向上偏移10像素\n\n正值则整体向下偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向下偏移10像素\n\n示例: offsetY: 5, 标注点整体向下偏移5像素\n\n\noffsetX#\n\nType: number | undefined\n\n描述\n\n标注点整体在X方向的偏移像素距离, 当标注点在图表左侧(类目轴起点)时, 建议设置为正值, 标注点在图表右侧(类目轴终点)时, 建议设置为负值.\n\n负值则整体向左偏移, 例如设置为-10, 则整个标注点组件包括文本、文本背景, 一起向左偏移10像素\n\n正值则整体向右偏移, 例如设置为10, 则整个标注点组件包括文本、文本背景, 一起向右偏移10像素\n\n示例: offsetX: 5, 标注点整体向右偏移5像素","routePath":"/option/scatter/annotationPoint","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":113},{"text":"field","id":"field","depth":3,"charIndex":158},{"text":"operator","id":"operator","depth":3,"charIndex":181},{"text":"op","id":"op","depth":3,"charIndex":228},{"text":"value","id":"value","depth":3,"charIndex":269},{"text":"text","id":"text","depth":2,"charIndex":323},{"text":"textColor","id":"textcolor","depth":2,"charIndex":385},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":440},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":495},{"text":"textAlign","id":"textalign","depth":2,"charIndex":553},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":816},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1084},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1151},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1216},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1287},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1354},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1422},{"text":"offsetY","id":"offsety","depth":2,"charIndex":1485},{"text":"offsetX","id":"offsetx","depth":2,"charIndex":1733}],"frontmatter":{},"version":""},{"title":"annotationVerticalLine","content":"#\n\nType: AnnotationVerticalLine | AnnotationVerticalLine[] | undefined\n\n描述\n\n标注垂直线\n\n标注垂直线配置, 根据选择的数据, 定义图表的标注垂直线, 包括标注垂直线的位置, 样式等.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\nxValue#\n\nType: string | number | (string | number)[] | undefined\n\n描述\n\n\n\ntext#\n\nType: string | string[] | undefined\n\n描述\n\n\n示例: '标注文本'\n\n\ntextPosition#\n\nType: \"outsideStart\" | \"outsideEnd\" | \"outsideMiddle\" | \"insideStart\" |\n\"insideMiddle\" | \"insideEnd\" | undefined\n\n描述\n\n\n示例: 'outsideEnd'\n\n\ntextColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: 12\n\n\ntextFontWeight#\n\nType: number | undefined\n\n描述\n\n\n示例: 400\n\n\ntextAlign#\n\nType: \"left\" | \"right\" | \"center\" | undefined\n\n描述\n\n文本对齐方式, 一般情况下, 无需设置\n\n建议设置为'right', 这样可以确保文本在标注线的左侧\n\nright: 文本在参考线的左侧, 文本的右侧边缘对齐(垂直)标注线\n\nleft: 文本在参考线的右侧, 文本的左侧边缘对齐(垂直)标注线\n\ncenter: 文本在参考线的中心, 文本的中心对齐(垂直)标注线\n\n示例: 'right'\n\n\ntextBaseline#\n\nType: \"top\" | \"bottom\" | \"middle\" | undefined\n\n描述\n\n文本垂直对齐方式, 一般情况下, 无需设置\n\n建议设置为'top', 这样可以确保文本完整的显示在图表的可见区域\n\ntop: 文本在参考线的底部, 文本的顶部边缘对齐(垂直)标注线的终点\n\nmiddle: 文本在参考线的中心, 文本的中心对齐(垂直)标注线的终点\n\nbottom: 文本在参考线的顶部, 文本的底部边缘对齐(垂直)标注线的终点\n\n示例: 'top'\n\n\nlineVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\nlineStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n\n示例: 'solid'\n\n\ntextBackgroundVisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ntextBackgroundColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderColor#\n\nType: string | undefined\n\n描述\n\n\n示例: 'red'\n\n\ntextBackgroundBorderWidth#\n\nType: number | undefined\n\n描述\n\n\n示例: 2\n\n\ntextBackgroundBorderRadius#\n\nType: number | undefined\n\n描述\n\n\n示例: 4\n\n\ntextBackgroundPadding#\n\nType: number | undefined\n\n描述\n\n\n示例: 4","routePath":"/option/scatter/annotationVerticalLine","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":131},{"text":"field","id":"field","depth":3,"charIndex":188},{"text":"operator","id":"operator","depth":3,"charIndex":211},{"text":"op","id":"op","depth":3,"charIndex":258},{"text":"value","id":"value","depth":3,"charIndex":299},{"text":"xValue","id":"xvalue","depth":2,"charIndex":353},{"text":"text","id":"text","depth":2,"charIndex":425},{"text":"textPosition","id":"textposition","depth":2,"charIndex":487},{"text":"textColor","id":"textcolor","depth":2,"charIndex":640},{"text":"textFontSize","id":"textfontsize","depth":2,"charIndex":695},{"text":"textFontWeight","id":"textfontweight","depth":2,"charIndex":750},{"text":"textAlign","id":"textalign","depth":2,"charIndex":808},{"text":"textBaseline","id":"textbaseline","depth":2,"charIndex":1043},{"text":"lineVisible","id":"linevisible","depth":2,"charIndex":1294},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":1351},{"text":"lineWidth","id":"linewidth","depth":2,"charIndex":1406},{"text":"lineStyle","id":"linestyle","depth":2,"charIndex":1457},{"text":"textBackgroundVisible","id":"textbackgroundvisible","depth":2,"charIndex":1537},{"text":"textBackgroundColor","id":"textbackgroundcolor","depth":2,"charIndex":1604},{"text":"textBackgroundBorderColor","id":"textbackgroundbordercolor","depth":2,"charIndex":1669},{"text":"textBackgroundBorderWidth","id":"textbackgroundborderwidth","depth":2,"charIndex":1740},{"text":"textBackgroundBorderRadius","id":"textbackgroundborderradius","depth":2,"charIndex":1807},{"text":"textBackgroundPadding","id":"textbackgroundpadding","depth":2,"charIndex":1875}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n\n图表的背景颜色\n\n背景颜色可以是颜色字符串, 例如'red', 'blue', 也可以是hex, rgb或rgba'#ff0000', 'rgba(255,0,0,0.5)'","routePath":"/option/scatter/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"scatter\"\n\n描述\n\n散点图\n\n散点图，适用于展示数据的分布情况，通过点的位置表示数据的数值\n\n示例: 'scatter'","routePath":"/option/scatter/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"color","content":"#\n\nType: Color | undefined\n\n描述\n\n颜色\n\n颜色配置, 用于定义图表的颜色方案, 包括颜色列表, 颜色映射, 颜色渐变等.\n\n\ncolorScheme#\n\nType: string[] | undefined\n\n描述\n\n\n示例:\n['#FFCDD2,#F8BBD0,#E1BEE7,#D1C4E9,#C5CAE9,#BBDEFB,#B3E5FC,#B2EBF2,#B2DFDB,#C8E6C\n9,#DCEDC8,#F0F4C3,#FFF9C4,#FFECB3,#FFE0B2']\n\n\ncolorMapping#\n\nType: Record<string, string> | undefined\n\n描述\n\n\n示例: { 'profit': 'red', 'sales': 'blue', }","routePath":"/option/scatter/color","lang":"zh-CN","toc":[{"text":"colorScheme","id":"colorscheme","depth":2,"charIndex":77},{"text":"colorMapping","id":"colormapping","depth":2,"charIndex":255}],"frontmatter":{},"version":""},{"title":"crosshairLine","content":"#\n\nType: CrosshairLine | undefined\n\n描述\n\n垂直提示线\n\n鼠标移动到图表上时, 显示的垂直提示线\n\n\nvisible#\n\nType: boolean | undefined\n\n\nlineColor#\n\nType: string | undefined\n\n\nlabelColor#\n\nType: string | undefined\n\n\nlabelVisible#\n\nType: boolean | undefined\n\n\nlabelBackgroundColor#\n\nType: string | undefined","routePath":"/option/scatter/crosshairLine","lang":"zh-CN","toc":[{"text":"visible","id":"visible","depth":2,"charIndex":68},{"text":"lineColor","id":"linecolor","depth":2,"charIndex":106},{"text":"labelColor","id":"labelcolor","depth":2,"charIndex":145},{"text":"labelVisible","id":"labelvisible","depth":2,"charIndex":185},{"text":"labelBackgroundColor","id":"labelbackgroundcolor","depth":2,"charIndex":228}],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n数据集\n\n符合TidyData规范的且已经聚合的数据集，用于定义图表的数据来源和结构, 用户输入的数据集并不需要进行任何处理, VSeed带有强大的数据重塑功能,\n会自行进行数据重塑, 折线图的数据最终会被转换为2个维度, 1个指标.\n\n示例: [{month:'1月', value:100}, {month:'2月', value:150}, {month:'3月', value:120}]","routePath":"/option/scatter/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: Dimensions | undefined\n\n描述\n\n维度\n\n散点图的第一个维度被映射到X轴, 其余维度会与指标名称(存在多个指标时)合并, 作为图例项展示\n\n示例: [{id: \"month\", alias: \"月份\"}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/scatter/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":124},{"text":"alias","id":"alias","depth":2,"charIndex":144},{"text":"location","id":"location","depth":2,"charIndex":179}],"frontmatter":{},"version":""},{"title":"Scatter","content":"#\n\n推荐\n\n- 推荐字段配置: 2个指标, 1个维度\n\n- 支持数据重塑: 至少1个指标, 0个维度\n\n描述\n\n散点图类型定义\n\n散点图，适用于展示数据的分布情况，通过点的位置表示数据的数值\n\n适用场景:\n\n- 分析数据的分布特征, 如数据的中心趋势, 分布范围, 异常值等\n\n注意\n\n数据要求:\n\n- 至少2个数值字段（度量）\n\n- 第一个指标字段会放至X轴, 其余指标会进行合并, 映射至Y轴\n\n- 指标名称和维度名称会合并, 作为图例项展示\n\n默认开启的功能:\n\n- 默认开启图例、坐标轴、数据点标记、提示信息、趋势线","routePath":"/option/scatter/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"label","content":"#\n\nType: Label | undefined\n\n描述\n\n标签\n\n标签配置, 用于定义图表的数据标签, 包括数据标签的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/scatter/label","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":76}],"frontmatter":{},"version":""},{"title":"legend","content":"#\n\nType: Legend | undefined\n\n描述\n\n图例\n\n图例配置, 用于定义图表的图例, 包括图例的位置, 格式, 样式等.\n\n\nenable#\n\nType: boolean | undefined\n\n描述\n\n\n示例: enable: true\n\n\nborder#\n\nType: boolean | undefined\n\n描述\n\n\n示例: border: true\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n示例: labelFontSize: 10\n\n\nlabelFontColor#\n\nType: string | undefined\n\n描述\n\n\n示例: labelFontColor: '#212121'\n\n\nlabelFontWeight#\n\nType: string | number | undefined\n\n描述\n\n\n示例: labelFontWeight: 400\n\n\nshapeType#\n\nType: \"circle\" | \"cross\" | \"diamond\" | \"square\" | \"arrow\" | \"arrow2Left\" |\n\"arrow2Right\" | \"wedge\" | \"thinTriangle\" | \"triangle\" | \"triangleUp\" |\n\"triangleDown\" | \"triangleRight\" | \"triangleLeft\" | \"stroke\" | \"star\" | \"wye\" |\n\"rect\" | \"arrowLeft\" | \"arrowRight\" | \"rectRound\" | \"roundLine\" | undefined\n\n描述\n\n\n示例: shapeType: 'circle'\n\n\nposition#\n\nType: \"left\" | \"leftTop\" | \"leftBottom\" | \"lt\" | \"lb\" | \"top\" | \"topLeft\" |\n\"topRight\" | \"tl\" | \"tr\" | \"right\" | \"rightTop\" | \"rightBottom\" | \"rt\" | \"rb\" |\n\"bottom\" | \"bottomLeft\" | \"bottomRight\" | \"bl\" | \"br\" | undefined\n\n描述\n\n\n示例: position: 'rightTop'\n\n\nmaxSize#\n\nType: number | undefined\n\n描述\n\n存在大量图例时, 最大列数 或 图例最大行数\n\n如果position为水平方向(bottom, bottomLeft, bottomRight, bl, br, top, topLeft, topRight,\ntl, tr), maxSize控制显示的列数\n\n如果position为垂直方向(left, leftTop, leftBottom, lt, lb, right, rightTop, rightBottom,\nrt, rb), maxSize控制显示的行数\n\n示例: maxSize: 2","routePath":"/option/scatter/legend","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":73},{"text":"border","id":"border","depth":2,"charIndex":133},{"text":"labelFontSize","id":"labelfontsize","depth":2,"charIndex":193},{"text":"labelFontColor","id":"labelfontcolor","depth":2,"charIndex":264},{"text":"labelFontWeight","id":"labelfontweight","depth":2,"charIndex":344},{"text":"shapeType","id":"shapetype","depth":2,"charIndex":429},{"text":"position","id":"position","depth":2,"charIndex":775},{"text":"maxSize","id":"maxsize","depth":2,"charIndex":1041}],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n\n语言\n\n图表语言配置, 支持'zh-CN'与'en-US'两种语言, 另外可以调用 intl.setLocale('zh-CN') 方法设置语言","routePath":"/option/scatter/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n指标\n\n散点图的第一个指标字段会放至X轴, 其余指标会进行合并, 映射至Y轴\n\n示例: [{id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/scatter/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":112},{"text":"alias","id":"alias","depth":2,"charIndex":137},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":177},{"text":"format","id":"format","depth":2,"charIndex":471},{"text":"type","id":"type","depth":3,"charIndex":515},{"text":"ratio","id":"ratio","depth":3,"charIndex":596},{"text":"symbol","id":"symbol","depth":3,"charIndex":815},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":1035},{"text":"suffix","id":"suffix","depth":3,"charIndex":1088},{"text":"prefix","id":"prefix","depth":3,"charIndex":1129},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1170},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1634},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2153},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2395},{"text":"children","id":"children","depth":2,"charIndex":2542}],"frontmatter":{},"version":""},{"title":"pointStyle","content":"#\n\nType: PointStyle | PointStyle[] | undefined\n\n描述\n\n点图元样式\n\n点图元样式配置, 用于定义图表的点图元样式, 包括点图元的颜色, 边框等.\n\n支持全局样式或条件样式配置\n\n数据筛选器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n\nselector#\n\nType: Selector | Selectors | undefined\n\n描述\n\n数据选择器\n\n若配置selector, 提供数值 selector, 局部数据 selector, 条件维度 selector, 条件指标 selector\n共四类数据匹配能力\n\n若未配置selector, 则样式全局生效.\n\n示例: 数值选择器 selector = \"tool\" selector = [\"tool\", \"book\"] selector = 100 selector\n= [100, 200]\n\n局部数据选择器 selector = { profit: 100 } selector = [{ profit: 100 }, { profit: 200 }]\n\n条件维度选择器 selector = { field: 'category', operator: 'in', value: 'tool' } selector\n= { field: 'category', operator: 'not in', value: 'book' }\n\n条件指标选择器 selector = { field: 'profit', operator: '>=', value: 100 } selector = {\nfield: 'profit', operator: 'between' value: [100, 300] }\n\n\nfield#\n\nType: string\n\n\noperator#\n\nType: \"in\" | \"not in\" | undefined\n\n\nop#\n\nType: \"in\" | \"not in\" | undefined\n\n\nvalue#\n\nType: string | number | (string | number)[]\n\n\npointSize#\n\nType: number | undefined\n\n描述\n\n点大小\n\n点大小\n\n\npointColor#\n\nType: string | undefined\n\n描述\n\n点图元颜色\n\n点图元颜色\n\n\npointColorOpacity#\n\nType: number | undefined\n\n描述\n\n点图元颜色透明度\n\n点图元颜色透明度\n\n\npointBorderColor#\n\nType: string | undefined\n\n描述\n\n点图元边框颜色\n\n点图元边框颜色\n\n\npointBorderWidth#\n\nType: number | undefined\n\n描述\n\n点图元边框宽度\n\n点图元边框宽度\n\n\npointBorderStyle#\n\nType: \"solid\" | \"dashed\" | \"dotted\" | undefined\n\n描述\n\n点图元边框样式\n\n点图元边框样式\n\n示例: solid\n\ndashed\n\ndotted","routePath":"/option/scatter/pointStyle","lang":"zh-CN","toc":[{"text":"selector","id":"selector","depth":2,"charIndex":227},{"text":"field","id":"field","depth":3,"charIndex":852},{"text":"operator","id":"operator","depth":3,"charIndex":875},{"text":"op","id":"op","depth":3,"charIndex":922},{"text":"value","id":"value","depth":3,"charIndex":963},{"text":"pointSize","id":"pointsize","depth":2,"charIndex":1017},{"text":"pointColor","id":"pointcolor","depth":2,"charIndex":1070},{"text":"pointColorOpacity","id":"pointcoloropacity","depth":2,"charIndex":1128},{"text":"pointBorderColor","id":"pointbordercolor","depth":2,"charIndex":1199},{"text":"pointBorderWidth","id":"pointborderwidth","depth":2,"charIndex":1267},{"text":"pointBorderStyle","id":"pointborderstyle","depth":2,"charIndex":1335}],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n图表的主题, 主题是优先级较低的功能配置, 包含所有图表类型共用的通用配置, 与单类图表类型共用的图表配置\n\n内置light与dark两种主题, 用户可以通过Builder自定义主题\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/scatter/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"tooltip","content":"#\n\nType: Tooltip | undefined\n\n描述\n\n提示信息\n\n提示信息配置, 用于定义图表的提示信息, 包括提示信息的位置, 格式, 样式等.\n\n\nenable#\n\nType: false | true\n\n描述\n","routePath":"/option/scatter/tooltip","lang":"zh-CN","toc":[{"text":"enable","id":"enable","depth":2,"charIndex":82}],"frontmatter":{},"version":""},{"title":"xAxis","content":"#\n\nType: XLinearAxis | undefined\n\n描述\n\nx轴\n\n数值轴, x轴配置, 用于定义图表的x轴, 包括x轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/scatter/xAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"yAxis","content":"#\n\nType: YLinearAxis | undefined\n\n描述\n\ny轴\n\n数值轴, y轴配置, 用于定义图表的y轴, 包括y轴的位置, 格式, 样式等.\n\n\nmin#\n\nType: number | undefined\n\n描述\n\n轴的最小值\n\n优先级高于 nice 与 zero\n\n示例: 100\n\n\nmax#\n\nType: number | undefined\n\n描述\n\n轴的最大值\n\n优先级高于 nice 与 zero\n\n示例: 10000\n\n\nnice#\n\nType: boolean | undefined\n\n描述\n\n是否自动调整轴的刻度间隔，使刻度标签更易读\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nzero#\n\nType: boolean | undefined\n\n描述\n\n是否在坐标轴上强制显示 0 值,\n\n当配置了 min 和 max, 该配置项失效, 仅对数值轴生效\n\n示例: true\n\n\nlog#\n\nType: boolean | undefined\n\n描述\n\n\n\nlogBase#\n\nType: number | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n示例: true\n\n\ninverse#\n\nType: boolean | undefined\n\n描述\n\n轴是否反向展示\n\n仅对数值轴生效\n\n示例: false\n\n\nlabel#\n\nType: { visible?: boolean; labelColor?: string; labelFontSize?: number;\nlabelFontWeight?: number; labelAngle?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlabelColor#\n\nType: string | undefined\n\n描述\n\n\n\nlabelFontSize#\n\nType: number | undefined\n\n描述\n\n\n\nlabelFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\nlabelAngle#\n\nType: number | undefined\n\n描述\n\n\n\nline#\n\nType: { visible?: boolean; lineColor?: string; lineWidth?: number; } | undefined\n\n描述\n\n\n示例: { visible: true, lineColor: '#ffeecc', lineWidth: 2, }\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\nlineColor#\n\nType: string | undefined\n\n描述\n\n\n\nlineWidth#\n\nType: number | undefined\n\n描述\n\n\n\ntick#\n\nType: { visible?: boolean; tickInside?: boolean; tickColor?: string; tickSize?:\nnumber; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickInside#\n\nType: boolean | undefined\n\n描述\n\n\n\ntickColor#\n\nType: string | undefined\n\n描述\n\n\n\ntickSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitle#\n\nType: { visible?: boolean; titleText?: string; titleColor?: string;\ntitleFontSize?: number; titleFontWeight?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n描述\n\n\n\ntitleText#\n\nType: string | undefined\n\n描述\n\n\n\ntitleColor#\n\nType: string | undefined\n\n描述\n\n\n\ntitleFontSize#\n\nType: number | undefined\n\n描述\n\n\n\ntitleFontWeight#\n\nType: number | undefined\n\n描述\n\n\n\ngrid#\n\nType: { visible?: boolean; gridColor?: string; gridWidth?: number; } | undefined\n\n描述\n\n\n\nvisible#\n\nType: boolean | undefined\n\n\ngridColor#\n\nType: string | undefined\n\n描述\n\n\n\ngridWidth#\n\nType: number | undefined\n\n描述\n","routePath":"/option/scatter/yAxis","lang":"zh-CN","toc":[{"text":"min","id":"min","depth":2,"charIndex":83},{"text":"max","id":"max","depth":2,"charIndex":155},{"text":"nice","id":"nice","depth":2,"charIndex":229},{"text":"zero","id":"zero","depth":2,"charIndex":334},{"text":"log","id":"log","depth":2,"charIndex":434},{"text":"logBase","id":"logbase","depth":2,"charIndex":473},{"text":"visible","id":"visible","depth":2,"charIndex":515},{"text":"inverse","id":"inverse","depth":2,"charIndex":568},{"text":"label","id":"label","depth":2,"charIndex":639},{"text":"visible","id":"visible-1","depth":3,"charIndex":787},{"text":"labelColor","id":"labelcolor","depth":3,"charIndex":830},{"text":"labelFontSize","id":"labelfontsize","depth":3,"charIndex":875},{"text":"labelFontWeight","id":"labelfontweight","depth":3,"charIndex":923},{"text":"labelAngle","id":"labelangle","depth":3,"charIndex":973},{"text":"line","id":"line","depth":2,"charIndex":1018},{"text":"visible","id":"visible-2","depth":3,"charIndex":1173},{"text":"lineColor","id":"linecolor","depth":3,"charIndex":1216},{"text":"lineWidth","id":"linewidth","depth":3,"charIndex":1260},{"text":"tick","id":"tick","depth":2,"charIndex":1304},{"text":"visible","id":"visible-3","depth":3,"charIndex":1420},{"text":"tickInside","id":"tickinside","depth":3,"charIndex":1463},{"text":"tickColor","id":"tickcolor","depth":3,"charIndex":1509},{"text":"tickSize","id":"ticksize","depth":3,"charIndex":1553},{"text":"title","id":"title","depth":2,"charIndex":1596},{"text":"visible","id":"visible-4","depth":3,"charIndex":1743},{"text":"titleText","id":"titletext","depth":3,"charIndex":1786},{"text":"titleColor","id":"titlecolor","depth":3,"charIndex":1830},{"text":"titleFontSize","id":"titlefontsize","depth":3,"charIndex":1875},{"text":"titleFontWeight","id":"titlefontweight","depth":3,"charIndex":1923},{"text":"grid","id":"grid","depth":2,"charIndex":1973},{"text":"visible","id":"visible-5","depth":3,"charIndex":2068},{"text":"gridColor","id":"gridcolor","depth":3,"charIndex":2106},{"text":"gridWidth","id":"gridwidth","depth":3,"charIndex":2150}],"frontmatter":{},"version":""},{"title":"backgroundColor","content":"#\n\nType: BackgroundColor\n\n描述\n","routePath":"/option/table/backgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/bodyBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyFontColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/bodyFontColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"bodyFontSize","content":"#\n\nType: number | undefined\n\n描述\n","routePath":"/option/table/bodyFontSize","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"borderColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/borderColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"chartType","content":"#\n\nType: \"table\"\n\n描述\n\n\n示例: 'table'","routePath":"/option/table/chartType","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dataset","content":"#\n\nType: Record<string | number, any>[]\n\n描述\n\n\n示例: [{id: 1, name: \"A\", value: 100}, {id: 2, name: \"B\", value: 200}]","routePath":"/option/table/dataset","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"dimensions","content":"#\n\nType: DimensionTree | undefined\n\n描述\n\n\n示例: [{id: \"name\", alias: \"名称\"}]\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined\n\n\nchildren#\n\nType: (Dimension | DimensionGroup)[] | undefined\n\n\nid#\n\nType: string\n\n\nalias#\n\nType: string | undefined\n\n\nlocation#\n\nType: \"dimension\" | \"rowDimension\" | \"columnDimension\" | undefined","routePath":"/option/table/dimensions","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":74},{"text":"alias","id":"alias","depth":2,"charIndex":94},{"text":"location","id":"location","depth":2,"charIndex":129},{"text":"children","id":"children","depth":2,"charIndex":209},{"text":"id","id":"id-1","depth":3,"charIndex":271},{"text":"alias","id":"alias-1","depth":3,"charIndex":291},{"text":"location","id":"location-1","depth":3,"charIndex":326}],"frontmatter":{},"version":""},{"title":"headerBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/headerBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"headerFontColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/headerFontColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"headerFontSize","content":"#\n\nType: number | undefined\n\n描述\n","routePath":"/option/table/headerFontSize","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"hoverHeaderBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/hoverHeaderBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"hoverHeaderInlineBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/hoverHeaderInlineBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"Table","content":"#\n\n推荐\n\n- 推荐字段配置: 任意个指标, 任意个维度\n\n- 支持数据重塑: 至少任意个指标, 任意个维度\n\n描述\n\n表格，适用于详细数据展示场景，行列分明，便于查看具体数值\n\n适用场景:\n\n- 需要展示详细数据明细\n\n- 数据项需要精确比对\n\n- 展示多维度数据属性\n\n注意\n\n数据要求:\n\n- 至少1个维度字段\n\n- 至少1个度量字段\n\n- 维度字段会作为表格的列标题\n\n默认开启的功能:\n\n- 默认开启排序、筛选、分页功能","routePath":"/option/table/","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"locale","content":"#\n\nType: Locale | undefined\n\n描述\n","routePath":"/option/table/locale","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"measures","content":"#\n\nType: MeasureTree | undefined\n\n描述\n\n\n示例: [{id: \"value\", alias: \"数值\"}]\n\n\nid#\n\nType: string\n\n描述\n\n\n\nalias#\n\nType: string | undefined\n\n描述\n\n\n\nautoFormat#\n\nType: boolean | undefined\n\n描述\n\n自动数值格式化\n\n开启后, 图表的数据标签、提示信息, 会根据指标的数值, 自动根据语言环境, 选择合适的格式化方式\n\n格式化规则为设置为十进制数值, 开启compact notation, 最小0位小数, 最大2位小数, 自动四舍五入, 使用浏览器提供的\nIntl.NumberFormatOptions 实现该逻辑.\n\n例如:\n\n当locale为zh-CN: 749740.264会被自动格式化为74.45万\n\n当locale为en-US: 749740.264会被自动格式化为744.5K\n\n\nformat#\n\nType: NumFormat | undefined\n\n描述\n\n\n\ntype#\n\nType: \"number\" | \"percent\" | \"permille\" | \"scientific\" | undefined\n\n描述\n\n\n\nratio#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nsymbol#\n\nType: string | undefined\n\n描述\n\n\n示例:\n\n * 100000 转换为 10万, ratio:10000, symbol:\"万\"\n\n * 100000 转换为 10K, ratio:1000, symbol:\"K\"\n\n * 100000 转换为 100%, ratio:100, symbol:\"%\"\n\n * 100000 转换为 100‰, ratio:1000, symbol:\"‰\"\n\n\nthousandSeparator#\n\nType: boolean | undefined\n\n描述\n\n\n\nsuffix#\n\nType: string | undefined\n\n描述\n\n\n\nprefix#\n\nType: string | undefined\n\n描述\n\n\n\nfractionDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1235, fractionDigits:0 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.6, fractionDigits:1 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, fractionDigits:2 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1230.568, fractionDigits:3 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, fractionDigits:4 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.56780, fractionDigits:5 (roundingMode:halfCeil)\n\n\nsignificantDigits#\n\nType: number | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1000, significantDigits:1\n\n * 1234.5678 转换为 1200, significantDigits:2\n\n * 1234.5678 转换为 1230, significantDigits:3\n\n * 1234.5678 转换为 1234, significantDigits:4\n\n * 1234.5678 转换为 1234.6, significantDigits:5 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.57, significantDigits:6 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.568, significantDigits:7 (roundingMode:halfCeil)\n\n * 1234.5678 转换为 1234.5678, significantDigits:8 (roundingMode:halfCeil)\n\n\nroundingPriority#\n\nType: \"morePrecision\" | \"lessPrecision\" | undefined\n\n描述\n\n\n示例:\n\n * 1234.5678 转换为 1230, significantDigits:3 (roundingPriority:lessPrecision)\n\n * 1234.5678 转换为 1234.5678, significantDigits:3 (roundingPriority:morePrecision)\n\n\nroundingMode#\n\nType: \"floor\" | \"ceil\" | \"expand\" | \"trunc\" | \"halfCeil\" | \"halfFloor\" |\n\"halfExpand\" | \"halfTrunc\" | \"halfEven\" | undefined\n\n描述\n\n\n\nchildren#\n\nType: (Measure | MeasureGroup)[] | undefined\n\n描述\n","routePath":"/option/table/measures","lang":"zh-CN","toc":[{"text":"id","id":"id","depth":2,"charIndex":73},{"text":"alias","id":"alias","depth":2,"charIndex":98},{"text":"autoFormat","id":"autoformat","depth":2,"charIndex":138},{"text":"format","id":"format","depth":2,"charIndex":432},{"text":"type","id":"type","depth":3,"charIndex":476},{"text":"ratio","id":"ratio","depth":3,"charIndex":557},{"text":"symbol","id":"symbol","depth":3,"charIndex":776},{"text":"thousandSeparator","id":"thousandseparator","depth":3,"charIndex":996},{"text":"suffix","id":"suffix","depth":3,"charIndex":1049},{"text":"prefix","id":"prefix","depth":3,"charIndex":1090},{"text":"fractionDigits","id":"fractiondigits","depth":3,"charIndex":1131},{"text":"significantDigits","id":"significantdigits","depth":3,"charIndex":1595},{"text":"roundingPriority","id":"roundingpriority","depth":3,"charIndex":2114},{"text":"roundingMode","id":"roundingmode","depth":3,"charIndex":2356},{"text":"children","id":"children","depth":2,"charIndex":2503}],"frontmatter":{},"version":""},{"title":"selectedBackgroundColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/selectedBackgroundColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"selectedBorderColor","content":"#\n\nType: string | undefined\n\n描述\n","routePath":"/option/table/selectedBorderColor","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"theme","content":"#\n\nType: Theme | undefined\n\n描述\n\n\n示例: 'dark'\n\n'light'\n\n'customThemeName'","routePath":"/option/table/theme","lang":"zh-CN","toc":[],"frontmatter":{},"version":""},{"title":"标题","content":"const Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'dualAxis',\n    dualChartType: [\n      {\n        primary: 'area',\n        secondary: 'scatter',\n      },\n      {\n        primary: 'columnPercent',\n        secondary: 'line',\n      },\n    ],\n    measures: [\n      {\n        id: 'first',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'secondary-profit',\n            children: [{ id: 'profit', alias: '利润' }],\n          },\n          {\n            id: 'primary-sales',\n            children: [{ id: 'sales', alias: '销售额' }],\n          },\n        ],\n      },\n      {\n        id: 'second',\n        alias: '第一个双轴图',\n        children: [\n          {\n            id: 'primary-ratio',\n            children: [{ id: 'ratio', alias: '比率' }],\n          },\n          {\n            id: 'returnRatio',\n            children: [{ id: 'returnRatio', alias: '回报率' }],\n          },\n        ],\n      },\n    ],\n    dataset: [\n      { date: '2019', profit: 10, sales: 100, ratio: 301, returnRatio: 301 },\n      { date: '2020', profit: 30, sales: 3200, ratio: 32, returnRatio: 30 },\n      { date: '2021', profit: 30, sales: 300, ratio: 103, returnRatio: 503 },\n      { date: '2022', profit: 50, sales: 2400, ratio: 30, returnRatio: 24 },\n      { date: '2023', profit: 40, sales: 500, ratio: 305, returnRatio: 305 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n  }\n\n  if (zVSeed.safeParse(vseed).success) {\n    console.log('zVSeed parse success!!!')\n  } else {\n    console.error('zVSeed parse error!!!')\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\n\n\n\n\nimport {\n  registerAll,\n  VSeed,\n  Builder,\n  isPivotChart,\n  isVChart,\n  isPivotTable,\n  isTable,\n  zVSeed,\n  UnfoldDimensionGroupId,\n} from '@visactor/vseed'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const builderRef = useRef<Builder>()\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const builder = Builder.from({ ...vseed, theme })\n    const spec = builder.build()\n    console.log('builder', builder)\n    console.log('builder performance', builder.performance)\n\n    builderRef.current = builder\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      tableInstance.on('legend_item_click', (args) => {\n        console.log('LEGEND_ITEM_CLICK', args)\n        tableInstance.updateFilterRules([\n          {\n            filterKey: UnfoldDimensionGroupId,\n            filteredValues: args.value,\n          },\n        ])\n      })\n\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return (\n    <div\n      ref={ref}\n      style={{ height: 300, width: '100%' }}\n      onClick={() => {\n        console.group(`selected ${vseed.chartType}`)\n        console.log('builder', builderRef.current)\n        console.log('spec', builderRef.current.spec)\n        console.log('vseed', builderRef.current.vseed)\n        console.log('advancedVSeed', builderRef.current.advancedVSeed)\n        console.groupEnd()\n      }}\n    ></div>\n  )\n}\n\nexport default Demo\n","routePath":"/playground/","lang":"zh-CN","toc":[],"frontmatter":{"title":"标题","playgroundDirection":"horizontal","pageType":"custom"},"version":""}]