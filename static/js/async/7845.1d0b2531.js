"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["7845"],{19736:function(e,s,a){a.r(s),a.d(s,{default:()=>o});var n=a(31549),r=a(6603),t=a(49e3);function i(e){let s=Object.assign({h1:"h1",a:"a",h2:"h2",h3:"h3",pre:"pre",code:"code"},(0,r.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"scatter",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#scatter",children:"#"}),"scatter"]}),"\n",(0,n.jsxs)(s.h2,{id:"measures",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#measures",children:"#"}),"measures"]}),"\n",(0,n.jsxs)(s.h3,{id:"散点图measures-1-层",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#散点图measures-1-层",children:"#"}),"散点图(measures 1 层)"]}),"\n",(0,n.jsx)(t.GNS,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const ScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 200, sales: 80 },\n    ],\n    measures: [\n      {\n        id: 'sales',\n        alias: '销售额',\n      },\n      {\n        id: 'profit',\n        alias: '利润',\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    label: {\n      enable: false,\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,n.jsxs)(s.h3,{id:"散点图measures-2-层",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#散点图measures-2-层",children:"#"}),"散点图(measures 2 层)"]}),"\n",(0,n.jsx)(t.GNS,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const ScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20 },\n      { date: '2020', profit: 30, sales: 60 },\n      { date: '2021', profit: 30, sales: 60 },\n      { date: '2022', profit: 50, sales: 100 },\n      { date: '2023', profit: 200, sales: 80 },\n    ],\n    measures: [\n      {\n        id: 'x',\n        children: [\n          {\n            id: 'sales',\n            alias: '销售额',\n          },\n        ],\n      },\n      {\n        id: 'y',\n        children: [\n          {\n            id: 'profit',\n            alias: '利润',\n          },\n        ],\n      },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    label: {\n      enable: false,\n    },\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,n.jsxs)(s.h3,{id:"组合散点图measures-3-层",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#组合散点图measures-3-层",children:"#"}),"组合散点图(measures 3 层)"]}),"\n",(0,n.jsx)(t.IcI,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const CombinationScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 10, sales: 20, rateOfReturn: 0.1 },\n      { date: '2020', profit: 20, sales: 40, rateOfReturn: 0.2 },\n      { date: '2021', profit: 30, sales: 60, rateOfReturn: 0.3 },\n      { date: '2022', profit: 40, sales: 80, rateOfReturn: 0.4 },\n      { date: '2023', profit: 200, sales: 100, rateOfReturn: 0.5 },\n    ],\n    dimensions: [\n      {\n        id: 'date',\n        alias: '日期',\n        location: 'dimension',\n      },\n    ],\n    measures: [\n      {\n        id: 'first',\n        children: [\n          {\n            id: 'salesAndProfit',\n            alias: '销售额与利润',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售额',\n              },\n              {\n                id: 'profit',\n                alias: '利润',\n              },\n            ],\n          },\n          {\n            id: 'ratio',\n            alias: '比率',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售额',\n              },\n              {\n                id: 'rateOfReturn',\n                alias: '回报率',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        id: 'second',\n        children: [\n          {\n            id: 'salesAndProfit',\n            alias: '销售额与利润',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售额',\n              },\n              {\n                id: 'profit',\n                alias: '利润',\n              },\n            ],\n          },\n          {\n            id: 'ratio',\n            alias: '比率',\n            children: [\n              {\n                id: 'sales',\n                alias: '销售额',\n              },\n              {\n                id: 'rateOfReturn',\n                alias: '回报率',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  }\n  return <PivotChart vseed={vseed} />\n})\n"})}),"\n",(0,n.jsxs)(s.h2,{id:"scattermeasures",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#scattermeasures",children:"#"}),"scatterMeasures"]}),"\n",(0,n.jsxs)(s.h3,{id:"散点图scattermeasures-1-项",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#散点图scattermeasures-1-项",children:"#"}),"散点图(scatterMeasures 1 项)"]}),"\n",(0,n.jsx)(t.FYG,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const ScatterMeasures = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 20, sales: 100 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 500 },\n      { date: '2023', profit: 10, sales: 800 },\n    ],\n    scatterMeasures: [\n      {\n        xMeasures: [{ id: 'sales', alias: '销售额' }],\n        yMeasures: [{ id: 'profit', alias: '利润' }],\n      },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,n.jsxs)(s.h3,{id:"散点图scattermeasures-2-项",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#散点图scattermeasures-2-项",children:"#"}),"散点图(scatterMeasures 2 项)"]}),"\n",(0,n.jsx)(t.SA,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const ScatterMeasuresArray = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dataset: [\n      { date: '2019', profit: 20, sales: 100 },\n      { date: '2020', profit: 30, sales: 600 },\n      { date: '2021', profit: 30, sales: 600 },\n      { date: '2022', profit: 50, sales: 500 },\n      { date: '2023', profit: 10, sales: 800 },\n    ],\n    scatterMeasures: [\n      {\n        xMeasures: [{ id: 'sales', alias: '销售额' }],\n        yMeasures: [{ id: 'profit', alias: '利润' }],\n      },\n      {\n        xMeasures: [{ id: 'sales', alias: '销售额' }],\n        yMeasures: [{ id: 'profit', alias: '利润' }],\n      },\n    ],\n  }\n  return <VChartRender vseed={vseed} />\n})\n"})}),"\n",(0,n.jsxs)(s.h2,{id:"透视组合散点图",children:[(0,n.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#透视组合散点图",children:"#"}),"透视组合散点图"]}),"\n",(0,n.jsx)(t.RZs,{}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-tsx",meta:"pure {}",children:"export const PivotScatterChart = memo(() => {\n  const vseed: VSeed = {\n    chartType: 'scatter',\n    dimensions: [\n      { id: 'category', alias: '类别', location: 'dimension' },\n      { id: 'date', alias: '日期', location: 'columnDimension' },\n      { id: 'region', alias: '区域', location: 'rowDimension' },\n    ],\n    measures: [\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n        ],\n      },\n      {\n        id: 'group-sales',\n        alias: '销售额分组',\n        children: [\n          { id: 'sales', alias: '销售额' },\n          { id: 'profit', alias: '利润' },\n        ],\n      },\n    ],\n    label: {\n      enable: false,\n    },\n    dataset: [\n      { date: '2019', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2019', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2019', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2019', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2019', region: 'west', category: 'Household', profit: 50, sales: 240 },\n      { date: '2019', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n\n      { date: '2020', region: 'east', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'east', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'east', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'east', category: 'Household', profit: 50, sales: 240 },\n      { date: '2020', region: 'east', category: 'Personal', profit: 40, sales: 500 },\n      { date: '2020', region: 'west', category: 'Grocery', profit: 10, sales: 100 },\n      { date: '2020', region: 'west', category: 'Beverages', profit: 30, sales: 320 },\n      { date: '2020', region: 'west', category: 'Dairy', profit: 30, sales: 300 },\n      { date: '2020', region: 'west', category: 'Household', profit: 50, sales: 200 },\n      { date: '2020', region: 'west', category: 'Personal', profit: 200, sales: 500 },\n    ],\n\n}\nreturn <PivotChart vseed={vseed} />\n})\n\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,n.jsx)(s,Object.assign({},e,{children:(0,n.jsx)(i,e)})):i(e)}let o=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["zh-CN%2Fgalley%2FchartType%2Fscatter.mdx"]={toc:[{id:"measures",text:"measures",depth:2},{id:"散点图measures-1-层",text:"散点图(measures 1 层)",depth:3},{id:"散点图measures-2-层",text:"散点图(measures 2 层)",depth:3},{id:"组合散点图measures-3-层",text:"组合散点图(measures 3 层)",depth:3},{id:"scattermeasures",text:"scatterMeasures",depth:2},{id:"散点图scattermeasures-1-项",text:"散点图(scatterMeasures 1 项)",depth:3},{id:"散点图scattermeasures-2-项",text:"散点图(scatterMeasures 2 项)",depth:3},{id:"透视组合散点图",text:"透视组合散点图",depth:2}],title:"scatter",headingTitle:"scatter",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=7845.1d0b2531.js.map