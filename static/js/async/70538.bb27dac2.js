"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["70538"],{47807:function(e,n,t){t.r(n),t.d(n,{default:()=>d});var r=t(31549),s=t(6603),a=t(95847);function i(e){let n=Object.assign({h1:"h1",a:"a"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"数值格式",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数值格式",children:"#"}),"数值格式"]}),"\n",(0,r.jsx)(a.Z,{code:"import { useDark } from 'rspress/runtime'\n\nimport { useRef, useEffect } from 'react'\nimport VChart from '@visactor/vchart'\nimport { registerAll, VSeed, Builder, isPivotChart, isVChart, isVTable } from '@visactor/vseed'\nimport { ListTable, PivotChart, register } from '@visactor/vtable'\n\nregisterAll()\nregister.chartModule('vchart', VChart)\n\nconst Demo = () => {\n  const vseed: VSeed = {\n    chartType: 'columnParallel',\n    measures: [\n      {\n        id: 'profit',\n        alias: '利润',\n        autoFormat: false,\n        format: {\n          type: 'number',\n          ratio: 1000,\n          thousandSeparator: true,\n          decimalPlaces: 0,\n          symbol: '千',\n          prefix: '利润',\n          suffix: '$',\n        },\n      },\n      {\n        id: 'sales',\n        alias: '销售额',\n        autoFormat: true,\n      },\n    ],\n    dimensions: [{ id: 'date', alias: '日期',   }],\n    dataset: [\n      { date: '2019', profit: 10000, sales: 200000, discount: 0.5, rateOfReturn: 0.001 },\n      { date: '2020', profit: 20000, sales: 400000, discount: 0.2, rateOfReturn: 0.002 },\n      { date: '2021', profit: 30000, sales: 600000, discount: 0.4, rateOfReturn: 0.003 },\n      { date: '2022', profit: 40000, sales: 800000, discount: 0.2, rateOfReturn: 0.004 },\n      { date: '2023', profit: 50000, sales: 1000000, discount: 0.05, rateOfReturn: 0.005 },\n    ],\n  }\n\n  return <SimpleVSeedRender vseed={vseed} />\n}\n\nconst SimpleVSeedRender = (props: { vseed: VSeed }) => {\n  const { vseed } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const dark = useDark()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const theme = dark ? 'dark' : 'light'\n    const spec = Builder.from({ ...vseed, theme }).build()\n\n    if (isPivotChart(vseed)) {\n      const tableInstance = new PivotChart(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isVChart(vseed)) {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    } else if (isVTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    }\n  }, [vseed, dark])\n\n  return <div ref={ref} style={{ height: 300, width: '100%' }}></div>\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(i,e)})):i(e)}let d=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2FdataFormat.mdx"]={toc:[],title:"数值格式",headingTitle:"数值格式",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=70538.bb27dac2.js.map