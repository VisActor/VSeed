"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["87795"],{1170:function(e,n,t){t.r(n),t.d(n,{default:()=>l});var r=t(31549),a=t(6603),s=t(95847);function c(e){let n=Object.assign({h1:"h1",a:"a"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"图表类型",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#图表类型",children:"#"}),"图表类型"]}),"\n",(0,r.jsx)(s.Z,{code:"import { useRef, useEffect, useState } from 'react'\nimport VChart from '@visactor/vchart'\nimport { ListTable, PivotTable } from '@visactor/vtable'\nimport { registerAll, VSeed, Builder, isTable, isPivotTable } from '@visactor/vseed'\nregisterAll()\n\nconst Demo = () => {\n  const ref = useRef<HTMLDivElement>(null)\n  const [chartType, setChartType] = useState('line')\n  const chartTypes = [\n    'table',\n    'pivotTable',\n    // cartesian\n    'line',\n    'column',\n    'columnPercent',\n    'columnParallel',\n    'bar',\n    'barPercent',\n    'barParallel',\n    'area',\n    'areaPercent',\n    // polar\n    'pie',\n    'donut',\n    'radar',\n    'roseParallel',\n    'rose',\n    'scatter',\n    'dualAxis',\n    // other\n    'funnel',\n    'heatmap',\n  ]\n\n  const changeChartType = (c) => () => {\n    setChartType(c)\n  }\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const vseed: VSeed = {\n      chartType,\n      dataset: [\n        { date: '2019', profit: 10, sales: 100 },\n        { date: '2020', profit: 30, sales: 200 },\n        { date: '2021', profit: 30, sales: 300 },\n        { date: '2022', profit: 50, sales: 400 },\n        { date: '2023', profit: 40, sales: 500 },\n      ],\n    }\n    const builder = Builder.from(vseed)\n    const spec = builder.build()\n\n    if (isTable(vseed)) {\n      const tableInstance = new ListTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else if (isPivotTable(vseed)) {\n      const tableInstance = new PivotTable(ref.current, spec)\n      return () => tableInstance.release()\n    } else {\n      const vchart = new VChart(spec, { dom: ref.current })\n      vchart.renderSync()\n      return () => vchart.release()\n    }\n  }, [chartType])\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        {chartTypes.map((d) => {\n          return (\n            <span key={d} style={{ margin: '0 2px 0 0' }}>\n              <button\n                onClick={changeChartType(d)}\n                style={{ fontSize: 10, padding: '0 2px', border: '1px solid #cccccc' }}\n              >\n                {d}\n              </button>\n            </span>\n          )\n        })}\n      </div>\n      <div ref={ref} style={{ height: 260, width: '100%' }}></div>\n    </div>\n  )\n}\n\nexport default Demo",language:"tsx",direction:"vertical",editorPosition:"left"})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(c,e)})):c(e)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-CN%2Fguide%2Fintro%2FchartTypeSwitch.mdx"]={toc:[],title:"图表类型",headingTitle:"图表类型",frontmatter:{pageType:"doc"}}}}]);
//# sourceMappingURL=87795.3221ed4d.js.map